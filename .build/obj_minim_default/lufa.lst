   1               		.file	"lufa.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keyboard_leds,"ax",@progbits
  12               	keyboard_leds:
  13               	.LFB126:
  14               		.file 1 "tmk_core/protocol/lufa/lufa.c"
   1:tmk_core/protocol/lufa/lufa.c **** /*
   2:tmk_core/protocol/lufa/lufa.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:tmk_core/protocol/lufa/lufa.c ****  * This file is based on:
   4:tmk_core/protocol/lufa/lufa.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:tmk_core/protocol/lufa/lufa.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:tmk_core/protocol/lufa/lufa.c ****  */
   7:tmk_core/protocol/lufa/lufa.c **** 
   8:tmk_core/protocol/lufa/lufa.c **** /*
   9:tmk_core/protocol/lufa/lufa.c ****              LUFA Library
  10:tmk_core/protocol/lufa/lufa.c ****      Copyright (C) Dean Camera, 2012.
  11:tmk_core/protocol/lufa/lufa.c **** 
  12:tmk_core/protocol/lufa/lufa.c ****   dean [at] fourwalledcubicle [dot] com
  13:tmk_core/protocol/lufa/lufa.c ****            www.lufa-lib.org
  14:tmk_core/protocol/lufa/lufa.c **** */
  15:tmk_core/protocol/lufa/lufa.c **** 
  16:tmk_core/protocol/lufa/lufa.c **** /*
  17:tmk_core/protocol/lufa/lufa.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:tmk_core/protocol/lufa/lufa.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:tmk_core/protocol/lufa/lufa.c **** 
  20:tmk_core/protocol/lufa/lufa.c ****   Permission to use, copy, modify, distribute, and sell this
  21:tmk_core/protocol/lufa/lufa.c ****   software and its documentation for any purpose is hereby granted
  22:tmk_core/protocol/lufa/lufa.c ****   without fee, provided that the above copyright notice appear in
  23:tmk_core/protocol/lufa/lufa.c ****   all copies and that both that the copyright notice and this
  24:tmk_core/protocol/lufa/lufa.c ****   permission notice and warranty disclaimer appear in supporting
  25:tmk_core/protocol/lufa/lufa.c ****   documentation, and that the name of the author not be used in
  26:tmk_core/protocol/lufa/lufa.c ****   advertising or publicity pertaining to distribution of the
  27:tmk_core/protocol/lufa/lufa.c ****   software without specific, written prior permission.
  28:tmk_core/protocol/lufa/lufa.c **** 
  29:tmk_core/protocol/lufa/lufa.c ****   The author disclaim all warranties with regard to this
  30:tmk_core/protocol/lufa/lufa.c ****   software, including all implied warranties of merchantability
  31:tmk_core/protocol/lufa/lufa.c ****   and fitness.  In no event shall the author be liable for any
  32:tmk_core/protocol/lufa/lufa.c ****   special, indirect or consequential damages or any damages
  33:tmk_core/protocol/lufa/lufa.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:tmk_core/protocol/lufa/lufa.c ****   in an action of contract, negligence or other tortious action,
  35:tmk_core/protocol/lufa/lufa.c ****   arising out of or in connection with the use or performance of
  36:tmk_core/protocol/lufa/lufa.c ****   this software.
  37:tmk_core/protocol/lufa/lufa.c **** */
  38:tmk_core/protocol/lufa/lufa.c **** 
  39:tmk_core/protocol/lufa/lufa.c **** #include "report.h"
  40:tmk_core/protocol/lufa/lufa.c **** #include "host.h"
  41:tmk_core/protocol/lufa/lufa.c **** #include "host_driver.h"
  42:tmk_core/protocol/lufa/lufa.c **** #include "keyboard.h"
  43:tmk_core/protocol/lufa/lufa.c **** #include "action.h"
  44:tmk_core/protocol/lufa/lufa.c **** #include "led.h"
  45:tmk_core/protocol/lufa/lufa.c **** #include "sendchar.h"
  46:tmk_core/protocol/lufa/lufa.c **** #include "debug.h"
  47:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
  48:tmk_core/protocol/lufa/lufa.c **** #    include "sleep_led.h"
  49:tmk_core/protocol/lufa/lufa.c **** #endif
  50:tmk_core/protocol/lufa/lufa.c **** #include "suspend.h"
  51:tmk_core/protocol/lufa/lufa.c **** 
  52:tmk_core/protocol/lufa/lufa.c **** #include "usb_descriptor.h"
  53:tmk_core/protocol/lufa/lufa.c **** #include "lufa.h"
  54:tmk_core/protocol/lufa/lufa.c **** #include "quantum.h"
  55:tmk_core/protocol/lufa/lufa.c **** #include <util/atomic.h>
  56:tmk_core/protocol/lufa/lufa.c **** #include "outputselect.h"
  57:tmk_core/protocol/lufa/lufa.c **** #include "rgblight_reconfig.h"
  58:tmk_core/protocol/lufa/lufa.c **** 
  59:tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
  60:tmk_core/protocol/lufa/lufa.c **** #    include "keycode_config.h"
  61:tmk_core/protocol/lufa/lufa.c **** 
  62:tmk_core/protocol/lufa/lufa.c **** extern keymap_config_t keymap_config;
  63:tmk_core/protocol/lufa/lufa.c **** #endif
  64:tmk_core/protocol/lufa/lufa.c **** 
  65:tmk_core/protocol/lufa/lufa.c **** #ifdef AUDIO_ENABLE
  66:tmk_core/protocol/lufa/lufa.c **** #    include <audio.h>
  67:tmk_core/protocol/lufa/lufa.c **** #endif
  68:tmk_core/protocol/lufa/lufa.c **** 
  69:tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
  70:tmk_core/protocol/lufa/lufa.c **** #    ifdef MODULE_ADAFRUIT_BLE
  71:tmk_core/protocol/lufa/lufa.c **** #        include "adafruit_ble.h"
  72:tmk_core/protocol/lufa/lufa.c **** #    else
  73:tmk_core/protocol/lufa/lufa.c **** #        include "bluetooth.h"
  74:tmk_core/protocol/lufa/lufa.c **** #    endif
  75:tmk_core/protocol/lufa/lufa.c **** #endif
  76:tmk_core/protocol/lufa/lufa.c **** 
  77:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
  78:tmk_core/protocol/lufa/lufa.c **** #    include "virtser.h"
  79:tmk_core/protocol/lufa/lufa.c **** #endif
  80:tmk_core/protocol/lufa/lufa.c **** 
  81:tmk_core/protocol/lufa/lufa.c **** #if (defined(RGB_MIDI) || defined(RGBLIGHT_ANIMATIONS)) && defined(RGBLIGHT_ENABLE)
  82:tmk_core/protocol/lufa/lufa.c **** #    include "rgblight.h"
  83:tmk_core/protocol/lufa/lufa.c **** #endif
  84:tmk_core/protocol/lufa/lufa.c **** 
  85:tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
  86:tmk_core/protocol/lufa/lufa.c **** #    include "qmk_midi.h"
  87:tmk_core/protocol/lufa/lufa.c **** #endif
  88:tmk_core/protocol/lufa/lufa.c **** 
  89:tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
  90:tmk_core/protocol/lufa/lufa.c **** #    include "raw_hid.h"
  91:tmk_core/protocol/lufa/lufa.c **** #endif
  92:tmk_core/protocol/lufa/lufa.c **** 
  93:tmk_core/protocol/lufa/lufa.c **** uint8_t keyboard_idle = 0;
  94:tmk_core/protocol/lufa/lufa.c **** /* 0: Boot Protocol, 1: Report Protocol(default) */
  95:tmk_core/protocol/lufa/lufa.c **** uint8_t        keyboard_protocol  = 1;
  96:tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_led_stats = 0;
  97:tmk_core/protocol/lufa/lufa.c **** 
  98:tmk_core/protocol/lufa/lufa.c **** static report_keyboard_t keyboard_report_sent;
  99:tmk_core/protocol/lufa/lufa.c **** 
 100:tmk_core/protocol/lufa/lufa.c **** /* Host driver */
 101:tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_leds(void);
 102:tmk_core/protocol/lufa/lufa.c **** static void    send_keyboard(report_keyboard_t *report);
 103:tmk_core/protocol/lufa/lufa.c **** static void    send_mouse(report_mouse_t *report);
 104:tmk_core/protocol/lufa/lufa.c **** static void    send_system(uint16_t data);
 105:tmk_core/protocol/lufa/lufa.c **** static void    send_consumer(uint16_t data);
 106:tmk_core/protocol/lufa/lufa.c **** host_driver_t  lufa_driver = {
 107:tmk_core/protocol/lufa/lufa.c ****     keyboard_leds, send_keyboard, send_mouse, send_system, send_consumer,
 108:tmk_core/protocol/lufa/lufa.c **** };
 109:tmk_core/protocol/lufa/lufa.c **** 
 110:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 111:tmk_core/protocol/lufa/lufa.c **** USB_ClassInfo_CDC_Device_t cdc_device = {
 112:tmk_core/protocol/lufa/lufa.c ****     .Config =
 113:tmk_core/protocol/lufa/lufa.c ****         {
 114:tmk_core/protocol/lufa/lufa.c ****             .ControlInterfaceNumber = CCI_INTERFACE,
 115:tmk_core/protocol/lufa/lufa.c ****             .DataINEndpoint =
 116:tmk_core/protocol/lufa/lufa.c ****                 {
 117:tmk_core/protocol/lufa/lufa.c ****                     .Address = CDC_IN_EPADDR,
 118:tmk_core/protocol/lufa/lufa.c ****                     .Size    = CDC_EPSIZE,
 119:tmk_core/protocol/lufa/lufa.c ****                     .Banks   = 1,
 120:tmk_core/protocol/lufa/lufa.c ****                 },
 121:tmk_core/protocol/lufa/lufa.c ****             .DataOUTEndpoint =
 122:tmk_core/protocol/lufa/lufa.c ****                 {
 123:tmk_core/protocol/lufa/lufa.c ****                     .Address = CDC_OUT_EPADDR,
 124:tmk_core/protocol/lufa/lufa.c ****                     .Size    = CDC_EPSIZE,
 125:tmk_core/protocol/lufa/lufa.c ****                     .Banks   = 1,
 126:tmk_core/protocol/lufa/lufa.c ****                 },
 127:tmk_core/protocol/lufa/lufa.c ****             .NotificationEndpoint =
 128:tmk_core/protocol/lufa/lufa.c ****                 {
 129:tmk_core/protocol/lufa/lufa.c ****                     .Address = CDC_NOTIFICATION_EPADDR,
 130:tmk_core/protocol/lufa/lufa.c ****                     .Size    = CDC_NOTIFICATION_EPSIZE,
 131:tmk_core/protocol/lufa/lufa.c ****                     .Banks   = 1,
 132:tmk_core/protocol/lufa/lufa.c ****                 },
 133:tmk_core/protocol/lufa/lufa.c ****         },
 134:tmk_core/protocol/lufa/lufa.c **** };
 135:tmk_core/protocol/lufa/lufa.c **** #endif
 136:tmk_core/protocol/lufa/lufa.c **** 
 137:tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
 138:tmk_core/protocol/lufa/lufa.c **** 
 139:tmk_core/protocol/lufa/lufa.c **** /** \brief Raw HID Send
 140:tmk_core/protocol/lufa/lufa.c ****  *
 141:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 142:tmk_core/protocol/lufa/lufa.c ****  */
 143:tmk_core/protocol/lufa/lufa.c **** void raw_hid_send(uint8_t *data, uint8_t length) {
 144:tmk_core/protocol/lufa/lufa.c ****     // TODO: implement variable size packet
 145:tmk_core/protocol/lufa/lufa.c ****     if (length != RAW_EPSIZE) {
 146:tmk_core/protocol/lufa/lufa.c ****         return;
 147:tmk_core/protocol/lufa/lufa.c ****     }
 148:tmk_core/protocol/lufa/lufa.c **** 
 149:tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured) {
 150:tmk_core/protocol/lufa/lufa.c ****         return;
 151:tmk_core/protocol/lufa/lufa.c ****     }
 152:tmk_core/protocol/lufa/lufa.c **** 
 153:tmk_core/protocol/lufa/lufa.c ****     // TODO: decide if we allow calls to raw_hid_send() in the middle
 154:tmk_core/protocol/lufa/lufa.c ****     // of other endpoint usage.
 155:tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
 156:tmk_core/protocol/lufa/lufa.c **** 
 157:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(RAW_IN_EPNUM);
 158:tmk_core/protocol/lufa/lufa.c **** 
 159:tmk_core/protocol/lufa/lufa.c ****     // Check to see if the host is ready to accept another packet
 160:tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady()) {
 161:tmk_core/protocol/lufa/lufa.c ****         // Write data
 162:tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(data, RAW_EPSIZE, NULL);
 163:tmk_core/protocol/lufa/lufa.c ****         // Finalize the stream transfer to send the last packet
 164:tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 165:tmk_core/protocol/lufa/lufa.c ****     }
 166:tmk_core/protocol/lufa/lufa.c **** 
 167:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 168:tmk_core/protocol/lufa/lufa.c **** }
 169:tmk_core/protocol/lufa/lufa.c **** 
 170:tmk_core/protocol/lufa/lufa.c **** /** \brief Raw HID Receive
 171:tmk_core/protocol/lufa/lufa.c ****  *
 172:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 173:tmk_core/protocol/lufa/lufa.c ****  */
 174:tmk_core/protocol/lufa/lufa.c **** __attribute__((weak)) void raw_hid_receive(uint8_t *data, uint8_t length) {
 175:tmk_core/protocol/lufa/lufa.c ****     // Users should #include "raw_hid.h" in their own code
 176:tmk_core/protocol/lufa/lufa.c ****     // and implement this function there. Leave this as weak linkage
 177:tmk_core/protocol/lufa/lufa.c ****     // so users can opt to not handle data coming in.
 178:tmk_core/protocol/lufa/lufa.c **** }
 179:tmk_core/protocol/lufa/lufa.c **** 
 180:tmk_core/protocol/lufa/lufa.c **** /** \brief Raw HID Task
 181:tmk_core/protocol/lufa/lufa.c ****  *
 182:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 183:tmk_core/protocol/lufa/lufa.c ****  */
 184:tmk_core/protocol/lufa/lufa.c **** static void raw_hid_task(void) {
 185:tmk_core/protocol/lufa/lufa.c ****     // Create a temporary buffer to hold the read in data from the host
 186:tmk_core/protocol/lufa/lufa.c ****     uint8_t data[RAW_EPSIZE];
 187:tmk_core/protocol/lufa/lufa.c ****     bool    data_read = false;
 188:tmk_core/protocol/lufa/lufa.c **** 
 189:tmk_core/protocol/lufa/lufa.c ****     // Device must be connected and configured for the task to run
 190:tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured) return;
 191:tmk_core/protocol/lufa/lufa.c **** 
 192:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(RAW_OUT_EPNUM);
 193:tmk_core/protocol/lufa/lufa.c **** 
 194:tmk_core/protocol/lufa/lufa.c ****     // Check to see if a packet has been sent from the host
 195:tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsOUTReceived()) {
 196:tmk_core/protocol/lufa/lufa.c ****         // Check to see if the packet contains data
 197:tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsReadWriteAllowed()) {
 198:tmk_core/protocol/lufa/lufa.c ****             /* Read data */
 199:tmk_core/protocol/lufa/lufa.c ****             Endpoint_Read_Stream_LE(data, sizeof(data), NULL);
 200:tmk_core/protocol/lufa/lufa.c ****             data_read = true;
 201:tmk_core/protocol/lufa/lufa.c ****         }
 202:tmk_core/protocol/lufa/lufa.c **** 
 203:tmk_core/protocol/lufa/lufa.c ****         // Finalize the stream transfer to receive the last packet
 204:tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearOUT();
 205:tmk_core/protocol/lufa/lufa.c **** 
 206:tmk_core/protocol/lufa/lufa.c ****         if (data_read) {
 207:tmk_core/protocol/lufa/lufa.c ****             raw_hid_receive(data, sizeof(data));
 208:tmk_core/protocol/lufa/lufa.c ****         }
 209:tmk_core/protocol/lufa/lufa.c ****     }
 210:tmk_core/protocol/lufa/lufa.c **** }
 211:tmk_core/protocol/lufa/lufa.c **** #endif
 212:tmk_core/protocol/lufa/lufa.c **** 
 213:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 214:tmk_core/protocol/lufa/lufa.c ****  * Console
 215:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 216:tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 217:tmk_core/protocol/lufa/lufa.c **** /** \brief Console Task
 218:tmk_core/protocol/lufa/lufa.c ****  *
 219:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 220:tmk_core/protocol/lufa/lufa.c ****  */
 221:tmk_core/protocol/lufa/lufa.c **** static void Console_Task(void) {
 222:tmk_core/protocol/lufa/lufa.c ****     /* Device must be connected and configured for the task to run */
 223:tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured) return;
 224:tmk_core/protocol/lufa/lufa.c **** 
 225:tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
 226:tmk_core/protocol/lufa/lufa.c **** 
 227:tmk_core/protocol/lufa/lufa.c **** #    if 0
 228:tmk_core/protocol/lufa/lufa.c ****     // TODO: impl receivechar()/recvchar()
 229:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_OUT_EPNUM);
 230:tmk_core/protocol/lufa/lufa.c **** 
 231:tmk_core/protocol/lufa/lufa.c ****     /* Check to see if a packet has been sent from the host */
 232:tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsOUTReceived())
 233:tmk_core/protocol/lufa/lufa.c ****     {
 234:tmk_core/protocol/lufa/lufa.c ****         /* Check to see if the packet contains data */
 235:tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsReadWriteAllowed())
 236:tmk_core/protocol/lufa/lufa.c ****         {
 237:tmk_core/protocol/lufa/lufa.c ****             /* Create a temporary buffer to hold the read in report from the host */
 238:tmk_core/protocol/lufa/lufa.c ****             uint8_t ConsoleData[CONSOLE_EPSIZE];
 239:tmk_core/protocol/lufa/lufa.c **** 
 240:tmk_core/protocol/lufa/lufa.c ****             /* Read Console Report Data */
 241:tmk_core/protocol/lufa/lufa.c ****             Endpoint_Read_Stream_LE(&ConsoleData, sizeof(ConsoleData), NULL);
 242:tmk_core/protocol/lufa/lufa.c **** 
 243:tmk_core/protocol/lufa/lufa.c ****             /* Process Console Report Data */
 244:tmk_core/protocol/lufa/lufa.c ****             //ProcessConsoleHIDReport(ConsoleData);
 245:tmk_core/protocol/lufa/lufa.c ****         }
 246:tmk_core/protocol/lufa/lufa.c **** 
 247:tmk_core/protocol/lufa/lufa.c ****         /* Finalize the stream transfer to send the last packet */
 248:tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearOUT();
 249:tmk_core/protocol/lufa/lufa.c ****     }
 250:tmk_core/protocol/lufa/lufa.c **** #    endif
 251:tmk_core/protocol/lufa/lufa.c **** 
 252:tmk_core/protocol/lufa/lufa.c ****     /* IN packet */
 253:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_IN_EPNUM);
 254:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 255:tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 256:tmk_core/protocol/lufa/lufa.c ****         return;
 257:tmk_core/protocol/lufa/lufa.c ****     }
 258:tmk_core/protocol/lufa/lufa.c **** 
 259:tmk_core/protocol/lufa/lufa.c ****     // fill empty bank
 260:tmk_core/protocol/lufa/lufa.c ****     while (Endpoint_IsReadWriteAllowed()) Endpoint_Write_8(0);
 261:tmk_core/protocol/lufa/lufa.c **** 
 262:tmk_core/protocol/lufa/lufa.c ****     // flash senchar packet
 263:tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady()) {
 264:tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 265:tmk_core/protocol/lufa/lufa.c ****     }
 266:tmk_core/protocol/lufa/lufa.c **** 
 267:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 268:tmk_core/protocol/lufa/lufa.c **** }
 269:tmk_core/protocol/lufa/lufa.c **** #endif
 270:tmk_core/protocol/lufa/lufa.c **** 
 271:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 272:tmk_core/protocol/lufa/lufa.c ****  * USB Events
 273:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 274:tmk_core/protocol/lufa/lufa.c **** /*
 275:tmk_core/protocol/lufa/lufa.c ****  * Event Order of Plug in:
 276:tmk_core/protocol/lufa/lufa.c ****  * 0) EVENT_USB_Device_Connect
 277:tmk_core/protocol/lufa/lufa.c ****  * 1) EVENT_USB_Device_Suspend
 278:tmk_core/protocol/lufa/lufa.c ****  * 2) EVENT_USB_Device_Reset
 279:tmk_core/protocol/lufa/lufa.c ****  * 3) EVENT_USB_Device_Wake
 280:tmk_core/protocol/lufa/lufa.c ****  */
 281:tmk_core/protocol/lufa/lufa.c **** /** \brief Event USB Device Connect
 282:tmk_core/protocol/lufa/lufa.c ****  *
 283:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 284:tmk_core/protocol/lufa/lufa.c ****  */
 285:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Connect(void) {
 286:tmk_core/protocol/lufa/lufa.c ****     print("[C]");
 287:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 288:tmk_core/protocol/lufa/lufa.c ****     if (!USB_IsInitialized) {
 289:tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 290:tmk_core/protocol/lufa/lufa.c ****         USB_Init();
 291:tmk_core/protocol/lufa/lufa.c ****         USB_Device_EnableSOFEvents();
 292:tmk_core/protocol/lufa/lufa.c ****     }
 293:tmk_core/protocol/lufa/lufa.c **** }
 294:tmk_core/protocol/lufa/lufa.c **** 
 295:tmk_core/protocol/lufa/lufa.c **** /** \brief Event USB Device Connect
 296:tmk_core/protocol/lufa/lufa.c ****  *
 297:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 298:tmk_core/protocol/lufa/lufa.c ****  */
 299:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Disconnect(void) {
 300:tmk_core/protocol/lufa/lufa.c ****     print("[D]");
 301:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 302:tmk_core/protocol/lufa/lufa.c ****     USB_IsInitialized = false;
 303:tmk_core/protocol/lufa/lufa.c ****     /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 304:tmk_core/protocol/lufa/lufa.c ****         if (USB_IsInitialized) {
 305:tmk_core/protocol/lufa/lufa.c ****             USB_Disable();  // Disable all interrupts
 306:tmk_core/protocol/lufa/lufa.c ****         USB_Controller_Enable();
 307:tmk_core/protocol/lufa/lufa.c ****             USB_INT_Enable(USB_INT_VBUSTI);
 308:tmk_core/protocol/lufa/lufa.c ****         }
 309:tmk_core/protocol/lufa/lufa.c ****     */
 310:tmk_core/protocol/lufa/lufa.c **** }
 311:tmk_core/protocol/lufa/lufa.c **** 
 312:tmk_core/protocol/lufa/lufa.c **** /** \brief Event USB Device Connect
 313:tmk_core/protocol/lufa/lufa.c ****  *
 314:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 315:tmk_core/protocol/lufa/lufa.c ****  */
 316:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Reset(void) { print("[R]"); }
 317:tmk_core/protocol/lufa/lufa.c **** 
 318:tmk_core/protocol/lufa/lufa.c **** /** \brief Event USB Device Connect
 319:tmk_core/protocol/lufa/lufa.c ****  *
 320:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 321:tmk_core/protocol/lufa/lufa.c ****  */
 322:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Suspend() {
 323:tmk_core/protocol/lufa/lufa.c ****     print("[S]");
 324:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 325:tmk_core/protocol/lufa/lufa.c ****     sleep_led_enable();
 326:tmk_core/protocol/lufa/lufa.c **** #endif
 327:tmk_core/protocol/lufa/lufa.c **** }
 328:tmk_core/protocol/lufa/lufa.c **** 
 329:tmk_core/protocol/lufa/lufa.c **** /** \brief Event USB Device Connect
 330:tmk_core/protocol/lufa/lufa.c ****  *
 331:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 332:tmk_core/protocol/lufa/lufa.c ****  */
 333:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_WakeUp() {
 334:tmk_core/protocol/lufa/lufa.c ****     print("[W]");
 335:tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 336:tmk_core/protocol/lufa/lufa.c **** 
 337:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 338:tmk_core/protocol/lufa/lufa.c ****     sleep_led_disable();
 339:tmk_core/protocol/lufa/lufa.c ****     // NOTE: converters may not accept this
 340:tmk_core/protocol/lufa/lufa.c ****     led_set(host_keyboard_leds());
 341:tmk_core/protocol/lufa/lufa.c **** #endif
 342:tmk_core/protocol/lufa/lufa.c **** }
 343:tmk_core/protocol/lufa/lufa.c **** 
 344:tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 345:tmk_core/protocol/lufa/lufa.c **** static bool console_flush = false;
 346:tmk_core/protocol/lufa/lufa.c **** #    define CONSOLE_FLUSH_SET(b)                                     \
 347:tmk_core/protocol/lufa/lufa.c ****         do {                                                         \
 348:tmk_core/protocol/lufa/lufa.c ****             ATOMIC_BLOCK(ATOMIC_RESTORESTATE) { console_flush = b; } \
 349:tmk_core/protocol/lufa/lufa.c ****         } while (0)
 350:tmk_core/protocol/lufa/lufa.c **** 
 351:tmk_core/protocol/lufa/lufa.c **** /** \brief Event USB Device Start Of Frame
 352:tmk_core/protocol/lufa/lufa.c ****  *
 353:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 354:tmk_core/protocol/lufa/lufa.c ****  * called every 1ms
 355:tmk_core/protocol/lufa/lufa.c ****  */
 356:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_StartOfFrame(void) {
 357:tmk_core/protocol/lufa/lufa.c ****     static uint8_t count;
 358:tmk_core/protocol/lufa/lufa.c ****     if (++count % 50) return;
 359:tmk_core/protocol/lufa/lufa.c ****     count = 0;
 360:tmk_core/protocol/lufa/lufa.c **** 
 361:tmk_core/protocol/lufa/lufa.c ****     if (!console_flush) return;
 362:tmk_core/protocol/lufa/lufa.c ****     Console_Task();
 363:tmk_core/protocol/lufa/lufa.c ****     console_flush = false;
 364:tmk_core/protocol/lufa/lufa.c **** }
 365:tmk_core/protocol/lufa/lufa.c **** 
 366:tmk_core/protocol/lufa/lufa.c **** #endif
 367:tmk_core/protocol/lufa/lufa.c **** 
 368:tmk_core/protocol/lufa/lufa.c **** /** \brief Event handler for the USB_ConfigurationChanged event.
 369:tmk_core/protocol/lufa/lufa.c ****  *
 370:tmk_core/protocol/lufa/lufa.c ****  * This is fired when the host sets the current configuration of the USB device after enumeration.
 371:tmk_core/protocol/lufa/lufa.c ****  *
 372:tmk_core/protocol/lufa/lufa.c ****  * ATMega32u2 supports dual bank(ping-pong mode) only on endpoint 3 and 4,
 373:tmk_core/protocol/lufa/lufa.c ****  * it is safe to use single bank for all endpoints.
 374:tmk_core/protocol/lufa/lufa.c ****  */
 375:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_ConfigurationChanged(void) {
 376:tmk_core/protocol/lufa/lufa.c ****     bool ConfigSuccess = true;
 377:tmk_core/protocol/lufa/lufa.c **** 
 378:tmk_core/protocol/lufa/lufa.c ****     /* Setup Keyboard HID Report Endpoints */
 379:tmk_core/protocol/lufa/lufa.c **** #ifndef KEYBOARD_SHARED_EP
 380:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(KEYBOARD_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN, KEYBOAR
 381:tmk_core/protocol/lufa/lufa.c **** #endif
 382:tmk_core/protocol/lufa/lufa.c **** 
 383:tmk_core/protocol/lufa/lufa.c **** #if defined(MOUSE_ENABLE) && !defined(MOUSE_SHARED_EP)
 384:tmk_core/protocol/lufa/lufa.c ****     /* Setup Mouse HID Report Endpoint */
 385:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(MOUSE_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN, MOUSE_EPSI
 386:tmk_core/protocol/lufa/lufa.c **** #endif
 387:tmk_core/protocol/lufa/lufa.c **** 
 388:tmk_core/protocol/lufa/lufa.c **** #ifdef SHARED_EP_ENABLE
 389:tmk_core/protocol/lufa/lufa.c ****     /* Setup Shared HID Report Endpoint */
 390:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(SHARED_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN, SHARED_EP
 391:tmk_core/protocol/lufa/lufa.c **** #endif
 392:tmk_core/protocol/lufa/lufa.c **** 
 393:tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
 394:tmk_core/protocol/lufa/lufa.c ****     /* Setup Raw HID Report Endpoints */
 395:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(RAW_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN, RAW_EPSIZE, 
 396:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(RAW_OUT_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_OUT, RAW_EPSIZE
 397:tmk_core/protocol/lufa/lufa.c **** #endif
 398:tmk_core/protocol/lufa/lufa.c **** 
 399:tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 400:tmk_core/protocol/lufa/lufa.c ****     /* Setup Console HID Report Endpoints */
 401:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(CONSOLE_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN, CONSOLE_
 402:tmk_core/protocol/lufa/lufa.c **** #    if 0
 403:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(CONSOLE_OUT_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_OUT,
 404:tmk_core/protocol/lufa/lufa.c ****                                      CONSOLE_EPSIZE, ENDPOINT_BANK_SINGLE);
 405:tmk_core/protocol/lufa/lufa.c **** #    endif
 406:tmk_core/protocol/lufa/lufa.c **** #endif
 407:tmk_core/protocol/lufa/lufa.c **** 
 408:tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 409:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(MIDI_STREAM_IN_EPADDR, EP_TYPE_BULK, MIDI_STREAM_EP
 410:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(MIDI_STREAM_OUT_EPADDR, EP_TYPE_BULK, MIDI_STREAM_E
 411:tmk_core/protocol/lufa/lufa.c **** #endif
 412:tmk_core/protocol/lufa/lufa.c **** 
 413:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 414:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_NOTIFICATION_EPADDR, EP_TYPE_INTERRUPT, CDC_NOT
 415:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_OUT_EPADDR, EP_TYPE_BULK, CDC_EPSIZE, ENDPOINT_
 416:tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_IN_EPADDR, EP_TYPE_BULK, CDC_EPSIZE, ENDPOINT_B
 417:tmk_core/protocol/lufa/lufa.c **** #endif
 418:tmk_core/protocol/lufa/lufa.c **** }
 419:tmk_core/protocol/lufa/lufa.c **** 
 420:tmk_core/protocol/lufa/lufa.c **** /* FIXME: Expose this table in the docs somehow
 421:tmk_core/protocol/lufa/lufa.c **** Appendix G: HID Request Support Requirements
 422:tmk_core/protocol/lufa/lufa.c **** 
 423:tmk_core/protocol/lufa/lufa.c **** The following table enumerates the requests that need to be supported by various types of HID class
 424:tmk_core/protocol/lufa/lufa.c **** 
 425:tmk_core/protocol/lufa/lufa.c **** Device type     GetReport   SetReport   GetIdle     SetIdle     GetProtocol SetProtocol
 426:tmk_core/protocol/lufa/lufa.c **** ------------------------------------------------------------------------------------------
 427:tmk_core/protocol/lufa/lufa.c **** Boot Mouse      Required    Optional    Optional    Optional    Required    Required
 428:tmk_core/protocol/lufa/lufa.c **** Non-Boot Mouse  Required    Optional    Optional    Optional    Optional    Optional
 429:tmk_core/protocol/lufa/lufa.c **** Boot Keyboard   Required    Optional    Required    Required    Required    Required
 430:tmk_core/protocol/lufa/lufa.c **** Non-Boot Keybrd Required    Optional    Required    Required    Optional    Optional
 431:tmk_core/protocol/lufa/lufa.c **** Other Device    Required    Optional    Optional    Optional    Optional    Optional
 432:tmk_core/protocol/lufa/lufa.c **** */
 433:tmk_core/protocol/lufa/lufa.c **** /** \brief Event handler for the USB_ControlRequest event.
 434:tmk_core/protocol/lufa/lufa.c ****  *
 435:tmk_core/protocol/lufa/lufa.c ****  *  This is fired before passing along unhandled control requests to the library for processing int
 436:tmk_core/protocol/lufa/lufa.c ****  */
 437:tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_ControlRequest(void) {
 438:tmk_core/protocol/lufa/lufa.c ****     uint8_t *ReportData = NULL;
 439:tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 440:tmk_core/protocol/lufa/lufa.c **** 
 441:tmk_core/protocol/lufa/lufa.c ****     /* Handle HID Class specific requests */
 442:tmk_core/protocol/lufa/lufa.c ****     switch (USB_ControlRequest.bRequest) {
 443:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetReport:
 444:tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 445:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 446:tmk_core/protocol/lufa/lufa.c **** 
 447:tmk_core/protocol/lufa/lufa.c ****                 // Interface
 448:tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 449:tmk_core/protocol/lufa/lufa.c ****                     case KEYBOARD_INTERFACE:
 450:tmk_core/protocol/lufa/lufa.c ****                         // TODO: test/check
 451:tmk_core/protocol/lufa/lufa.c ****                         ReportData = (uint8_t *)&keyboard_report_sent;
 452:tmk_core/protocol/lufa/lufa.c ****                         ReportSize = sizeof(keyboard_report_sent);
 453:tmk_core/protocol/lufa/lufa.c ****                         break;
 454:tmk_core/protocol/lufa/lufa.c ****                 }
 455:tmk_core/protocol/lufa/lufa.c **** 
 456:tmk_core/protocol/lufa/lufa.c ****                 /* Write the report data to the control endpoint */
 457:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_Control_Stream_LE(ReportData, ReportSize);
 458:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearOUT();
 459:tmk_core/protocol/lufa/lufa.c ****             }
 460:tmk_core/protocol/lufa/lufa.c **** 
 461:tmk_core/protocol/lufa/lufa.c ****             break;
 462:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetReport:
 463:tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 464:tmk_core/protocol/lufa/lufa.c ****                 // Interface
 465:tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 466:tmk_core/protocol/lufa/lufa.c ****                     case KEYBOARD_INTERFACE:
 467:tmk_core/protocol/lufa/lufa.c **** #if defined(SHARED_EP_ENABLE) && !defined(KEYBOARD_SHARED_EP)
 468:tmk_core/protocol/lufa/lufa.c ****                     case SHARED_INTERFACE:
 469:tmk_core/protocol/lufa/lufa.c **** #endif
 470:tmk_core/protocol/lufa/lufa.c ****                         Endpoint_ClearSETUP();
 471:tmk_core/protocol/lufa/lufa.c **** 
 472:tmk_core/protocol/lufa/lufa.c ****                         while (!(Endpoint_IsOUTReceived())) {
 473:tmk_core/protocol/lufa/lufa.c ****                             if (USB_DeviceState == DEVICE_STATE_Unattached) return;
 474:tmk_core/protocol/lufa/lufa.c ****                         }
 475:tmk_core/protocol/lufa/lufa.c **** 
 476:tmk_core/protocol/lufa/lufa.c ****                         if (Endpoint_BytesInEndpoint() == 2) {
 477:tmk_core/protocol/lufa/lufa.c ****                             uint8_t report_id = Endpoint_Read_8();
 478:tmk_core/protocol/lufa/lufa.c **** 
 479:tmk_core/protocol/lufa/lufa.c ****                             if (report_id == REPORT_ID_KEYBOARD || report_id == REPORT_ID_NKRO) {
 480:tmk_core/protocol/lufa/lufa.c ****                                 keyboard_led_stats = Endpoint_Read_8();
 481:tmk_core/protocol/lufa/lufa.c ****                             }
 482:tmk_core/protocol/lufa/lufa.c ****                         } else {
 483:tmk_core/protocol/lufa/lufa.c ****                             keyboard_led_stats = Endpoint_Read_8();
 484:tmk_core/protocol/lufa/lufa.c ****                         }
 485:tmk_core/protocol/lufa/lufa.c **** 
 486:tmk_core/protocol/lufa/lufa.c ****                         Endpoint_ClearOUT();
 487:tmk_core/protocol/lufa/lufa.c ****                         Endpoint_ClearStatusStage();
 488:tmk_core/protocol/lufa/lufa.c ****                         break;
 489:tmk_core/protocol/lufa/lufa.c ****                 }
 490:tmk_core/protocol/lufa/lufa.c ****             }
 491:tmk_core/protocol/lufa/lufa.c **** 
 492:tmk_core/protocol/lufa/lufa.c ****             break;
 493:tmk_core/protocol/lufa/lufa.c **** 
 494:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetProtocol:
 495:tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 496:tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 497:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 498:tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsINReady()))
 499:tmk_core/protocol/lufa/lufa.c ****                         ;
 500:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 501:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearIN();
 502:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 503:tmk_core/protocol/lufa/lufa.c ****                 }
 504:tmk_core/protocol/lufa/lufa.c ****             }
 505:tmk_core/protocol/lufa/lufa.c **** 
 506:tmk_core/protocol/lufa/lufa.c ****             break;
 507:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetProtocol:
 508:tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 509:tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 510:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 511:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 512:tmk_core/protocol/lufa/lufa.c **** 
 513:tmk_core/protocol/lufa/lufa.c ****                     keyboard_protocol = (USB_ControlRequest.wValue & 0xFF);
 514:tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 515:tmk_core/protocol/lufa/lufa.c ****                 }
 516:tmk_core/protocol/lufa/lufa.c ****             }
 517:tmk_core/protocol/lufa/lufa.c **** 
 518:tmk_core/protocol/lufa/lufa.c ****             break;
 519:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetIdle:
 520:tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 521:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 522:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 523:tmk_core/protocol/lufa/lufa.c **** 
 524:tmk_core/protocol/lufa/lufa.c ****                 keyboard_idle = ((USB_ControlRequest.wValue & 0xFF00) >> 8);
 525:tmk_core/protocol/lufa/lufa.c ****             }
 526:tmk_core/protocol/lufa/lufa.c **** 
 527:tmk_core/protocol/lufa/lufa.c ****             break;
 528:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetIdle:
 529:tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 530:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 531:tmk_core/protocol/lufa/lufa.c ****                 while (!(Endpoint_IsINReady()))
 532:tmk_core/protocol/lufa/lufa.c ****                     ;
 533:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 534:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearIN();
 535:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 536:tmk_core/protocol/lufa/lufa.c ****             }
 537:tmk_core/protocol/lufa/lufa.c **** 
 538:tmk_core/protocol/lufa/lufa.c ****             break;
 539:tmk_core/protocol/lufa/lufa.c ****     }
 540:tmk_core/protocol/lufa/lufa.c **** 
 541:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 542:tmk_core/protocol/lufa/lufa.c ****     CDC_Device_ProcessControlRequest(&cdc_device);
 543:tmk_core/protocol/lufa/lufa.c **** #endif
 544:tmk_core/protocol/lufa/lufa.c **** }
 545:tmk_core/protocol/lufa/lufa.c **** 
 546:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 547:tmk_core/protocol/lufa/lufa.c ****  * Host driver
 548:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 549:tmk_core/protocol/lufa/lufa.c **** /** \brief Keyboard LEDs
 550:tmk_core/protocol/lufa/lufa.c ****  *
 551:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 552:tmk_core/protocol/lufa/lufa.c ****  */
 553:tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_leds(void) { return keyboard_led_stats; }
  15               		.loc 1 553 36 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               		.loc 1 553 38 view .LVU1
  22               		.loc 1 553 1 is_stmt 0 view .LVU2
  23 0000 8091 0000 		lds r24,keyboard_led_stats
  24               	/* epilogue start */
  25 0004 0895      		ret
  26               		.cfi_endproc
  27               	.LFE126:
  29               		.section	.text.sendchar,"ax",@progbits
  30               	.global	sendchar
  32               	sendchar:
  33               	.LVL0:
  34               	.LFB131:
 554:tmk_core/protocol/lufa/lufa.c **** 
 555:tmk_core/protocol/lufa/lufa.c **** /** \brief Send Keyboard
 556:tmk_core/protocol/lufa/lufa.c ****  *
 557:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 558:tmk_core/protocol/lufa/lufa.c ****  */
 559:tmk_core/protocol/lufa/lufa.c **** static void send_keyboard(report_keyboard_t *report) {
 560:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 561:tmk_core/protocol/lufa/lufa.c ****     uint8_t where   = where_to_send();
 562:tmk_core/protocol/lufa/lufa.c **** 
 563:tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 564:tmk_core/protocol/lufa/lufa.c ****     if (where == OUTPUT_BLUETOOTH || where == OUTPUT_USB_AND_BT) {
 565:tmk_core/protocol/lufa/lufa.c **** #    ifdef MODULE_ADAFRUIT_BLE
 566:tmk_core/protocol/lufa/lufa.c ****         adafruit_ble_send_keys(report->mods, report->keys, sizeof(report->keys));
 567:tmk_core/protocol/lufa/lufa.c **** #    elif MODULE_RN42
 568:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0xFD);
 569:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x09);
 570:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x01);
 571:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->mods);
 572:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->reserved);
 573:tmk_core/protocol/lufa/lufa.c ****         for (uint8_t i = 0; i < KEYBOARD_REPORT_KEYS; i++) {
 574:tmk_core/protocol/lufa/lufa.c ****             bluefruit_serial_send(report->keys[i]);
 575:tmk_core/protocol/lufa/lufa.c ****         }
 576:tmk_core/protocol/lufa/lufa.c **** #    else
 577:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0xFD);
 578:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->mods);
 579:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->reserved);
 580:tmk_core/protocol/lufa/lufa.c ****         for (uint8_t i = 0; i < KEYBOARD_REPORT_KEYS; i++) {
 581:tmk_core/protocol/lufa/lufa.c ****             bluefruit_serial_send(report->keys[i]);
 582:tmk_core/protocol/lufa/lufa.c ****         }
 583:tmk_core/protocol/lufa/lufa.c **** #    endif
 584:tmk_core/protocol/lufa/lufa.c ****     }
 585:tmk_core/protocol/lufa/lufa.c **** #endif
 586:tmk_core/protocol/lufa/lufa.c **** 
 587:tmk_core/protocol/lufa/lufa.c ****     if (where != OUTPUT_USB && where != OUTPUT_USB_AND_BT) {
 588:tmk_core/protocol/lufa/lufa.c ****         return;
 589:tmk_core/protocol/lufa/lufa.c ****     }
 590:tmk_core/protocol/lufa/lufa.c **** 
 591:tmk_core/protocol/lufa/lufa.c ****     /* Select the Keyboard Report Endpoint */
 592:tmk_core/protocol/lufa/lufa.c ****     uint8_t ep   = KEYBOARD_IN_EPNUM;
 593:tmk_core/protocol/lufa/lufa.c ****     uint8_t size = KEYBOARD_REPORT_SIZE;
 594:tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 595:tmk_core/protocol/lufa/lufa.c ****     if (keyboard_protocol && keymap_config.nkro) {
 596:tmk_core/protocol/lufa/lufa.c ****         ep   = SHARED_IN_EPNUM;
 597:tmk_core/protocol/lufa/lufa.c ****         size = sizeof(struct nkro_report);
 598:tmk_core/protocol/lufa/lufa.c ****     }
 599:tmk_core/protocol/lufa/lufa.c **** #endif
 600:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 601:tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 602:tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 603:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 604:tmk_core/protocol/lufa/lufa.c **** 
 605:tmk_core/protocol/lufa/lufa.c ****     /* If we're in Boot Protocol, don't send any report ID or other funky fields */
 606:tmk_core/protocol/lufa/lufa.c ****     if (!keyboard_protocol) {
 607:tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(&report->mods, 8, NULL);
 608:tmk_core/protocol/lufa/lufa.c ****     } else {
 609:tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(report, size, NULL);
 610:tmk_core/protocol/lufa/lufa.c ****     }
 611:tmk_core/protocol/lufa/lufa.c **** 
 612:tmk_core/protocol/lufa/lufa.c ****     /* Finalize the stream transfer to send the last packet */
 613:tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 614:tmk_core/protocol/lufa/lufa.c **** 
 615:tmk_core/protocol/lufa/lufa.c ****     keyboard_report_sent = *report;
 616:tmk_core/protocol/lufa/lufa.c **** }
 617:tmk_core/protocol/lufa/lufa.c **** 
 618:tmk_core/protocol/lufa/lufa.c **** /** \brief Send Mouse
 619:tmk_core/protocol/lufa/lufa.c ****  *
 620:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 621:tmk_core/protocol/lufa/lufa.c ****  */
 622:tmk_core/protocol/lufa/lufa.c **** static void send_mouse(report_mouse_t *report) {
 623:tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 624:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 625:tmk_core/protocol/lufa/lufa.c ****     uint8_t where   = where_to_send();
 626:tmk_core/protocol/lufa/lufa.c **** 
 627:tmk_core/protocol/lufa/lufa.c **** #    ifdef BLUETOOTH_ENABLE
 628:tmk_core/protocol/lufa/lufa.c ****     if (where == OUTPUT_BLUETOOTH || where == OUTPUT_USB_AND_BT) {
 629:tmk_core/protocol/lufa/lufa.c **** #        ifdef MODULE_ADAFRUIT_BLE
 630:tmk_core/protocol/lufa/lufa.c ****         // FIXME: mouse buttons
 631:tmk_core/protocol/lufa/lufa.c ****         adafruit_ble_send_mouse_move(report->x, report->y, report->v, report->h, report->buttons);
 632:tmk_core/protocol/lufa/lufa.c **** #        else
 633:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0xFD);
 634:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x00);
 635:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x03);
 636:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->buttons);
 637:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->x);
 638:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->y);
 639:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->v);  // should try sending the wheel v here
 640:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->h);  // should try sending the wheel h here
 641:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x00);
 642:tmk_core/protocol/lufa/lufa.c **** #        endif
 643:tmk_core/protocol/lufa/lufa.c ****     }
 644:tmk_core/protocol/lufa/lufa.c **** #    endif
 645:tmk_core/protocol/lufa/lufa.c **** 
 646:tmk_core/protocol/lufa/lufa.c ****     if (where != OUTPUT_USB && where != OUTPUT_USB_AND_BT) {
 647:tmk_core/protocol/lufa/lufa.c ****         return;
 648:tmk_core/protocol/lufa/lufa.c ****     }
 649:tmk_core/protocol/lufa/lufa.c **** 
 650:tmk_core/protocol/lufa/lufa.c ****     /* Select the Mouse Report Endpoint */
 651:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(MOUSE_IN_EPNUM);
 652:tmk_core/protocol/lufa/lufa.c **** 
 653:tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 654:tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 655:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 656:tmk_core/protocol/lufa/lufa.c **** 
 657:tmk_core/protocol/lufa/lufa.c ****     /* Write Mouse Report Data */
 658:tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(report, sizeof(report_mouse_t), NULL);
 659:tmk_core/protocol/lufa/lufa.c **** 
 660:tmk_core/protocol/lufa/lufa.c ****     /* Finalize the stream transfer to send the last packet */
 661:tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 662:tmk_core/protocol/lufa/lufa.c **** #endif
 663:tmk_core/protocol/lufa/lufa.c **** }
 664:tmk_core/protocol/lufa/lufa.c **** 
 665:tmk_core/protocol/lufa/lufa.c **** /** \brief Send System
 666:tmk_core/protocol/lufa/lufa.c ****  *
 667:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 668:tmk_core/protocol/lufa/lufa.c ****  */
 669:tmk_core/protocol/lufa/lufa.c **** static void send_system(uint16_t data) {
 670:tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 671:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 672:tmk_core/protocol/lufa/lufa.c **** 
 673:tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured) return;
 674:tmk_core/protocol/lufa/lufa.c **** 
 675:tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {.report_id = REPORT_ID_SYSTEM, .usage = data - SYSTEM_POWER_DOWN + 1};
 676:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(SHARED_IN_EPNUM);
 677:tmk_core/protocol/lufa/lufa.c **** 
 678:tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 679:tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 680:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 681:tmk_core/protocol/lufa/lufa.c **** 
 682:tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 683:tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 684:tmk_core/protocol/lufa/lufa.c **** #endif
 685:tmk_core/protocol/lufa/lufa.c **** }
 686:tmk_core/protocol/lufa/lufa.c **** 
 687:tmk_core/protocol/lufa/lufa.c **** /** \brief Send Consumer
 688:tmk_core/protocol/lufa/lufa.c ****  *
 689:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 690:tmk_core/protocol/lufa/lufa.c ****  */
 691:tmk_core/protocol/lufa/lufa.c **** static void send_consumer(uint16_t data) {
 692:tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 693:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 694:tmk_core/protocol/lufa/lufa.c ****     uint8_t where   = where_to_send();
 695:tmk_core/protocol/lufa/lufa.c **** 
 696:tmk_core/protocol/lufa/lufa.c **** #    ifdef BLUETOOTH_ENABLE
 697:tmk_core/protocol/lufa/lufa.c ****     if (where == OUTPUT_BLUETOOTH || where == OUTPUT_USB_AND_BT) {
 698:tmk_core/protocol/lufa/lufa.c **** #        ifdef MODULE_ADAFRUIT_BLE
 699:tmk_core/protocol/lufa/lufa.c ****         adafruit_ble_send_consumer_key(data, 0);
 700:tmk_core/protocol/lufa/lufa.c **** #        elif MODULE_RN42
 701:tmk_core/protocol/lufa/lufa.c ****         static uint16_t last_data = 0;
 702:tmk_core/protocol/lufa/lufa.c ****         if (data == last_data) return;
 703:tmk_core/protocol/lufa/lufa.c ****         last_data       = data;
 704:tmk_core/protocol/lufa/lufa.c ****         uint16_t bitmap = CONSUMER2RN42(data);
 705:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0xFD);
 706:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x03);
 707:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x03);
 708:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(bitmap & 0xFF);
 709:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send((bitmap >> 8) & 0xFF);
 710:tmk_core/protocol/lufa/lufa.c **** #        else
 711:tmk_core/protocol/lufa/lufa.c ****         static uint16_t last_data = 0;
 712:tmk_core/protocol/lufa/lufa.c ****         if (data == last_data) return;
 713:tmk_core/protocol/lufa/lufa.c ****         last_data       = data;
 714:tmk_core/protocol/lufa/lufa.c ****         uint16_t bitmap = CONSUMER2BLUEFRUIT(data);
 715:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0xFD);
 716:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x00);
 717:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x02);
 718:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send((bitmap >> 8) & 0xFF);
 719:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(bitmap & 0xFF);
 720:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x00);
 721:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x00);
 722:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x00);
 723:tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(0x00);
 724:tmk_core/protocol/lufa/lufa.c **** #        endif
 725:tmk_core/protocol/lufa/lufa.c ****     }
 726:tmk_core/protocol/lufa/lufa.c **** #    endif
 727:tmk_core/protocol/lufa/lufa.c **** 
 728:tmk_core/protocol/lufa/lufa.c ****     if (where != OUTPUT_USB && where != OUTPUT_USB_AND_BT) {
 729:tmk_core/protocol/lufa/lufa.c ****         return;
 730:tmk_core/protocol/lufa/lufa.c ****     }
 731:tmk_core/protocol/lufa/lufa.c **** 
 732:tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {.report_id = REPORT_ID_CONSUMER, .usage = data};
 733:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(SHARED_IN_EPNUM);
 734:tmk_core/protocol/lufa/lufa.c **** 
 735:tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 736:tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 737:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 738:tmk_core/protocol/lufa/lufa.c **** 
 739:tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 740:tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 741:tmk_core/protocol/lufa/lufa.c **** #endif
 742:tmk_core/protocol/lufa/lufa.c **** }
 743:tmk_core/protocol/lufa/lufa.c **** 
 744:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 745:tmk_core/protocol/lufa/lufa.c ****  * sendchar
 746:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 747:tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 748:tmk_core/protocol/lufa/lufa.c **** #    define SEND_TIMEOUT 5
 749:tmk_core/protocol/lufa/lufa.c **** /** \brief Send Char
 750:tmk_core/protocol/lufa/lufa.c ****  *
 751:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 752:tmk_core/protocol/lufa/lufa.c ****  */
 753:tmk_core/protocol/lufa/lufa.c **** int8_t sendchar(uint8_t c) {
  35               		.loc 1 753 28 is_stmt 1 view -0
  36               		.cfi_startproc
  37               	/* prologue: function */
  38               	/* frame size = 0 */
  39               	/* stack size = 0 */
  40               	.L__stack_usage = 0
 754:tmk_core/protocol/lufa/lufa.c ****     // Not wait once timeouted.
 755:tmk_core/protocol/lufa/lufa.c ****     // Because sendchar() is called so many times, waiting each call causes big lag.
 756:tmk_core/protocol/lufa/lufa.c ****     static bool timeouted = false;
  41               		.loc 1 756 5 view .LVU4
 757:tmk_core/protocol/lufa/lufa.c **** 
 758:tmk_core/protocol/lufa/lufa.c ****     // prevents Console_Task() from running during sendchar() runs.
 759:tmk_core/protocol/lufa/lufa.c ****     // or char will be lost. These two function is mutually exclusive.
 760:tmk_core/protocol/lufa/lufa.c ****     CONSOLE_FLUSH_SET(false);
  42               		.loc 1 760 5 view .LVU5
  43               		.loc 1 760 5 view .LVU6
  44               	.LBB205:
  45               		.loc 1 760 5 view .LVU7
  46 0000 9FB7      		in r25,__SREG__
  47               	.LVL1:
  48               	.LBB206:
  49               	.LBI206:
  50               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h"
   1:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** /* Copyright (c) 2007 Dean Camera
   2:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****    All rights reserved.
   3:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
   4:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
   7:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
  10:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****      the documentation and/or other materials provided with the
  13:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****      distribution.
  14:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
  15:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****      from this software without specific prior written permission.
  18:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
  19:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****   POSSIBILITY OF SUCH DAMAGE.
  30:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** */
  31:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
  32:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** /* $Id: atomic.h 2158 2010-06-10 15:48:28Z joerg_wunsch $ */
  33:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
  34:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** #ifndef _UTIL_ATOMIC_H_
  35:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** #define _UTIL_ATOMIC_H_ 1
  36:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
  37:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** #include <avr/io.h>
  38:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** #include <avr/interrupt.h>
  39:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
  40:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** #if !defined(__DOXYGEN__)
  41:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** /* Internal helper functions. */
  42:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** static __inline__ uint8_t __iSeiRetVal(void)
  43:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** {
  44:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     sei();
  45:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     return 1;
  46:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** }
  47:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** static __inline__ uint8_t __iCliRetVal(void)
  51               		.loc 2 48 27 view .LVU8
  52               	.LBB207:
  49:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** {
  50:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     cli();
  53               		.loc 2 50 5 view .LVU9
  54               	/* #APP */
  55               	 ;  50 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h" 1
  56 0002 F894      		cli
  57               	 ;  0 "" 2
  51:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     return 1;
  58               		.loc 2 51 5 view .LVU10
  59               	.LVL2:
  60               		.loc 2 51 5 is_stmt 0 view .LVU11
  61               	/* #NOAPP */
  62               	.LBE207:
  63               	.LBE206:
  64               		.loc 1 760 5 is_stmt 1 view .LVU12
  65               		.loc 1 760 5 view .LVU13
  66 0004 1092 0000 		sts console_flush,__zero_reg__
  67               		.loc 1 760 5 view .LVU14
  68               	.LVL3:
  69               		.loc 1 760 5 view .LVU15
  70               	.LBB208:
  71               	.LBI208:
  52:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** }
  53:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
  54:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** static __inline__ void __iSeiParam(const uint8_t *__s)
  55:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** {
  56:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     sei();
  57:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  58:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     (void)__s;
  59:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** }
  60:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** static __inline__ void __iCliParam(const uint8_t *__s)
  62:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** {
  63:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     cli();
  64:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  65:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     (void)__s;
  66:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** }
  67:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** 
  68:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** static __inline__ void __iRestore(const  uint8_t *__s)
  72               		.loc 2 68 24 view .LVU16
  73               	.LBB209:
  69:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** {
  70:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     SREG = *__s;
  74               		.loc 2 70 5 view .LVU17
  75               		.loc 2 70 10 is_stmt 0 view .LVU18
  76 0008 9FBF      		out __SREG__,r25
  71:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  77               		.loc 2 71 5 is_stmt 1 view .LVU19
  78               	.LVL4:
  79               		.loc 2 71 5 is_stmt 0 view .LVU20
  80               	.LBE209:
  81               	.LBE208:
  82               	.LBE205:
  83               		.loc 1 760 5 is_stmt 1 view .LVU21
 761:tmk_core/protocol/lufa/lufa.c **** 
 762:tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured) return -1;
  84               		.loc 1 762 5 view .LVU22
  85               		.loc 1 762 25 is_stmt 0 view .LVU23
  86 000a 9091 0000 		lds r25,USB_DeviceState
  87               		.loc 1 762 8 view .LVU24
  88 000e 9430      		cpi r25,lo8(4)
  89 0010 01F0      		breq .+2
  90 0012 00C0      		rjmp .L14
 763:tmk_core/protocol/lufa/lufa.c **** 
 764:tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
  91               		.loc 1 764 5 is_stmt 1 view .LVU25
  92               	.LBB210:
  93               	.LBI210:
  94               		.file 3 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2019.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
  95               		.loc 3 250 26 view .LVU26
  96               	.LBB211:
 251:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
  97               		.loc 3 253 6 view .LVU27
  98               		.loc 3 253 15 is_stmt 0 view .LVU28
  99 0014 2091 E900 		lds r18,233
 100               		.loc 3 253 21 view .LVU29
 101 0018 2F70      		andi r18,lo8(15)
 102               	.LBB212:
 103               	.LBI212:
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 104               		.loc 3 238 26 is_stmt 1 view .LVU30
 105               	.LBB213:
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 106               		.loc 3 240 5 view .LVU31
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 107               		.loc 3 240 13 is_stmt 0 view .LVU32
 108 001a 3091 EC00 		lds r19,236
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 109               		.loc 3 240 55 view .LVU33
 110 001e 932F      		mov r25,r19
 111 0020 9170      		andi r25,lo8(1)
 112 0022 30FD      		sbrc r19,0
 113 0024 90E8      		ldi r25,lo8(-128)
 114               	.L4:
 115               	.LBE213:
 116               	.LBE212:
 117               		.loc 3 253 44 view .LVU34
 118 0026 922B      		or r25,r18
 119               	.LVL5:
 120               		.loc 3 253 44 view .LVU35
 121               	.LBE211:
 122               	.LBE210:
 765:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_IN_EPNUM);
 123               		.loc 1 765 5 is_stmt 1 view .LVU36
 124               	.LBB214:
 125               	.LBI214:
 254:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 126               		.loc 3 267 23 view .LVU37
 127               	.LBB215:
 268:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 128               		.loc 3 270 6 view .LVU38
 129               		.loc 3 270 12 is_stmt 0 view .LVU39
 130 0028 23E0      		ldi r18,lo8(3)
 131 002a 2093 E900 		sts 233,r18
 132               	.LVL6:
 133               		.loc 3 270 12 view .LVU40
 134               	.LBE215:
 135               	.LBE214:
 766:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 136               		.loc 1 766 5 is_stmt 1 view .LVU41
 137               	.LBB216:
 138               	.LBI216:
 271:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 304:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 139               		.loc 3 311 23 view .LVU42
 140               	.LBB217:
 312:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 141               		.loc 3 313 5 view .LVU43
 142               		.loc 3 313 14 is_stmt 0 view .LVU44
 143 002e 2091 EB00 		lds r18,235
 144               	.LBE217:
 145               	.LBE216:
 146               		.loc 1 766 8 view .LVU45
 147 0032 20FF      		sbrs r18,0
 148 0034 00C0      		rjmp .L9
 149               	.LBB218:
 150               	.LBI218:
 314:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 359:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 361:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 151               		.loc 3 368 23 is_stmt 1 view .LVU46
 152               	.LBB219:
 369:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 153               		.loc 3 370 5 view .LVU47
 154               		.loc 3 370 14 is_stmt 0 view .LVU48
 155 0036 2091 EE00 		lds r18,238
 156               	.LBE219:
 157               	.LBE218:
 158               		.loc 1 766 31 view .LVU49
 159 003a 27FF      		sbrs r18,7
 160 003c 00C0      		rjmp .L9
 767:tmk_core/protocol/lufa/lufa.c ****         goto ERROR_EXIT;
 768:tmk_core/protocol/lufa/lufa.c ****     }
 769:tmk_core/protocol/lufa/lufa.c **** 
 770:tmk_core/protocol/lufa/lufa.c ****     if (timeouted && !Endpoint_IsReadWriteAllowed()) {
 161               		.loc 1 770 5 is_stmt 1 view .LVU50
 162               		.loc 1 770 8 is_stmt 0 view .LVU51
 163 003e 2091 0000 		lds r18,timeouted.6028
 164 0042 2223      		tst r18
 165 0044 01F0      		breq .L6
 166               	.LBB220:
 167               	.LBI220:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 168               		.loc 3 358 23 is_stmt 1 view .LVU52
 169               	.LBB221:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 170               		.loc 3 360 5 view .LVU53
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 171               		.loc 3 360 14 is_stmt 0 view .LVU54
 172 0046 2091 E800 		lds r18,232
 173               	.LBE221:
 174               	.LBE220:
 175               		.loc 1 770 19 view .LVU55
 176 004a 25FF      		sbrs r18,5
 177 004c 00C0      		rjmp .L9
 178               	.L6:
 771:tmk_core/protocol/lufa/lufa.c ****         goto ERROR_EXIT;
 772:tmk_core/protocol/lufa/lufa.c ****     }
 773:tmk_core/protocol/lufa/lufa.c **** 
 774:tmk_core/protocol/lufa/lufa.c ****     timeouted = false;
 179               		.loc 1 774 5 is_stmt 1 view .LVU56
 180               		.loc 1 774 15 is_stmt 0 view .LVU57
 181 004e 1092 0000 		sts timeouted.6028,__zero_reg__
 775:tmk_core/protocol/lufa/lufa.c **** 
 776:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = SEND_TIMEOUT;
 182               		.loc 1 776 5 is_stmt 1 view .LVU58
 183               	.LVL7:
 777:tmk_core/protocol/lufa/lufa.c ****     while (!Endpoint_IsReadWriteAllowed()) {
 184               		.loc 1 777 5 view .LVU59
 185               		.loc 1 777 11 is_stmt 0 view .LVU60
 186 0052 26E0      		ldi r18,lo8(6)
 187               	.LVL8:
 188               	.L7:
 189               		.loc 1 777 11 is_stmt 1 view .LVU61
 190               	.LBB222:
 191               	.LBI222:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 192               		.loc 3 358 23 view .LVU62
 193               	.LBB223:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 194               		.loc 3 360 5 view .LVU63
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 195               		.loc 3 360 14 is_stmt 0 view .LVU64
 196 0054 3091 E800 		lds r19,232
 197               	.LBE223:
 198               	.LBE222:
 199               		.loc 1 777 11 view .LVU65
 200 0058 35FF      		sbrs r19,5
 201 005a 00C0      		rjmp .L10
 778:tmk_core/protocol/lufa/lufa.c ****         if (USB_DeviceState != DEVICE_STATE_Configured) {
 779:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 780:tmk_core/protocol/lufa/lufa.c ****         }
 781:tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsStalled()) {
 782:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 783:tmk_core/protocol/lufa/lufa.c ****         }
 784:tmk_core/protocol/lufa/lufa.c ****         if (!(timeout--)) {
 785:tmk_core/protocol/lufa/lufa.c ****             timeouted = true;
 786:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 787:tmk_core/protocol/lufa/lufa.c ****         }
 788:tmk_core/protocol/lufa/lufa.c ****         _delay_ms(1);
 789:tmk_core/protocol/lufa/lufa.c ****     }
 790:tmk_core/protocol/lufa/lufa.c **** 
 791:tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_8(c);
 202               		.loc 1 791 5 is_stmt 1 view .LVU66
 203               	.LVL9:
 204               	.LBB224:
 205               	.LBI224:
 371:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 432:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 445:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 454:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 457:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 472:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 476:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 485:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 492:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 495:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 496:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 497:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 498:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 499:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 500:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 501:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 502:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 503:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 504:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, \c false otherwise.
 505:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 506:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 507:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 508:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 509:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 510:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 511:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 512:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 513:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 514:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 515:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 516:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 517:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 518:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 519:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 520:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 521:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 522:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 523:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 524:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 526:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 528:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 529:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 531:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 532:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 533:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 534:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 535:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 536:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 537:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 538:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 539:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 540:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 541:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 543:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 544:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 545:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 546:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 547:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 548:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 549:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 550:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 551:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 552:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 206               		.loc 3 552 23 view .LVU67
 207               	.LBB225:
 553:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 554:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 208               		.loc 3 554 5 view .LVU68
 209               		.loc 3 554 12 is_stmt 0 view .LVU69
 210 005c 8093 F100 		sts 241,r24
 211               	.LVL10:
 212               		.loc 3 554 12 view .LVU70
 213               	.LBE225:
 214               	.LBE224:
 792:tmk_core/protocol/lufa/lufa.c **** 
 793:tmk_core/protocol/lufa/lufa.c ****     // send when bank is full
 794:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) {
 215               		.loc 1 794 5 is_stmt 1 view .LVU71
 216               	.LBB226:
 217               	.LBI226:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 218               		.loc 3 358 23 view .LVU72
 219               	.LBB227:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 220               		.loc 3 360 5 view .LVU73
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 221               		.loc 3 360 14 is_stmt 0 view .LVU74
 222 0060 8091 E800 		lds r24,232
 223               	.LVL11:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 224               		.loc 3 360 14 view .LVU75
 225               	.LBE227:
 226               	.LBE226:
 227               		.loc 1 794 8 view .LVU76
 228 0064 85FD      		sbrc r24,5
 229 0066 00C0      		rjmp .L11
 230               	.L12:
 795:tmk_core/protocol/lufa/lufa.c ****         while (!(Endpoint_IsINReady()))
 796:tmk_core/protocol/lufa/lufa.c ****             ;
 231               		.loc 1 796 13 is_stmt 1 discriminator 1 view .LVU77
 795:tmk_core/protocol/lufa/lufa.c ****         while (!(Endpoint_IsINReady()))
 232               		.loc 1 795 15 discriminator 1 view .LVU78
 233               	.LBB228:
 234               	.LBI228:
 405:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 235               		.loc 3 405 23 discriminator 1 view .LVU79
 236               	.LBB229:
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 237               		.loc 3 407 5 discriminator 1 view .LVU80
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 238               		.loc 3 407 14 is_stmt 0 discriminator 1 view .LVU81
 239 0068 8091 E800 		lds r24,232
 240               	.LBE229:
 241               	.LBE228:
 795:tmk_core/protocol/lufa/lufa.c ****         while (!(Endpoint_IsINReady()))
 242               		.loc 1 795 15 discriminator 1 view .LVU82
 243 006c 80FF      		sbrs r24,0
 244 006e 00C0      		rjmp .L12
 797:tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 245               		.loc 1 797 9 is_stmt 1 view .LVU83
 246               	.LBB230:
 247               	.LBI230:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 248               		.loc 3 453 23 view .LVU84
 249               	.LBB231:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 250               		.loc 3 456 6 view .LVU85
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 251               		.loc 3 456 13 is_stmt 0 view .LVU86
 252 0070 8091 E800 		lds r24,232
 253 0074 8E77      		andi r24,lo8(126)
 254 0076 8093 E800 		sts 232,r24
 255               	.LVL12:
 256               	.L13:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 257               		.loc 3 456 13 view .LVU87
 258               	.LBE231:
 259               	.LBE230:
 798:tmk_core/protocol/lufa/lufa.c ****     } else {
 799:tmk_core/protocol/lufa/lufa.c ****         CONSOLE_FLUSH_SET(true);
 260               		.loc 1 799 9 is_stmt 1 view .LVU88
 800:tmk_core/protocol/lufa/lufa.c ****     }
 801:tmk_core/protocol/lufa/lufa.c **** 
 802:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 261               		.loc 1 802 5 view .LVU89
 262               	.LBB232:
 263               	.LBI232:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 264               		.loc 3 267 23 view .LVU90
 265               	.LBB233:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 266               		.loc 3 270 6 view .LVU91
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 267               		.loc 3 270 23 is_stmt 0 view .LVU92
 268 007a 9F70      		andi r25,lo8(15)
 269               	.LVL13:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 270               		.loc 3 270 12 view .LVU93
 271 007c 9093 E900 		sts 233,r25
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272               		.loc 3 270 12 view .LVU94
 273               	.LBE233:
 274               	.LBE232:
 803:tmk_core/protocol/lufa/lufa.c ****     return 0;
 275               		.loc 1 803 5 is_stmt 1 view .LVU95
 276               		.loc 1 803 12 is_stmt 0 view .LVU96
 277 0080 80E0      		ldi r24,0
 278 0082 0895      		ret
 279               	.LVL14:
 280               	.L10:
 778:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 281               		.loc 1 778 9 is_stmt 1 view .LVU97
 778:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 282               		.loc 1 778 29 is_stmt 0 view .LVU98
 283 0084 3091 0000 		lds r19,USB_DeviceState
 778:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 284               		.loc 1 778 12 view .LVU99
 285 0088 3430      		cpi r19,lo8(4)
 286 008a 01F4      		brne .L9
 781:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 287               		.loc 1 781 9 is_stmt 1 view .LVU100
 288               	.LBB234:
 289               	.LBI234:
 511:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 290               		.loc 3 511 23 view .LVU101
 291               	.LBB235:
 513:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 292               		.loc 3 513 5 view .LVU102
 513:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 293               		.loc 3 513 14 is_stmt 0 view .LVU103
 294 008c 3091 EB00 		lds r19,235
 295               	.LBE235:
 296               	.LBE234:
 781:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 297               		.loc 1 781 12 view .LVU104
 298 0090 35FD      		sbrc r19,5
 299 0092 00C0      		rjmp .L9
 784:tmk_core/protocol/lufa/lufa.c ****             timeouted = true;
 300               		.loc 1 784 9 is_stmt 1 view .LVU105
 301               	.LVL15:
 784:tmk_core/protocol/lufa/lufa.c ****             timeouted = true;
 302               		.loc 1 784 9 is_stmt 0 view .LVU106
 303 0094 2150      		subi r18,lo8(-(-1))
 304               	.LVL16:
 784:tmk_core/protocol/lufa/lufa.c ****             timeouted = true;
 305               		.loc 1 784 12 view .LVU107
 306 0096 01F4      		brne .L8
 785:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 307               		.loc 1 785 13 is_stmt 1 view .LVU108
 785:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 308               		.loc 1 785 23 is_stmt 0 view .LVU109
 309 0098 81E0      		ldi r24,lo8(1)
 310               	.LVL17:
 785:tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 311               		.loc 1 785 23 view .LVU110
 312 009a 8093 0000 		sts timeouted.6028,r24
 786:tmk_core/protocol/lufa/lufa.c ****         }
 313               		.loc 1 786 13 is_stmt 1 view .LVU111
 314               	.LVL18:
 315               	.L9:
 804:tmk_core/protocol/lufa/lufa.c **** ERROR_EXIT:
 805:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 316               		.loc 1 805 5 view .LVU112
 317               	.LBB236:
 318               	.LBI236:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 319               		.loc 3 267 23 view .LVU113
 320               	.LBB237:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 321               		.loc 3 270 6 view .LVU114
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 322               		.loc 3 270 23 is_stmt 0 view .LVU115
 323 009e 9F70      		andi r25,lo8(15)
 324               	.LVL19:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 325               		.loc 3 270 12 view .LVU116
 326 00a0 9093 E900 		sts 233,r25
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 327               		.loc 3 270 12 view .LVU117
 328               	.LBE237:
 329               	.LBE236:
 806:tmk_core/protocol/lufa/lufa.c ****     return -1;
 330               		.loc 1 806 5 is_stmt 1 view .LVU118
 331               	.L14:
 762:tmk_core/protocol/lufa/lufa.c **** 
 332               		.loc 1 762 60 is_stmt 0 view .LVU119
 333 00a4 8FEF      		ldi r24,lo8(-1)
 334               	/* epilogue start */
 807:tmk_core/protocol/lufa/lufa.c **** }
 335               		.loc 1 807 1 view .LVU120
 336 00a6 0895      		ret
 337               	.LVL20:
 338               	.L8:
 788:tmk_core/protocol/lufa/lufa.c ****     }
 339               		.loc 1 788 9 is_stmt 1 view .LVU121
 340               	.LBB238:
 341               	.LBI238:
 342               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 343               		.loc 4 166 1 view .LVU122
 344               	.LBB239:
 167:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	double __tmp ;
 345               		.loc 4 168 2 view .LVU123
 169:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 346               		.loc 4 172 2 view .LVU124
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 347               		.loc 4 173 2 view .LVU125
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 348               		.loc 4 174 2 view .LVU126
 175:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 349               		.loc 4 184 3 view .LVU127
 185:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 350               		.loc 4 187 2 view .LVU128
 351 00a8 EFE9      		ldi r30,lo8(3999)
 352 00aa FFE0      		ldi r31,hi8(3999)
 353 00ac 3197      	1:	sbiw r30,1
 354 00ae 01F4      		brne 1b
 355 00b0 00C0      		rjmp .
 356 00b2 0000      		nop
 357 00b4 00C0      		rjmp .L7
 358               	.LVL21:
 359               	.L11:
 360               		.loc 4 187 2 is_stmt 0 view .LVU129
 361               	.LBE239:
 362               	.LBE238:
 799:tmk_core/protocol/lufa/lufa.c ****     }
 363               		.loc 1 799 9 is_stmt 1 view .LVU130
 799:tmk_core/protocol/lufa/lufa.c ****     }
 364               		.loc 1 799 9 view .LVU131
 365               	.LBB240:
 799:tmk_core/protocol/lufa/lufa.c ****     }
 366               		.loc 1 799 9 view .LVU132
 367 00b6 8FB7      		in r24,__SREG__
 368               	.LVL22:
 369               	.LBB241:
 370               	.LBI241:
  48:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** {
 371               		.loc 2 48 27 view .LVU133
 372               	.LBB242:
  50:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     return 1;
 373               		.loc 2 50 5 view .LVU134
 374               	/* #APP */
 375               	 ;  50 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h" 1
 376 00b8 F894      		cli
 377               	 ;  0 "" 2
  51:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** }
 378               		.loc 2 51 5 view .LVU135
 379               	.LVL23:
  51:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** }
 380               		.loc 2 51 5 is_stmt 0 view .LVU136
 381               	/* #NOAPP */
 382               	.LBE242:
 383               	.LBE241:
 799:tmk_core/protocol/lufa/lufa.c ****     }
 384               		.loc 1 799 9 is_stmt 1 view .LVU137
 799:tmk_core/protocol/lufa/lufa.c ****     }
 385               		.loc 1 799 9 view .LVU138
 386 00ba 21E0      		ldi r18,lo8(1)
 387               	.LVL24:
 799:tmk_core/protocol/lufa/lufa.c ****     }
 388               		.loc 1 799 9 is_stmt 0 view .LVU139
 389 00bc 2093 0000 		sts console_flush,r18
 390               	.LVL25:
 799:tmk_core/protocol/lufa/lufa.c ****     }
 391               		.loc 1 799 9 is_stmt 1 view .LVU140
 799:tmk_core/protocol/lufa/lufa.c ****     }
 392               		.loc 1 799 9 view .LVU141
 393               	.LBB243:
 394               	.LBI243:
  68:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h **** {
 395               		.loc 2 68 24 view .LVU142
 396               	.LBB244:
  70:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 397               		.loc 2 70 5 view .LVU143
  70:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 398               		.loc 2 70 10 is_stmt 0 view .LVU144
 399 00c0 8FBF      		out __SREG__,r24
 400               		.loc 2 71 5 is_stmt 1 view .LVU145
 401               	.LVL26:
 402               		.loc 2 71 5 is_stmt 0 view .LVU146
 403 00c2 00C0      		rjmp .L13
 404               	.LBE244:
 405               	.LBE243:
 406               	.LBE240:
 407               		.cfi_endproc
 408               	.LFE131:
 410               		.section	.text.send_consumer,"ax",@progbits
 412               	send_consumer:
 413               	.LVL27:
 414               	.LFB130:
 691:tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 415               		.loc 1 691 42 is_stmt 1 view -0
 416               		.cfi_startproc
 691:tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 417               		.loc 1 691 42 is_stmt 0 view .LVU148
 418 0000 0F93      		push r16
 419               	.LCFI0:
 420               		.cfi_def_cfa_offset 3
 421               		.cfi_offset 16, -2
 422 0002 1F93      		push r17
 423               	.LCFI1:
 424               		.cfi_def_cfa_offset 4
 425               		.cfi_offset 17, -3
 426 0004 CF93      		push r28
 427               	.LCFI2:
 428               		.cfi_def_cfa_offset 5
 429               		.cfi_offset 28, -4
 430 0006 DF93      		push r29
 431               	.LCFI3:
 432               		.cfi_def_cfa_offset 6
 433               		.cfi_offset 29, -5
 434 0008 00D0      		rcall .
 435 000a 0F92      		push __tmp_reg__
 436               	.LCFI4:
 437               		.cfi_def_cfa_offset 9
 438 000c CDB7      		in r28,__SP_L__
 439 000e DEB7      		in r29,__SP_H__
 440               	.LCFI5:
 441               		.cfi_def_cfa_register 28
 442               	/* prologue: function */
 443               	/* frame size = 3 */
 444               	/* stack size = 7 */
 445               	.L__stack_usage = 7
 446 0010 8C01      		movw r16,r24
 693:tmk_core/protocol/lufa/lufa.c ****     uint8_t where   = where_to_send();
 447               		.loc 1 693 5 is_stmt 1 view .LVU149
 448               	.LVL28:
 694:tmk_core/protocol/lufa/lufa.c **** 
 449               		.loc 1 694 5 view .LVU150
 694:tmk_core/protocol/lufa/lufa.c **** 
 450               		.loc 1 694 23 is_stmt 0 view .LVU151
 451 0012 0E94 0000 		call where_to_send
 452               	.LVL29:
 728:tmk_core/protocol/lufa/lufa.c ****         return;
 453               		.loc 1 728 5 is_stmt 1 view .LVU152
 728:tmk_core/protocol/lufa/lufa.c ****         return;
 454               		.loc 1 728 8 is_stmt 0 view .LVU153
 455 0016 8230      		cpi r24,lo8(2)
 456 0018 01F0      		breq .L28
 728:tmk_core/protocol/lufa/lufa.c ****         return;
 457               		.loc 1 728 29 discriminator 1 view .LVU154
 458 001a 8430      		cpi r24,lo8(4)
 459 001c 01F4      		brne .L27
 460               	.L28:
 732:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(SHARED_IN_EPNUM);
 461               		.loc 1 732 5 is_stmt 1 view .LVU155
 732:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(SHARED_IN_EPNUM);
 462               		.loc 1 732 20 is_stmt 0 view .LVU156
 463 001e 84E0      		ldi r24,lo8(4)
 464               	.LVL30:
 732:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(SHARED_IN_EPNUM);
 465               		.loc 1 732 20 view .LVU157
 466 0020 8983      		std Y+1,r24
 467 0022 1B83      		std Y+3,r17
 468 0024 0A83      		std Y+2,r16
 733:tmk_core/protocol/lufa/lufa.c **** 
 469               		.loc 1 733 5 is_stmt 1 view .LVU158
 470               	.LVL31:
 471               	.LBB245:
 472               	.LBI245:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 473               		.loc 3 267 23 view .LVU159
 474               	.LBB246:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475               		.loc 3 270 6 view .LVU160
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 476               		.loc 3 270 12 is_stmt 0 view .LVU161
 477 0026 82E0      		ldi r24,lo8(2)
 478 0028 8093 E900 		sts 233,r24
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 479               		.loc 3 270 12 view .LVU162
 480               	.LBE246:
 481               	.LBE245:
 736:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 482               		.loc 1 736 11 is_stmt 1 view .LVU163
 483               	.LVL32:
 484               	.LBB248:
 485               	.LBB247:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 486               		.loc 3 270 12 is_stmt 0 view .LVU164
 487 002c 8FEF      		ldi r24,lo8(-1)
 488               	.LVL33:
 489               	.L30:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 490               		.loc 3 270 12 view .LVU165
 491               	.LBE247:
 492               	.LBE248:
 493               	.LBB249:
 494               	.LBI249:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 495               		.loc 3 358 23 is_stmt 1 view .LVU166
 496               	.LBB250:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 497               		.loc 3 360 5 view .LVU167
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 498               		.loc 3 360 14 is_stmt 0 view .LVU168
 499 002e 9091 E800 		lds r25,232
 500 0032 8150      		subi r24,lo8(-(-1))
 501               	.LVL34:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 502               		.loc 3 360 14 view .LVU169
 503               	.LBE250:
 504               	.LBE249:
 736:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 505               		.loc 1 736 22 view .LVU170
 506 0034 95FD      		sbrc r25,5
 507 0036 00C0      		rjmp .L31
 736:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 508               		.loc 1 736 57 is_stmt 1 view .LVU171
 509               	.LVL35:
 510               	.LBB251:
 511               	.LBI251:
 188:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 189:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #else
 190:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	{
 196:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		while(__ticks)
 199:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		{
 200:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 202:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 			__ticks --;
 203:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		}
 204:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		return;
 205:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	}
 206:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	else
 207:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 208:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 209:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 210:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** }
 211:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 212:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /**
 213:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \ingroup util_delay
 214:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 215:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 216:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 217:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 218:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 219:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 220:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 221:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 222:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 223:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 224:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    will not be informed about this case.
 225:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 226:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 227:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 228:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 229:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    no delay i.e., 0us.
 230:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 231:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Conversion of \c __us into clock cycles may not always result in
 232:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 233:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __us
 234:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    microseconds of delay.
 235:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 236:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 237:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 238:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 239:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    respectively.
 240:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 241:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \note
 242:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 243:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 244:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 245:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 246:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    with previous versions, the macro \c __DELAY_BACKWARD_COMPATIBLE__
 247:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 248:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 249:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 250:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 251:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    not available to the compiler then.
 252:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 253:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****  */
 254:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** void
 255:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** _delay_us(double __us)
 512               		.loc 4 255 1 view .LVU172
 513               	.LBB252:
 256:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 257:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	double __tmp ;
 514               		.loc 4 257 2 view .LVU173
 258:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 259:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 260:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 261:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 515               		.loc 4 261 2 view .LVU174
 262:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 516               		.loc 4 262 2 view .LVU175
 263:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 517               		.loc 4 263 2 view .LVU176
 264:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 265:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 266:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 267:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 268:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 269:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 270:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 271:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#else
 272:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		//round up by default
 273:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 518               		.loc 4 273 3 view .LVU177
 274:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 275:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 276:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 519               		.loc 4 276 2 view .LVU178
 520 0038 95ED      		ldi r25,lo8(-43)
 521 003a 9A95      	1:	dec r25
 522 003c 01F4      		brne 1b
 523 003e 0000      		nop
 524               		.loc 4 276 2 is_stmt 0 view .LVU179
 525               	.LBE252:
 526               	.LBE251:
 736:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 527               		.loc 1 736 11 is_stmt 1 view .LVU180
 528               	.LVL36:
 736:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 529               		.loc 1 736 11 is_stmt 0 view .LVU181
 530 0040 8111      		cpse r24,__zero_reg__
 531 0042 00C0      		rjmp .L30
 532               	.LVL37:
 533               	.L31:
 737:tmk_core/protocol/lufa/lufa.c **** 
 534               		.loc 1 737 5 is_stmt 1 view .LVU182
 535               	.LBB253:
 536               	.LBI253:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 537               		.loc 3 358 23 view .LVU183
 538               	.LBB254:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 539               		.loc 3 360 5 view .LVU184
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 540               		.loc 3 360 14 is_stmt 0 view .LVU185
 541 0044 8091 E800 		lds r24,232
 542               	.LBE254:
 543               	.LBE253:
 737:tmk_core/protocol/lufa/lufa.c **** 
 544               		.loc 1 737 8 view .LVU186
 545 0048 85FF      		sbrs r24,5
 546 004a 00C0      		rjmp .L27
 739:tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 547               		.loc 1 739 5 is_stmt 1 view .LVU187
 548 004c 50E0      		ldi r21,0
 549 004e 40E0      		ldi r20,0
 550 0050 63E0      		ldi r22,lo8(3)
 551 0052 70E0      		ldi r23,0
 552 0054 CE01      		movw r24,r28
 553 0056 0196      		adiw r24,1
 554 0058 0E94 0000 		call Endpoint_Write_Stream_LE
 555               	.LVL38:
 740:tmk_core/protocol/lufa/lufa.c **** #endif
 556               		.loc 1 740 5 view .LVU188
 557               	.LBB255:
 558               	.LBI255:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 559               		.loc 3 453 23 view .LVU189
 560               	.LBB256:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 561               		.loc 3 456 6 view .LVU190
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 562               		.loc 3 456 13 is_stmt 0 view .LVU191
 563 005c 8091 E800 		lds r24,232
 564 0060 8E77      		andi r24,lo8(126)
 565 0062 8093 E800 		sts 232,r24
 566               	.LVL39:
 567               	.L27:
 568               	/* epilogue start */
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 569               		.loc 3 456 13 view .LVU192
 570               	.LBE256:
 571               	.LBE255:
 742:tmk_core/protocol/lufa/lufa.c **** 
 572               		.loc 1 742 1 view .LVU193
 573 0066 0F90      		pop __tmp_reg__
 574 0068 0F90      		pop __tmp_reg__
 575 006a 0F90      		pop __tmp_reg__
 576 006c DF91      		pop r29
 577 006e CF91      		pop r28
 578 0070 1F91      		pop r17
 579 0072 0F91      		pop r16
 580               	.LVL40:
 742:tmk_core/protocol/lufa/lufa.c **** 
 581               		.loc 1 742 1 view .LVU194
 582 0074 0895      		ret
 583               		.cfi_endproc
 584               	.LFE130:
 586               		.section	.text.send_system,"ax",@progbits
 588               	send_system:
 589               	.LVL41:
 590               	.LFB129:
 669:tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 591               		.loc 1 669 40 is_stmt 1 view -0
 592               		.cfi_startproc
 669:tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 593               		.loc 1 669 40 is_stmt 0 view .LVU196
 594 0000 CF93      		push r28
 595               	.LCFI6:
 596               		.cfi_def_cfa_offset 3
 597               		.cfi_offset 28, -2
 598 0002 DF93      		push r29
 599               	.LCFI7:
 600               		.cfi_def_cfa_offset 4
 601               		.cfi_offset 29, -3
 602 0004 00D0      		rcall .
 603 0006 0F92      		push __tmp_reg__
 604               	.LCFI8:
 605               		.cfi_def_cfa_offset 7
 606 0008 CDB7      		in r28,__SP_L__
 607 000a DEB7      		in r29,__SP_H__
 608               	.LCFI9:
 609               		.cfi_def_cfa_register 28
 610               	/* prologue: function */
 611               	/* frame size = 3 */
 612               	/* stack size = 5 */
 613               	.L__stack_usage = 5
 671:tmk_core/protocol/lufa/lufa.c **** 
 614               		.loc 1 671 5 is_stmt 1 view .LVU197
 615               	.LVL42:
 673:tmk_core/protocol/lufa/lufa.c **** 
 616               		.loc 1 673 5 view .LVU198
 673:tmk_core/protocol/lufa/lufa.c **** 
 617               		.loc 1 673 25 is_stmt 0 view .LVU199
 618 000c 2091 0000 		lds r18,USB_DeviceState
 673:tmk_core/protocol/lufa/lufa.c **** 
 619               		.loc 1 673 8 view .LVU200
 620 0010 2430      		cpi r18,lo8(4)
 621 0012 01F4      		brne .L43
 675:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(SHARED_IN_EPNUM);
 622               		.loc 1 675 5 is_stmt 1 view .LVU201
 675:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(SHARED_IN_EPNUM);
 623               		.loc 1 675 20 is_stmt 0 view .LVU202
 624 0014 23E0      		ldi r18,lo8(3)
 625 0016 2983      		std Y+1,r18
 675:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(SHARED_IN_EPNUM);
 626               		.loc 1 675 90 view .LVU203
 627 0018 8058      		subi r24,-128
 628 001a 9109      		sbc r25,__zero_reg__
 629               	.LVL43:
 675:tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(SHARED_IN_EPNUM);
 630               		.loc 1 675 20 view .LVU204
 631 001c 9B83      		std Y+3,r25
 632 001e 8A83      		std Y+2,r24
 676:tmk_core/protocol/lufa/lufa.c **** 
 633               		.loc 1 676 5 is_stmt 1 view .LVU205
 634               	.LVL44:
 635               	.LBB257:
 636               	.LBI257:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 637               		.loc 3 267 23 view .LVU206
 638               	.LBB258:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 639               		.loc 3 270 6 view .LVU207
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 640               		.loc 3 270 12 is_stmt 0 view .LVU208
 641 0020 82E0      		ldi r24,lo8(2)
 642               	.LVL45:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 643               		.loc 3 270 12 view .LVU209
 644 0022 8093 E900 		sts 233,r24
 645               	.LVL46:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 646               		.loc 3 270 12 view .LVU210
 647               	.LBE258:
 648               	.LBE257:
 679:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 649               		.loc 1 679 11 is_stmt 1 view .LVU211
 650               	.LBB260:
 651               	.LBB259:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 652               		.loc 3 270 12 is_stmt 0 view .LVU212
 653 0026 8FEF      		ldi r24,lo8(-1)
 654               	.LVL47:
 655               	.L45:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 656               		.loc 3 270 12 view .LVU213
 657               	.LBE259:
 658               	.LBE260:
 659               	.LBB261:
 660               	.LBI261:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 661               		.loc 3 358 23 is_stmt 1 view .LVU214
 662               	.LBB262:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 663               		.loc 3 360 5 view .LVU215
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 664               		.loc 3 360 14 is_stmt 0 view .LVU216
 665 0028 9091 E800 		lds r25,232
 666 002c 8150      		subi r24,lo8(-(-1))
 667               	.LVL48:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 668               		.loc 3 360 14 view .LVU217
 669               	.LBE262:
 670               	.LBE261:
 679:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 671               		.loc 1 679 22 view .LVU218
 672 002e 95FD      		sbrc r25,5
 673 0030 00C0      		rjmp .L46
 679:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 674               		.loc 1 679 57 is_stmt 1 view .LVU219
 675               	.LVL49:
 676               	.LBB263:
 677               	.LBI263:
 255:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 678               		.loc 4 255 1 view .LVU220
 679               	.LBB264:
 257:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 680               		.loc 4 257 2 view .LVU221
 261:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 681               		.loc 4 261 2 view .LVU222
 262:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 682               		.loc 4 262 2 view .LVU223
 263:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 683               		.loc 4 263 2 view .LVU224
 273:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 684               		.loc 4 273 3 view .LVU225
 685               		.loc 4 276 2 view .LVU226
 686 0032 95ED      		ldi r25,lo8(-43)
 687 0034 9A95      	1:	dec r25
 688 0036 01F4      		brne 1b
 689 0038 0000      		nop
 690               		.loc 4 276 2 is_stmt 0 view .LVU227
 691               	.LBE264:
 692               	.LBE263:
 679:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 693               		.loc 1 679 11 is_stmt 1 view .LVU228
 694               	.LVL50:
 679:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 695               		.loc 1 679 11 is_stmt 0 view .LVU229
 696 003a 8111      		cpse r24,__zero_reg__
 697 003c 00C0      		rjmp .L45
 698               	.LVL51:
 699               	.L46:
 680:tmk_core/protocol/lufa/lufa.c **** 
 700               		.loc 1 680 5 is_stmt 1 view .LVU230
 701               	.LBB265:
 702               	.LBI265:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 703               		.loc 3 358 23 view .LVU231
 704               	.LBB266:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 705               		.loc 3 360 5 view .LVU232
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 706               		.loc 3 360 14 is_stmt 0 view .LVU233
 707 003e 8091 E800 		lds r24,232
 708               	.LBE266:
 709               	.LBE265:
 680:tmk_core/protocol/lufa/lufa.c **** 
 710               		.loc 1 680 8 view .LVU234
 711 0042 85FF      		sbrs r24,5
 712 0044 00C0      		rjmp .L43
 682:tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 713               		.loc 1 682 5 is_stmt 1 view .LVU235
 714 0046 50E0      		ldi r21,0
 715 0048 40E0      		ldi r20,0
 716 004a 63E0      		ldi r22,lo8(3)
 717 004c 70E0      		ldi r23,0
 718 004e CE01      		movw r24,r28
 719 0050 0196      		adiw r24,1
 720 0052 0E94 0000 		call Endpoint_Write_Stream_LE
 721               	.LVL52:
 683:tmk_core/protocol/lufa/lufa.c **** #endif
 722               		.loc 1 683 5 view .LVU236
 723               	.LBB267:
 724               	.LBI267:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 725               		.loc 3 453 23 view .LVU237
 726               	.LBB268:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 727               		.loc 3 456 6 view .LVU238
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 728               		.loc 3 456 13 is_stmt 0 view .LVU239
 729 0056 8091 E800 		lds r24,232
 730 005a 8E77      		andi r24,lo8(126)
 731 005c 8093 E800 		sts 232,r24
 732               	.LVL53:
 733               	.L43:
 734               	/* epilogue start */
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 735               		.loc 3 456 13 view .LVU240
 736               	.LBE268:
 737               	.LBE267:
 685:tmk_core/protocol/lufa/lufa.c **** 
 738               		.loc 1 685 1 view .LVU241
 739 0060 0F90      		pop __tmp_reg__
 740 0062 0F90      		pop __tmp_reg__
 741 0064 0F90      		pop __tmp_reg__
 742 0066 DF91      		pop r29
 743 0068 CF91      		pop r28
 744 006a 0895      		ret
 745               		.cfi_endproc
 746               	.LFE129:
 748               		.section	.text.send_mouse,"ax",@progbits
 750               	send_mouse:
 751               	.LVL54:
 752               	.LFB128:
 622:tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 753               		.loc 1 622 48 is_stmt 1 view -0
 754               		.cfi_startproc
 622:tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 755               		.loc 1 622 48 is_stmt 0 view .LVU243
 756 0000 CF93      		push r28
 757               	.LCFI10:
 758               		.cfi_def_cfa_offset 3
 759               		.cfi_offset 28, -2
 760 0002 DF93      		push r29
 761               	.LCFI11:
 762               		.cfi_def_cfa_offset 4
 763               		.cfi_offset 29, -3
 764               	/* prologue: function */
 765               	/* frame size = 0 */
 766               	/* stack size = 2 */
 767               	.L__stack_usage = 2
 768 0004 EC01      		movw r28,r24
 624:tmk_core/protocol/lufa/lufa.c ****     uint8_t where   = where_to_send();
 769               		.loc 1 624 5 is_stmt 1 view .LVU244
 770               	.LVL55:
 625:tmk_core/protocol/lufa/lufa.c **** 
 771               		.loc 1 625 5 view .LVU245
 625:tmk_core/protocol/lufa/lufa.c **** 
 772               		.loc 1 625 23 is_stmt 0 view .LVU246
 773 0006 0E94 0000 		call where_to_send
 774               	.LVL56:
 646:tmk_core/protocol/lufa/lufa.c ****         return;
 775               		.loc 1 646 5 is_stmt 1 view .LVU247
 646:tmk_core/protocol/lufa/lufa.c ****         return;
 776               		.loc 1 646 8 is_stmt 0 view .LVU248
 777 000a 8230      		cpi r24,lo8(2)
 778 000c 01F0      		breq .L56
 646:tmk_core/protocol/lufa/lufa.c ****         return;
 779               		.loc 1 646 29 discriminator 1 view .LVU249
 780 000e 8430      		cpi r24,lo8(4)
 781 0010 01F4      		brne .L55
 782               	.L56:
 651:tmk_core/protocol/lufa/lufa.c **** 
 783               		.loc 1 651 5 is_stmt 1 view .LVU250
 784               	.LVL57:
 785               	.LBB269:
 786               	.LBI269:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 787               		.loc 3 267 23 view .LVU251
 788               	.LBB270:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 789               		.loc 3 270 6 view .LVU252
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 790               		.loc 3 270 12 is_stmt 0 view .LVU253
 791 0012 82E0      		ldi r24,lo8(2)
 792               	.LVL58:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 793               		.loc 3 270 12 view .LVU254
 794 0014 8093 E900 		sts 233,r24
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 795               		.loc 3 270 12 view .LVU255
 796               	.LBE270:
 797               	.LBE269:
 654:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 798               		.loc 1 654 11 is_stmt 1 view .LVU256
 799               	.LVL59:
 800               	.LBB272:
 801               	.LBB271:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 802               		.loc 3 270 12 is_stmt 0 view .LVU257
 803 0018 8FEF      		ldi r24,lo8(-1)
 804               	.LVL60:
 805               	.L58:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 806               		.loc 3 270 12 view .LVU258
 807               	.LBE271:
 808               	.LBE272:
 809               	.LBB273:
 810               	.LBI273:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 811               		.loc 3 358 23 is_stmt 1 view .LVU259
 812               	.LBB274:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 813               		.loc 3 360 5 view .LVU260
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 814               		.loc 3 360 14 is_stmt 0 view .LVU261
 815 001a 9091 E800 		lds r25,232
 816 001e 8150      		subi r24,lo8(-(-1))
 817               	.LVL61:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 818               		.loc 3 360 14 view .LVU262
 819               	.LBE274:
 820               	.LBE273:
 654:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 821               		.loc 1 654 22 view .LVU263
 822 0020 95FD      		sbrc r25,5
 823 0022 00C0      		rjmp .L59
 654:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 824               		.loc 1 654 57 is_stmt 1 view .LVU264
 825               	.LVL62:
 826               	.LBB275:
 827               	.LBI275:
 255:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 828               		.loc 4 255 1 view .LVU265
 829               	.LBB276:
 257:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 830               		.loc 4 257 2 view .LVU266
 261:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 831               		.loc 4 261 2 view .LVU267
 262:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 832               		.loc 4 262 2 view .LVU268
 263:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 833               		.loc 4 263 2 view .LVU269
 273:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 834               		.loc 4 273 3 view .LVU270
 835               		.loc 4 276 2 view .LVU271
 836 0024 95ED      		ldi r25,lo8(-43)
 837 0026 9A95      	1:	dec r25
 838 0028 01F4      		brne 1b
 839 002a 0000      		nop
 840               		.loc 4 276 2 is_stmt 0 view .LVU272
 841               	.LBE276:
 842               	.LBE275:
 654:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 843               		.loc 1 654 11 is_stmt 1 view .LVU273
 844               	.LVL63:
 654:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 845               		.loc 1 654 11 is_stmt 0 view .LVU274
 846 002c 8111      		cpse r24,__zero_reg__
 847 002e 00C0      		rjmp .L58
 848               	.LVL64:
 849               	.L59:
 655:tmk_core/protocol/lufa/lufa.c **** 
 850               		.loc 1 655 5 is_stmt 1 view .LVU275
 851               	.LBB277:
 852               	.LBI277:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 853               		.loc 3 358 23 view .LVU276
 854               	.LBB278:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 855               		.loc 3 360 5 view .LVU277
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 856               		.loc 3 360 14 is_stmt 0 view .LVU278
 857 0030 8091 E800 		lds r24,232
 858               	.LBE278:
 859               	.LBE277:
 655:tmk_core/protocol/lufa/lufa.c **** 
 860               		.loc 1 655 8 view .LVU279
 861 0034 85FF      		sbrs r24,5
 862 0036 00C0      		rjmp .L55
 658:tmk_core/protocol/lufa/lufa.c **** 
 863               		.loc 1 658 5 is_stmt 1 view .LVU280
 864 0038 50E0      		ldi r21,0
 865 003a 40E0      		ldi r20,0
 866 003c 66E0      		ldi r22,lo8(6)
 867 003e 70E0      		ldi r23,0
 868 0040 CE01      		movw r24,r28
 869 0042 0E94 0000 		call Endpoint_Write_Stream_LE
 870               	.LVL65:
 661:tmk_core/protocol/lufa/lufa.c **** #endif
 871               		.loc 1 661 5 view .LVU281
 872               	.LBB279:
 873               	.LBI279:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 874               		.loc 3 453 23 view .LVU282
 875               	.LBB280:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 876               		.loc 3 456 6 view .LVU283
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 877               		.loc 3 456 13 is_stmt 0 view .LVU284
 878 0046 8091 E800 		lds r24,232
 879 004a 8E77      		andi r24,lo8(126)
 880 004c 8093 E800 		sts 232,r24
 881               	.LVL66:
 882               	.L55:
 883               	/* epilogue start */
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 884               		.loc 3 456 13 view .LVU285
 885               	.LBE280:
 886               	.LBE279:
 663:tmk_core/protocol/lufa/lufa.c **** 
 887               		.loc 1 663 1 view .LVU286
 888 0050 DF91      		pop r29
 889 0052 CF91      		pop r28
 890               	.LVL67:
 663:tmk_core/protocol/lufa/lufa.c **** 
 891               		.loc 1 663 1 view .LVU287
 892 0054 0895      		ret
 893               		.cfi_endproc
 894               	.LFE128:
 896               		.section	.text.send_keyboard,"ax",@progbits
 898               	send_keyboard:
 899               	.LVL68:
 900               	.LFB127:
 559:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 901               		.loc 1 559 54 is_stmt 1 view -0
 902               		.cfi_startproc
 559:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 903               		.loc 1 559 54 is_stmt 0 view .LVU289
 904 0000 CF93      		push r28
 905               	.LCFI12:
 906               		.cfi_def_cfa_offset 3
 907               		.cfi_offset 28, -2
 908 0002 DF93      		push r29
 909               	.LCFI13:
 910               		.cfi_def_cfa_offset 4
 911               		.cfi_offset 29, -3
 912               	/* prologue: function */
 913               	/* frame size = 0 */
 914               	/* stack size = 2 */
 915               	.L__stack_usage = 2
 916 0004 EC01      		movw r28,r24
 560:tmk_core/protocol/lufa/lufa.c ****     uint8_t where   = where_to_send();
 917               		.loc 1 560 5 is_stmt 1 view .LVU290
 918               	.LVL69:
 561:tmk_core/protocol/lufa/lufa.c **** 
 919               		.loc 1 561 5 view .LVU291
 561:tmk_core/protocol/lufa/lufa.c **** 
 920               		.loc 1 561 23 is_stmt 0 view .LVU292
 921 0006 0E94 0000 		call where_to_send
 922               	.LVL70:
 587:tmk_core/protocol/lufa/lufa.c ****         return;
 923               		.loc 1 587 5 is_stmt 1 view .LVU293
 587:tmk_core/protocol/lufa/lufa.c ****         return;
 924               		.loc 1 587 8 is_stmt 0 view .LVU294
 925 000a 8230      		cpi r24,lo8(2)
 926 000c 01F0      		breq .L75
 587:tmk_core/protocol/lufa/lufa.c ****         return;
 927               		.loc 1 587 29 discriminator 1 view .LVU295
 928 000e 8430      		cpi r24,lo8(4)
 929 0010 01F4      		brne .L74
 930               	.L75:
 592:tmk_core/protocol/lufa/lufa.c ****     uint8_t size = KEYBOARD_REPORT_SIZE;
 931               		.loc 1 592 5 is_stmt 1 view .LVU296
 932               	.LVL71:
 593:tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 933               		.loc 1 593 5 view .LVU297
 600:tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 934               		.loc 1 600 5 view .LVU298
 935               	.LBB281:
 936               	.LBI281:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 937               		.loc 3 267 23 view .LVU299
 938               	.LBB282:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 939               		.loc 3 270 6 view .LVU300
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 940               		.loc 3 270 12 is_stmt 0 view .LVU301
 941 0012 81E0      		ldi r24,lo8(1)
 942               	.LVL72:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 943               		.loc 3 270 12 view .LVU302
 944 0014 8093 E900 		sts 233,r24
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 945               		.loc 3 270 12 view .LVU303
 946               	.LBE282:
 947               	.LBE281:
 602:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 948               		.loc 1 602 11 is_stmt 1 view .LVU304
 949               	.LVL73:
 950               	.LBB284:
 951               	.LBB283:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 952               		.loc 3 270 12 is_stmt 0 view .LVU305
 953 0018 8FEF      		ldi r24,lo8(-1)
 954               	.LVL74:
 955               	.L77:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 956               		.loc 3 270 12 view .LVU306
 957               	.LBE283:
 958               	.LBE284:
 959               	.LBB285:
 960               	.LBI285:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 961               		.loc 3 358 23 is_stmt 1 view .LVU307
 962               	.LBB286:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 963               		.loc 3 360 5 view .LVU308
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 964               		.loc 3 360 14 is_stmt 0 view .LVU309
 965 001a 9091 E800 		lds r25,232
 966 001e 8150      		subi r24,lo8(-(-1))
 967               	.LVL75:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 968               		.loc 3 360 14 view .LVU310
 969               	.LBE286:
 970               	.LBE285:
 602:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 971               		.loc 1 602 22 view .LVU311
 972 0020 95FD      		sbrc r25,5
 973 0022 00C0      		rjmp .L78
 602:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 974               		.loc 1 602 57 is_stmt 1 view .LVU312
 975               	.LVL76:
 976               	.LBB287:
 977               	.LBI287:
 255:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 978               		.loc 4 255 1 view .LVU313
 979               	.LBB288:
 257:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 980               		.loc 4 257 2 view .LVU314
 261:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 981               		.loc 4 261 2 view .LVU315
 262:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 982               		.loc 4 262 2 view .LVU316
 263:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 983               		.loc 4 263 2 view .LVU317
 273:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 984               		.loc 4 273 3 view .LVU318
 985               		.loc 4 276 2 view .LVU319
 986 0024 95ED      		ldi r25,lo8(-43)
 987 0026 9A95      	1:	dec r25
 988 0028 01F4      		brne 1b
 989 002a 0000      		nop
 990               		.loc 4 276 2 is_stmt 0 view .LVU320
 991               	.LBE288:
 992               	.LBE287:
 602:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 993               		.loc 1 602 11 is_stmt 1 view .LVU321
 994               	.LVL77:
 602:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 995               		.loc 1 602 11 is_stmt 0 view .LVU322
 996 002c 8111      		cpse r24,__zero_reg__
 997 002e 00C0      		rjmp .L77
 998               	.LVL78:
 999               	.L78:
 603:tmk_core/protocol/lufa/lufa.c **** 
 1000               		.loc 1 603 5 is_stmt 1 view .LVU323
 1001               	.LBB289:
 1002               	.LBI289:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1003               		.loc 3 358 23 view .LVU324
 1004               	.LBB290:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1005               		.loc 3 360 5 view .LVU325
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1006               		.loc 3 360 14 is_stmt 0 view .LVU326
 1007 0030 8091 E800 		lds r24,232
 1008               	.LBE290:
 1009               	.LBE289:
 603:tmk_core/protocol/lufa/lufa.c **** 
 1010               		.loc 1 603 8 view .LVU327
 1011 0034 85FF      		sbrs r24,5
 1012 0036 00C0      		rjmp .L74
 606:tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(&report->mods, 8, NULL);
 1013               		.loc 1 606 5 is_stmt 1 view .LVU328
 607:tmk_core/protocol/lufa/lufa.c ****     } else {
 1014               		.loc 1 607 9 is_stmt 0 view .LVU329
 1015 0038 50E0      		ldi r21,0
 1016 003a 40E0      		ldi r20,0
 1017 003c 68E0      		ldi r22,lo8(8)
 1018 003e 70E0      		ldi r23,0
 609:tmk_core/protocol/lufa/lufa.c ****     }
 1019               		.loc 1 609 9 is_stmt 1 view .LVU330
 1020 0040 CE01      		movw r24,r28
 1021 0042 0E94 0000 		call Endpoint_Write_Stream_LE
 1022               	.LVL79:
 613:tmk_core/protocol/lufa/lufa.c **** 
 1023               		.loc 1 613 5 view .LVU331
 1024               	.LBB291:
 1025               	.LBI291:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1026               		.loc 3 453 23 view .LVU332
 1027               	.LBB292:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1028               		.loc 3 456 6 view .LVU333
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1029               		.loc 3 456 13 is_stmt 0 view .LVU334
 1030 0046 8091 E800 		lds r24,232
 1031 004a 8E77      		andi r24,lo8(126)
 1032 004c 8093 E800 		sts 232,r24
 1033               	.LBE292:
 1034               	.LBE291:
 615:tmk_core/protocol/lufa/lufa.c **** }
 1035               		.loc 1 615 5 is_stmt 1 view .LVU335
 615:tmk_core/protocol/lufa/lufa.c **** }
 1036               		.loc 1 615 26 is_stmt 0 view .LVU336
 1037 0050 88E0      		ldi r24,lo8(8)
 1038 0052 FE01      		movw r30,r28
 1039 0054 A0E0      		ldi r26,lo8(keyboard_report_sent)
 1040 0056 B0E0      		ldi r27,hi8(keyboard_report_sent)
 1041               		0:
 1042 0058 0190      		ld r0,Z+
 1043 005a 0D92      		st X+,r0
 1044 005c 8A95      		dec r24
 1045 005e 01F4      		brne 0b
 1046               	.LVL80:
 1047               	.L74:
 1048               	/* epilogue start */
 616:tmk_core/protocol/lufa/lufa.c **** 
 1049               		.loc 1 616 1 view .LVU337
 1050 0060 DF91      		pop r29
 1051 0062 CF91      		pop r28
 1052               	.LVL81:
 616:tmk_core/protocol/lufa/lufa.c **** 
 1053               		.loc 1 616 1 view .LVU338
 1054 0064 0895      		ret
 1055               		.cfi_endproc
 1056               	.LFE127:
 1058               		.section	.text.EVENT_USB_Device_Connect,"ax",@progbits
 1059               	.global	EVENT_USB_Device_Connect
 1061               	EVENT_USB_Device_Connect:
 1062               	.LFB118:
 285:tmk_core/protocol/lufa/lufa.c ****     print("[C]");
 1063               		.loc 1 285 37 is_stmt 1 view -0
 1064               		.cfi_startproc
 1065               	/* prologue: function */
 1066               	/* frame size = 0 */
 1067               	/* stack size = 0 */
 1068               	.L__stack_usage = 0
 286:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 1069               		.loc 1 286 5 view .LVU340
 1070               	.LBB293:
 286:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 1071               		.loc 1 286 5 view .LVU341
 286:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 1072               		.loc 1 286 5 view .LVU342
 1073               	.LBE293:
 1074 0000 80E0      		ldi r24,lo8(__c.5931)
 1075 0002 90E0      		ldi r25,hi8(__c.5931)
 1076 0004 0E94 0000 		call xputs
 1077               	.LVL82:
 288:tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 1078               		.loc 1 288 5 view .LVU343
 288:tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 1079               		.loc 1 288 9 is_stmt 0 view .LVU344
 1080 0008 8091 0000 		lds r24,USB_IsInitialized
 288:tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 1081               		.loc 1 288 8 view .LVU345
 1082 000c 8111      		cpse r24,__zero_reg__
 1083 000e 00C0      		rjmp .L95
 289:tmk_core/protocol/lufa/lufa.c ****         USB_Init();
 1084               		.loc 1 289 9 is_stmt 1 view .LVU346
 1085 0010 0E94 0000 		call USB_Disable
 1086               	.LVL83:
 290:tmk_core/protocol/lufa/lufa.c ****         USB_Device_EnableSOFEvents();
 1087               		.loc 1 290 9 view .LVU347
 1088 0014 0E94 0000 		call USB_Init
 1089               	.LVL84:
 291:tmk_core/protocol/lufa/lufa.c ****     }
 1090               		.loc 1 291 9 view .LVU348
 1091               	.LBB294:
 1092               	.LBI294:
 1093               		.file 5 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****      Copyright (C) Dean Camera, 2019.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \copydetails Group_Device_AVR8
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \ingroup Group_Device
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \defgroup Group_Device_AVR8 Device Management (AVR8)
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  Architecture specific USB Device definitions for the Atmel 8-bit AVR microcontrollers.
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  @{
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #ifndef __USBDEVICE_AVR8_H__
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #define __USBDEVICE_AVR8_H__
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Includes: */
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBController.h"
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../StdDescriptors.h"
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBInterrupt.h"
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../Endpoint.h"
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if defined(__cplusplus)
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			extern "C" {
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Preprocessor Checks: */
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_RAM_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_RAM_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_RAM_DESCRIPTORS))
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_RAM_DESCRIPTORS are mutually exclusive.
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Public Interface - May be used in end-application: */
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Macros: */
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** \name USB Device Mode Option Masks */
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@{
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  USB interface should be initialized in low speed (1.5Mb/s) mode.
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Low Speed mode is not available on all USB AVR models.
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        \n
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Restrictions apply on the number, size and type of endpoints which can be used
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        when running in low speed mode - please refer to the USB 2.0 specification.
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USB_DEVICE_OPT_LOWSPEED            (1 << 0)
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  USB interface should be initialized in full speed (12Mb/s) mode.
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#define USB_DEVICE_OPT_FULLSPEED               (0 << 0)
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@}
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if (!defined(NO_INTERNAL_SERIAL) && \
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			     (defined(USB_SERIES_7_AVR) || defined(USB_SERIES_6_AVR) || \
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			      defined(USB_SERIES_4_AVR) || defined(USB_SERIES_2_AVR) || \
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				  defined(__DOXYGEN__)))
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** String descriptor index for the device's unique serial number string descriptor within the 
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  This unique serial number is used by the host to associate resources to the device (such as
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number allocations) to a device regardless of the port it is plugged in to on the host. Som
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  a unique serial number internally, and setting the device descriptors serial number string 
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  will cause it to use the internal serial number.
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number for the device.
 115:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#ifndef USE_INTERNAL_SERIAL
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					#define USE_INTERNAL_SERIAL         0xDC
 118:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#endif
 119:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 120:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Length of the device's unique internal serial number, in bits, if present on the selected m
 121:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 122:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 123:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS     80
 124:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 125:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Start address of the internal serial number, in the appropriate address space, if present o
 126:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 127:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 128:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS   0x0E
 129:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#else
 130:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#undef	USE_INTERNAL_SERIAL
 131:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL             NO_DESCRIPTOR
 132:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 133:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS     0
 134:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS   0
 135:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
 136:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 137:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Function Prototypes: */
 138:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Sends a Remote Wakeup request to the host. This signals to the host that the device should
 139:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  be taken out of suspended mode, and communications should resume.
 140:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 141:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  Typically, this is implemented so that HID devices (mice, keyboards, etc.) can wake up the
 142:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  host computer when the host has suspended all USB devices to enter a low power state.
 143:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 144:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention This function should only be used if the device has indicated to the host that it
 145:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             supports the Remote Wakeup feature in the device descriptors, and should only be
 146:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             issued if the host is currently allowing remote wakeup events from the device (i.
 147:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_Device_RemoteWakeupEnabled flag is set). When the \c NO_DEVICE_REMOT
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             compile time option is used, this function is unavailable.
 149:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             \n\n
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 151:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention The USB clock must be running for this function to operate. If the stack is initi
 152:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_OPT_MANUAL_PLL option enabled, the user must ensure that the PLL is 
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             before attempting to call this function.
 154:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 155:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \see \ref Group_StdDescriptors for more information on the RMWAKEUP feature and device descr
 156:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 157:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			void USB_Device_SendRemoteWakeup(void);
 158:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 159:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 160:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Returns the current USB frame number, when in device mode. Every millisecond the USB bus is 
 161:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  the frame number is incremented by one.
 162:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 163:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \return Current USB frame number from the USB controller.
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESUL
 166:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void)
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				return UDFNUM;
 169:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 170:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 171:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if !defined(NO_SOF_EVENTS)
 172:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Enables the device mode Start Of Frame events. When enabled, this causes the
 173:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event to fire once per millisecond, synchronized to th
 174:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  at the start of each USB frame when enumerated in device mode.
 175:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 178:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void) ATTR_ALWAYS_INLINE;
 179:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void)
 1094               		.loc 5 179 24 view .LVU349
 1095               	.LBE294:
 180:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 181:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Enable(USB_INT_SOFI);
 1096               		.loc 5 181 6 view .LVU350
 1097               	.LBB297:
 1098               	.LBB295:
 1099               	.LBI295:
 1100               		.file 6 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****      Copyright (C) Dean Camera, 2019.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \brief USB Controller Interrupt definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  This file contains definitions required for the correct handling of low level USB service routi
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  from the USB controller.
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  */
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #ifndef __USBINTERRUPT_AVR8_H__
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #define __USBINTERRUPT_AVR8_H__
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Includes: */
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#include "../../../../Common/Common.h"
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if defined(__cplusplus)
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			extern "C" {
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Preprocessor Checks: */
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Private Interface - For use in library only: */
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	#if !defined(__DOXYGEN__)
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Enums: */
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			enum USB_Interrupts_t
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || def
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBUSTI  = 0,
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__))
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_IDTI    = 1,
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__))
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_WAKEUPI = 2,
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SUSPI   = 3,
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_EORSTI  = 4,
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SOFI    = 5,
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RXSTPI  = 6,
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__))
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_HSOFI   = 7,
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DCONNI  = 8,
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DDISCI  = 9,
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RSTI    = 10,
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_BCERRI  = 11,
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBERRI  = 12,
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SRPI    = 13,
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			};
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Inline Functions: */
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt)
 1101               		.loc 6 88 23 view .LVU351
 1102               	.LBB296:
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 1103               		.loc 6 90 5 view .LVU352
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << VBUSTE);
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << IDTE);
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << WAKEUPE);
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SUSPE);
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << EORSTE);
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SOFE);
 1104               		.loc 6 113 7 view .LVU353
 1105               		.loc 6 113 14 is_stmt 0 view .LVU354
 1106 0018 8091 E200 		lds r24,226
 1107 001c 8460      		ori r24,lo8(4)
 1108 001e 8093 E200 		sts 226,r24
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 1109               		.loc 6 114 7 is_stmt 1 view .LVU355
 1110               	.LVL85:
 1111               	.L95:
 1112               	/* epilogue start */
 1113               		.loc 6 114 7 is_stmt 0 view .LVU356
 1114               	.LBE296:
 1115               	.LBE295:
 1116               	.LBE297:
 293:tmk_core/protocol/lufa/lufa.c **** 
 1117               		.loc 1 293 1 view .LVU357
 1118 0022 0895      		ret
 1119               		.cfi_endproc
 1120               	.LFE118:
 1122               		.section	.text.EVENT_USB_Device_Disconnect,"ax",@progbits
 1123               	.global	EVENT_USB_Device_Disconnect
 1125               	EVENT_USB_Device_Disconnect:
 1126               	.LFB119:
 299:tmk_core/protocol/lufa/lufa.c ****     print("[D]");
 1127               		.loc 1 299 40 is_stmt 1 view -0
 1128               		.cfi_startproc
 1129               	/* prologue: function */
 1130               	/* frame size = 0 */
 1131               	/* stack size = 0 */
 1132               	.L__stack_usage = 0
 300:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 1133               		.loc 1 300 5 view .LVU359
 1134               	.LBB298:
 300:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 1135               		.loc 1 300 5 view .LVU360
 300:tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 1136               		.loc 1 300 5 view .LVU361
 1137               	.LBE298:
 1138 0000 80E0      		ldi r24,lo8(__c.5936)
 1139 0002 90E0      		ldi r25,hi8(__c.5936)
 1140 0004 0E94 0000 		call xputs
 1141               	.LVL86:
 302:tmk_core/protocol/lufa/lufa.c ****     /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 1142               		.loc 1 302 5 view .LVU362
 302:tmk_core/protocol/lufa/lufa.c ****     /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 1143               		.loc 1 302 23 is_stmt 0 view .LVU363
 1144 0008 1092 0000 		sts USB_IsInitialized,__zero_reg__
 1145               	/* epilogue start */
 310:tmk_core/protocol/lufa/lufa.c **** 
 1146               		.loc 1 310 1 view .LVU364
 1147 000c 0895      		ret
 1148               		.cfi_endproc
 1149               	.LFE119:
 1151               		.section	.text.EVENT_USB_Device_Reset,"ax",@progbits
 1152               	.global	EVENT_USB_Device_Reset
 1154               	EVENT_USB_Device_Reset:
 1155               	.LFB120:
 316:tmk_core/protocol/lufa/lufa.c **** 
 1156               		.loc 1 316 35 is_stmt 1 view -0
 1157               		.cfi_startproc
 1158               	/* prologue: function */
 1159               	/* frame size = 0 */
 1160               	/* stack size = 0 */
 1161               	.L__stack_usage = 0
 316:tmk_core/protocol/lufa/lufa.c **** 
 1162               		.loc 1 316 37 view .LVU366
 1163               	.LBB299:
 316:tmk_core/protocol/lufa/lufa.c **** 
 1164               		.loc 1 316 37 view .LVU367
 316:tmk_core/protocol/lufa/lufa.c **** 
 1165               		.loc 1 316 37 view .LVU368
 1166               	.LBE299:
 1167 0000 80E0      		ldi r24,lo8(__c.5941)
 1168 0002 90E0      		ldi r25,hi8(__c.5941)
 1169 0004 0C94 0000 		jmp xputs
 1170               	.LVL87:
 1171               		.cfi_endproc
 1172               	.LFE120:
 1174               		.section	.text.EVENT_USB_Device_Suspend,"ax",@progbits
 1175               	.global	EVENT_USB_Device_Suspend
 1177               	EVENT_USB_Device_Suspend:
 1178               	.LFB121:
 322:tmk_core/protocol/lufa/lufa.c ****     print("[S]");
 1179               		.loc 1 322 33 view -0
 1180               		.cfi_startproc
 1181               	/* prologue: function */
 1182               	/* frame size = 0 */
 1183               	/* stack size = 0 */
 1184               	.L__stack_usage = 0
 323:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 1185               		.loc 1 323 5 view .LVU370
 1186               	.LBB300:
 323:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 1187               		.loc 1 323 5 view .LVU371
 323:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 1188               		.loc 1 323 5 view .LVU372
 1189               	.LBE300:
 1190 0000 80E0      		ldi r24,lo8(__c.5945)
 1191 0002 90E0      		ldi r25,hi8(__c.5945)
 1192 0004 0C94 0000 		jmp xputs
 1193               	.LVL88:
 1194               		.cfi_endproc
 1195               	.LFE121:
 1197               		.section	.text.EVENT_USB_Device_WakeUp,"ax",@progbits
 1198               	.global	EVENT_USB_Device_WakeUp
 1200               	EVENT_USB_Device_WakeUp:
 1201               	.LFB122:
 333:tmk_core/protocol/lufa/lufa.c ****     print("[W]");
 1202               		.loc 1 333 32 view -0
 1203               		.cfi_startproc
 1204               	/* prologue: function */
 1205               	/* frame size = 0 */
 1206               	/* stack size = 0 */
 1207               	.L__stack_usage = 0
 334:tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 1208               		.loc 1 334 5 view .LVU374
 1209               	.LBB301:
 334:tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 1210               		.loc 1 334 5 view .LVU375
 334:tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 1211               		.loc 1 334 5 view .LVU376
 1212               	.LBE301:
 1213 0000 80E0      		ldi r24,lo8(__c.5949)
 1214 0002 90E0      		ldi r25,hi8(__c.5949)
 1215 0004 0E94 0000 		call xputs
 1216               	.LVL89:
 335:tmk_core/protocol/lufa/lufa.c **** 
 1217               		.loc 1 335 5 view .LVU377
 1218 0008 0C94 0000 		jmp suspend_wakeup_init
 1219               	.LVL90:
 1220               		.cfi_endproc
 1221               	.LFE122:
 1223               		.section	.text.EVENT_USB_Device_StartOfFrame,"ax",@progbits
 1224               	.global	EVENT_USB_Device_StartOfFrame
 1226               	EVENT_USB_Device_StartOfFrame:
 1227               	.LFB123:
 356:tmk_core/protocol/lufa/lufa.c ****     static uint8_t count;
 1228               		.loc 1 356 42 view -0
 1229               		.cfi_startproc
 1230               	/* prologue: function */
 1231               	/* frame size = 0 */
 1232               	/* stack size = 0 */
 1233               	.L__stack_usage = 0
 357:tmk_core/protocol/lufa/lufa.c ****     if (++count % 50) return;
 1234               		.loc 1 357 5 view .LVU379
 358:tmk_core/protocol/lufa/lufa.c ****     count = 0;
 1235               		.loc 1 358 5 view .LVU380
 358:tmk_core/protocol/lufa/lufa.c ****     count = 0;
 1236               		.loc 1 358 9 is_stmt 0 view .LVU381
 1237 0000 2091 0000 		lds r18,count.5955
 1238 0004 2F5F      		subi r18,lo8(-(1))
 1239 0006 822F      		mov r24,r18
 1240 0008 62E3      		ldi r22,lo8(50)
 1241 000a 0E94 0000 		call __udivmodqi4
 358:tmk_core/protocol/lufa/lufa.c ****     count = 0;
 1242               		.loc 1 358 8 view .LVU382
 1243 000e 9923      		tst r25
 1244 0010 01F0      		breq .L102
 1245 0012 2093 0000 		sts count.5955,r18
 1246 0016 0895      		ret
 1247               	.L102:
 359:tmk_core/protocol/lufa/lufa.c **** 
 1248               		.loc 1 359 5 is_stmt 1 view .LVU383
 359:tmk_core/protocol/lufa/lufa.c **** 
 1249               		.loc 1 359 11 is_stmt 0 view .LVU384
 1250 0018 1092 0000 		sts count.5955,__zero_reg__
 361:tmk_core/protocol/lufa/lufa.c ****     Console_Task();
 1251               		.loc 1 361 5 is_stmt 1 view .LVU385
 361:tmk_core/protocol/lufa/lufa.c ****     Console_Task();
 1252               		.loc 1 361 8 is_stmt 0 view .LVU386
 1253 001c 8091 0000 		lds r24,console_flush
 1254 0020 8823      		tst r24
 1255 0022 01F0      		breq .L101
 362:tmk_core/protocol/lufa/lufa.c ****     console_flush = false;
 1256               		.loc 1 362 5 is_stmt 1 view .LVU387
 1257               	.LBB326:
 1258               	.LBI326:
 221:tmk_core/protocol/lufa/lufa.c ****     /* Device must be connected and configured for the task to run */
 1259               		.loc 1 221 13 view .LVU388
 1260               	.LBB327:
 223:tmk_core/protocol/lufa/lufa.c **** 
 1261               		.loc 1 223 5 view .LVU389
 223:tmk_core/protocol/lufa/lufa.c **** 
 1262               		.loc 1 223 25 is_stmt 0 view .LVU390
 1263 0024 8091 0000 		lds r24,USB_DeviceState
 223:tmk_core/protocol/lufa/lufa.c **** 
 1264               		.loc 1 223 8 view .LVU391
 1265 0028 8430      		cpi r24,lo8(4)
 1266 002a 01F4      		brne .L105
 225:tmk_core/protocol/lufa/lufa.c **** 
 1267               		.loc 1 225 5 is_stmt 1 view .LVU392
 1268               	.LBB328:
 1269               	.LBI328:
 250:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1270               		.loc 3 250 26 view .LVU393
 1271               	.LBB329:
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1272               		.loc 3 253 6 view .LVU394
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1273               		.loc 3 253 15 is_stmt 0 view .LVU395
 1274 002c 9091 E900 		lds r25,233
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1275               		.loc 3 253 21 view .LVU396
 1276 0030 9F70      		andi r25,lo8(15)
 1277               	.LBB330:
 1278               	.LBI330:
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1279               		.loc 3 238 26 is_stmt 1 view .LVU397
 1280               	.LBB331:
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1281               		.loc 3 240 5 view .LVU398
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1282               		.loc 3 240 13 is_stmt 0 view .LVU399
 1283 0032 2091 EC00 		lds r18,236
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1284               		.loc 3 240 55 view .LVU400
 1285 0036 822F      		mov r24,r18
 1286 0038 8170      		andi r24,lo8(1)
 1287 003a 20FD      		sbrc r18,0
 1288 003c 80E8      		ldi r24,lo8(-128)
 1289               	.L106:
 1290               	.LBE331:
 1291               	.LBE330:
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1292               		.loc 3 253 44 view .LVU401
 1293 003e 892B      		or r24,r25
 1294               	.LVL91:
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1295               		.loc 3 253 44 view .LVU402
 1296               	.LBE329:
 1297               	.LBE328:
 253:tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 1298               		.loc 1 253 5 is_stmt 1 view .LVU403
 1299               	.LBB332:
 1300               	.LBI332:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1301               		.loc 3 267 23 view .LVU404
 1302               	.LBB333:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1303               		.loc 3 270 6 view .LVU405
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1304               		.loc 3 270 12 is_stmt 0 view .LVU406
 1305 0040 93E0      		ldi r25,lo8(3)
 1306 0042 9093 E900 		sts 233,r25
 1307               	.LVL92:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1308               		.loc 3 270 12 view .LVU407
 1309               	.LBE333:
 1310               	.LBE332:
 254:tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 1311               		.loc 1 254 5 is_stmt 1 view .LVU408
 1312               	.LBB334:
 1313               	.LBI334:
 311:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1314               		.loc 3 311 23 view .LVU409
 1315               	.LBB335:
 313:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1316               		.loc 3 313 5 view .LVU410
 313:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1317               		.loc 3 313 14 is_stmt 0 view .LVU411
 1318 0046 9091 EB00 		lds r25,235
 1319               	.LBE335:
 1320               	.LBE334:
 254:tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 1321               		.loc 1 254 8 view .LVU412
 1322 004a 90FF      		sbrs r25,0
 1323 004c 00C0      		rjmp .L110
 1324               	.LBB336:
 1325               	.LBI336:
 368:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1326               		.loc 3 368 23 is_stmt 1 view .LVU413
 1327               	.LBB337:
 370:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1328               		.loc 3 370 5 view .LVU414
 370:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1329               		.loc 3 370 14 is_stmt 0 view .LVU415
 1330 004e 9091 EE00 		lds r25,238
 1331               	.LBE337:
 1332               	.LBE336:
 254:tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 1333               		.loc 1 254 31 view .LVU416
 1334 0052 97FD      		sbrc r25,7
 1335 0054 00C0      		rjmp .L108
 1336               	.L110:
 267:tmk_core/protocol/lufa/lufa.c **** }
 1337               		.loc 1 267 5 is_stmt 1 view .LVU417
 1338               	.LVL93:
 1339               	.LBB338:
 1340               	.LBI338:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1341               		.loc 3 267 23 view .LVU418
 1342               	.LBB339:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1343               		.loc 3 270 6 view .LVU419
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1344               		.loc 3 270 23 is_stmt 0 view .LVU420
 1345 0056 8F70      		andi r24,lo8(15)
 1346               	.LVL94:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1347               		.loc 3 270 12 view .LVU421
 1348 0058 8093 E900 		sts 233,r24
 1349               	.L105:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1350               		.loc 3 270 12 view .LVU422
 1351               	.LBE339:
 1352               	.LBE338:
 1353               	.LBE327:
 1354               	.LBE326:
 363:tmk_core/protocol/lufa/lufa.c **** }
 1355               		.loc 1 363 5 is_stmt 1 view .LVU423
 363:tmk_core/protocol/lufa/lufa.c **** }
 1356               		.loc 1 363 19 is_stmt 0 view .LVU424
 1357 005c 1092 0000 		sts console_flush,__zero_reg__
 1358               	.L101:
 1359               	/* epilogue start */
 364:tmk_core/protocol/lufa/lufa.c **** 
 1360               		.loc 1 364 1 view .LVU425
 1361 0060 0895      		ret
 1362               	.LVL95:
 1363               	.L109:
 1364               	.LBB349:
 1365               	.LBB348:
 260:tmk_core/protocol/lufa/lufa.c **** 
 1366               		.loc 1 260 43 is_stmt 1 view .LVU426
 1367               	.LBB340:
 1368               	.LBI340:
 552:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1369               		.loc 3 552 23 view .LVU427
 1370               	.LBB341:
 1371               		.loc 3 554 5 view .LVU428
 1372               		.loc 3 554 12 is_stmt 0 view .LVU429
 1373 0062 1092 F100 		sts 241,__zero_reg__
 1374               	.LVL96:
 1375               	.L108:
 1376               		.loc 3 554 12 view .LVU430
 1377               	.LBE341:
 1378               	.LBE340:
 260:tmk_core/protocol/lufa/lufa.c **** 
 1379               		.loc 1 260 11 is_stmt 1 view .LVU431
 1380               	.LBB342:
 1381               	.LBI342:
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1382               		.loc 3 358 23 view .LVU432
 1383               	.LBB343:
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1384               		.loc 3 360 5 view .LVU433
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1385               		.loc 3 360 14 is_stmt 0 view .LVU434
 1386 0066 9091 E800 		lds r25,232
 1387               	.LBE343:
 1388               	.LBE342:
 260:tmk_core/protocol/lufa/lufa.c **** 
 1389               		.loc 1 260 11 view .LVU435
 1390 006a 95FD      		sbrc r25,5
 1391 006c 00C0      		rjmp .L109
 263:tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 1392               		.loc 1 263 5 is_stmt 1 view .LVU436
 1393               	.LBB344:
 1394               	.LBI344:
 405:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1395               		.loc 3 405 23 view .LVU437
 1396               	.LBB345:
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1397               		.loc 3 407 5 view .LVU438
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1398               		.loc 3 407 14 is_stmt 0 view .LVU439
 1399 006e 9091 E800 		lds r25,232
 1400               	.LBE345:
 1401               	.LBE344:
 263:tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 1402               		.loc 1 263 8 view .LVU440
 1403 0072 90FF      		sbrs r25,0
 1404 0074 00C0      		rjmp .L110
 264:tmk_core/protocol/lufa/lufa.c ****     }
 1405               		.loc 1 264 9 is_stmt 1 view .LVU441
 1406               	.LBB346:
 1407               	.LBI346:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1408               		.loc 3 453 23 view .LVU442
 1409               	.LBB347:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1410               		.loc 3 456 6 view .LVU443
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1411               		.loc 3 456 13 is_stmt 0 view .LVU444
 1412 0076 9091 E800 		lds r25,232
 1413 007a 9E77      		andi r25,lo8(126)
 1414 007c 9093 E800 		sts 232,r25
 1415 0080 00C0      		rjmp .L110
 1416               	.LBE347:
 1417               	.LBE346:
 1418               	.LBE348:
 1419               	.LBE349:
 1420               		.cfi_endproc
 1421               	.LFE123:
 1423               		.section	.text.EVENT_USB_Device_ConfigurationChanged,"ax",@progbits
 1424               	.global	EVENT_USB_Device_ConfigurationChanged
 1426               	EVENT_USB_Device_ConfigurationChanged:
 1427               	.LFB124:
 375:tmk_core/protocol/lufa/lufa.c ****     bool ConfigSuccess = true;
 1428               		.loc 1 375 50 is_stmt 1 view -0
 1429               		.cfi_startproc
 1430               	/* prologue: function */
 1431               	/* frame size = 0 */
 1432               	/* stack size = 0 */
 1433               	.L__stack_usage = 0
 376:tmk_core/protocol/lufa/lufa.c **** 
 1434               		.loc 1 376 5 view .LVU446
 1435               	.LVL97:
 380:tmk_core/protocol/lufa/lufa.c **** #endif
 1436               		.loc 1 380 5 view .LVU447
 1437               	.LBB350:
 1438               	.LBI350:
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 1439               		.loc 3 200 23 view .LVU448
 1440               	.LBB351:
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 1441               		.loc 3 205 5 view .LVU449
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 1442               		.loc 3 207 5 view .LVU450
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1443               		.loc 3 210 5 view .LVU451
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1444               		.loc 3 210 5 is_stmt 0 view .LVU452
 1445               	.LBE351:
 1446               	.LBE350:
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 1447               		.loc 3 97 5 is_stmt 1 view .LVU453
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 1448               		.loc 3 98 5 view .LVU454
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1449               		.loc 3 100 5 view .LVU455
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1450               		.loc 3 100 11 view .LVU456
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1451               		.loc 3 106 5 view .LVU457
 1452               	.LBB353:
 1453               	.LBB352:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1454               		.loc 3 210 12 is_stmt 0 view .LVU458
 1455 0000 42E0      		ldi r20,lo8(2)
 1456 0002 61EC      		ldi r22,lo8(-63)
 1457 0004 81E0      		ldi r24,lo8(1)
 1458 0006 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 1459               	.LVL98:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1460               		.loc 3 210 12 view .LVU459
 1461               	.LBE352:
 1462               	.LBE353:
 390:tmk_core/protocol/lufa/lufa.c **** #endif
 1463               		.loc 1 390 5 is_stmt 1 view .LVU460
 1464               	.LBB354:
 1465               	.LBI354:
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 1466               		.loc 3 200 23 view .LVU461
 1467               	.LBB355:
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 1468               		.loc 3 205 5 view .LVU462
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 1469               		.loc 3 207 5 view .LVU463
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 1470               		.loc 3 207 5 is_stmt 0 view .LVU464
 1471               	.LBE355:
 1472               	.LBE354:
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1473               		.loc 3 100 11 is_stmt 1 view .LVU465
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1474               		.loc 3 102 6 view .LVU466
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 1475               		.loc 3 103 6 view .LVU467
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1476               		.loc 3 100 11 view .LVU468
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1477               		.loc 3 102 6 view .LVU469
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 1478               		.loc 3 103 6 view .LVU470
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1479               		.loc 3 100 11 view .LVU471
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1480               		.loc 3 106 5 view .LVU472
 1481               	.LBB357:
 1482               	.LBB356:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1483               		.loc 3 210 12 is_stmt 0 view .LVU473
 1484 000a 42E2      		ldi r20,lo8(34)
 1485 000c 61EC      		ldi r22,lo8(-63)
 1486 000e 82E0      		ldi r24,lo8(2)
 1487 0010 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 1488               	.LVL99:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1489               		.loc 3 210 12 view .LVU474
 1490               	.LBE356:
 1491               	.LBE357:
 401:tmk_core/protocol/lufa/lufa.c **** #    if 0
 1492               		.loc 1 401 5 is_stmt 1 view .LVU475
 1493               	.LBB358:
 1494               	.LBI358:
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 1495               		.loc 3 200 23 view .LVU476
 1496               	.LBB359:
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 1497               		.loc 3 205 5 view .LVU477
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 1498               		.loc 3 207 5 view .LVU478
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 1499               		.loc 3 207 5 is_stmt 0 view .LVU479
 1500               	.LBE359:
 1501               	.LBE358:
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1502               		.loc 3 100 11 is_stmt 1 view .LVU480
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1503               		.loc 3 102 6 view .LVU481
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 1504               		.loc 3 103 6 view .LVU482
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1505               		.loc 3 100 11 view .LVU483
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1506               		.loc 3 102 6 view .LVU484
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 1507               		.loc 3 103 6 view .LVU485
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1508               		.loc 3 100 11 view .LVU486
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1509               		.loc 3 106 5 view .LVU487
 1510               	.LBB361:
 1511               	.LBB360:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1512               		.loc 3 210 12 is_stmt 0 view .LVU488
 1513 0014 42E2      		ldi r20,lo8(34)
 1514 0016 61EC      		ldi r22,lo8(-63)
 1515 0018 83E0      		ldi r24,lo8(3)
 1516 001a 0C94 0000 		jmp Endpoint_ConfigureEndpoint_Prv
 1517               	.LVL100:
 1518               	.LBE360:
 1519               	.LBE361:
 1520               		.cfi_endproc
 1521               	.LFE124:
 1523               		.section	.text.EVENT_USB_Device_ControlRequest,"ax",@progbits
 1524               	.global	EVENT_USB_Device_ControlRequest
 1526               	EVENT_USB_Device_ControlRequest:
 1527               	.LFB125:
 437:tmk_core/protocol/lufa/lufa.c ****     uint8_t *ReportData = NULL;
 1528               		.loc 1 437 44 is_stmt 1 view -0
 1529               		.cfi_startproc
 1530               	/* prologue: function */
 1531               	/* frame size = 0 */
 1532               	/* stack size = 0 */
 1533               	.L__stack_usage = 0
 438:tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 1534               		.loc 1 438 5 view .LVU490
 1535               	.LVL101:
 439:tmk_core/protocol/lufa/lufa.c **** 
 1536               		.loc 1 439 5 view .LVU491
 442:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetReport:
 1537               		.loc 1 442 5 view .LVU492
 442:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetReport:
 1538               		.loc 1 442 31 is_stmt 0 view .LVU493
 1539 0000 8091 0000 		lds r24,USB_ControlRequest+1
 442:tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetReport:
 1540               		.loc 1 442 5 view .LVU494
 1541 0004 8330      		cpi r24,lo8(3)
 1542 0006 01F4      		brne .+2
 1543 0008 00C0      		rjmp .L124
 1544 000a 00F4      		brsh .L125
 1545 000c 8130      		cpi r24,lo8(1)
 1546 000e 01F0      		breq .L126
 1547 0010 8230      		cpi r24,lo8(2)
 1548 0012 01F4      		brne .+2
 1549 0014 00C0      		rjmp .L127
 1550 0016 0895      		ret
 1551               	.L125:
 1552 0018 8A30      		cpi r24,lo8(10)
 1553 001a 01F4      		brne .+2
 1554 001c 00C0      		rjmp .L129
 1555 001e 8B30      		cpi r24,lo8(11)
 1556 0020 01F4      		brne .+2
 1557 0022 00C0      		rjmp .L130
 1558 0024 8930      		cpi r24,lo8(9)
 1559 0026 01F0      		breq .+2
 1560 0028 00C0      		rjmp .L123
 463:tmk_core/protocol/lufa/lufa.c ****                 // Interface
 1561               		.loc 1 463 13 is_stmt 1 view .LVU495
 463:tmk_core/protocol/lufa/lufa.c ****                 // Interface
 1562               		.loc 1 463 16 is_stmt 0 view .LVU496
 1563 002a 8091 0000 		lds r24,USB_ControlRequest
 1564 002e 8132      		cpi r24,lo8(33)
 1565 0030 01F0      		breq .+2
 1566 0032 00C0      		rjmp .L123
 465:tmk_core/protocol/lufa/lufa.c ****                     case KEYBOARD_INTERFACE:
 1567               		.loc 1 465 17 is_stmt 1 view .LVU497
 1568 0034 8091 0000 		lds r24,USB_ControlRequest+4
 1569 0038 9091 0000 		lds r25,USB_ControlRequest+4+1
 1570 003c 0297      		sbiw r24,2
 1571 003e 00F0      		brlo .+2
 1572 0040 00C0      		rjmp .L123
 470:tmk_core/protocol/lufa/lufa.c **** 
 1573               		.loc 1 470 25 view .LVU498
 1574               	.LBB362:
 1575               	.LBI362:
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1576               		.loc 3 442 23 view .LVU499
 1577               	.LBB363:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1578               		.loc 3 444 5 view .LVU500
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1579               		.loc 3 444 12 is_stmt 0 view .LVU501
 1580 0042 8091 E800 		lds r24,232
 1581 0046 877F      		andi r24,lo8(-9)
 1582 0048 8093 E800 		sts 232,r24
 1583               	.L135:
 1584               	.LBE363:
 1585               	.LBE362:
 472:tmk_core/protocol/lufa/lufa.c ****                             if (USB_DeviceState == DEVICE_STATE_Unattached) return;
 1586               		.loc 1 472 31 is_stmt 1 view .LVU502
 1587               	.LBB364:
 1588               	.LBI364:
 417:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1589               		.loc 3 417 23 view .LVU503
 1590               	.LBB365:
 419:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1591               		.loc 3 419 5 view .LVU504
 419:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1592               		.loc 3 419 14 is_stmt 0 view .LVU505
 1593 004c 8091 E800 		lds r24,232
 1594               	.LBE365:
 1595               	.LBE364:
 472:tmk_core/protocol/lufa/lufa.c ****                             if (USB_DeviceState == DEVICE_STATE_Unattached) return;
 1596               		.loc 1 472 31 view .LVU506
 1597 0050 82FF      		sbrs r24,2
 1598 0052 00C0      		rjmp .L136
 476:tmk_core/protocol/lufa/lufa.c ****                             uint8_t report_id = Endpoint_Read_8();
 1599               		.loc 1 476 25 is_stmt 1 view .LVU507
 1600               	.LBB366:
 1601               	.LBI366:
 222:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1602               		.loc 3 222 27 view .LVU508
 1603               	.LBB367:
 229:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1604               		.loc 3 229 6 view .LVU509
 229:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1605               		.loc 3 229 13 is_stmt 0 view .LVU510
 1606 0054 8091 F200 		lds r24,242
 1607               	.LBE367:
 1608               	.LBE366:
 476:tmk_core/protocol/lufa/lufa.c ****                             uint8_t report_id = Endpoint_Read_8();
 1609               		.loc 1 476 28 view .LVU511
 1610 0058 8230      		cpi r24,lo8(2)
 1611 005a 01F4      		brne .L137
 1612               	.LBB368:
 477:tmk_core/protocol/lufa/lufa.c **** 
 1613               		.loc 1 477 29 is_stmt 1 view .LVU512
 1614               	.LBB369:
 1615               	.LBI369:
 540:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1616               		.loc 3 540 26 view .LVU513
 1617               	.LBB370:
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1618               		.loc 3 542 5 view .LVU514
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1619               		.loc 3 542 12 is_stmt 0 view .LVU515
 1620 005c 8091 F100 		lds r24,241
 1621               	.LVL102:
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1622               		.loc 3 542 12 view .LVU516
 1623               	.LBE370:
 1624               	.LBE369:
 479:tmk_core/protocol/lufa/lufa.c ****                                 keyboard_led_stats = Endpoint_Read_8();
 1625               		.loc 1 479 29 is_stmt 1 view .LVU517
 479:tmk_core/protocol/lufa/lufa.c ****                                 keyboard_led_stats = Endpoint_Read_8();
 1626               		.loc 1 479 32 is_stmt 0 view .LVU518
 1627 0060 8B7F      		andi r24,lo8(-5)
 1628               	.LVL103:
 479:tmk_core/protocol/lufa/lufa.c ****                                 keyboard_led_stats = Endpoint_Read_8();
 1629               		.loc 1 479 32 view .LVU519
 1630 0062 8130      		cpi r24,lo8(1)
 1631 0064 01F4      		brne .L138
 1632               	.L137:
 479:tmk_core/protocol/lufa/lufa.c ****                                 keyboard_led_stats = Endpoint_Read_8();
 1633               		.loc 1 479 32 view .LVU520
 1634               	.LBE368:
 483:tmk_core/protocol/lufa/lufa.c ****                         }
 1635               		.loc 1 483 29 is_stmt 1 view .LVU521
 1636               	.LBB371:
 1637               	.LBI371:
 540:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1638               		.loc 3 540 26 view .LVU522
 1639               	.LBB372:
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1640               		.loc 3 542 5 view .LVU523
 542:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1641               		.loc 3 542 12 is_stmt 0 view .LVU524
 1642 0066 8091 F100 		lds r24,241
 1643               	.LBE372:
 1644               	.LBE371:
 483:tmk_core/protocol/lufa/lufa.c ****                         }
 1645               		.loc 1 483 48 view .LVU525
 1646 006a 8093 0000 		sts keyboard_led_stats,r24
 1647               	.L138:
 486:tmk_core/protocol/lufa/lufa.c ****                         Endpoint_ClearStatusStage();
 1648               		.loc 1 486 25 is_stmt 1 view .LVU526
 1649               	.LBB373:
 1650               	.LBI373:
 468:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1651               		.loc 3 468 23 view .LVU527
 1652               	.LBB374:
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1653               		.loc 3 471 6 view .LVU528
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1654               		.loc 3 471 13 is_stmt 0 view .LVU529
 1655 006e 8091 E800 		lds r24,232
 1656 0072 8B77      		andi r24,lo8(123)
 1657               	.L149:
 1658               	.LBE374:
 1659               	.LBE373:
 1660               	.LBB375:
 1661               	.LBB376:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1662               		.loc 3 456 13 view .LVU530
 1663 0074 8093 E800 		sts 232,r24
 1664               	.LBE376:
 1665               	.LBE375:
 535:tmk_core/protocol/lufa/lufa.c ****             }
 1666               		.loc 1 535 17 is_stmt 1 view .LVU531
 1667 0078 0C94 0000 		jmp Endpoint_ClearStatusStage
 1668               	.LVL104:
 1669               	.L126:
 444:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 1670               		.loc 1 444 13 view .LVU532
 444:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 1671               		.loc 1 444 16 is_stmt 0 view .LVU533
 1672 007c 8091 0000 		lds r24,USB_ControlRequest
 1673 0080 813A      		cpi r24,lo8(-95)
 1674 0082 01F4      		brne .L123
 445:tmk_core/protocol/lufa/lufa.c **** 
 1675               		.loc 1 445 17 is_stmt 1 view .LVU534
 1676               	.LBB378:
 1677               	.LBI378:
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1678               		.loc 3 442 23 view .LVU535
 1679               	.LBB379:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1680               		.loc 3 444 5 view .LVU536
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1681               		.loc 3 444 12 is_stmt 0 view .LVU537
 1682 0084 8091 E800 		lds r24,232
 1683 0088 877F      		andi r24,lo8(-9)
 1684 008a 8093 E800 		sts 232,r24
 1685               	.LBE379:
 1686               	.LBE378:
 448:tmk_core/protocol/lufa/lufa.c ****                     case KEYBOARD_INTERFACE:
 1687               		.loc 1 448 17 is_stmt 1 view .LVU538
 1688 008e 8091 0000 		lds r24,USB_ControlRequest+4
 1689 0092 9091 0000 		lds r25,USB_ControlRequest+4+1
 1690 0096 892B      		or r24,r25
 1691 0098 01F4      		brne .L141
 452:tmk_core/protocol/lufa/lufa.c ****                         break;
 1692               		.loc 1 452 36 is_stmt 0 view .LVU539
 1693 009a 68E0      		ldi r22,lo8(8)
 451:tmk_core/protocol/lufa/lufa.c ****                         ReportSize = sizeof(keyboard_report_sent);
 1694               		.loc 1 451 36 view .LVU540
 1695 009c 80E0      		ldi r24,lo8(keyboard_report_sent)
 1696 009e 90E0      		ldi r25,hi8(keyboard_report_sent)
 1697               	.L133:
 1698               	.LVL105:
 457:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearOUT();
 1699               		.loc 1 457 17 is_stmt 1 view .LVU541
 1700 00a0 70E0      		ldi r23,0
 1701 00a2 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 1702               	.LVL106:
 458:tmk_core/protocol/lufa/lufa.c ****             }
 1703               		.loc 1 458 17 view .LVU542
 1704               	.LBB380:
 1705               	.LBI380:
 468:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1706               		.loc 3 468 23 view .LVU543
 1707               	.LBB381:
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1708               		.loc 3 471 6 view .LVU544
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1709               		.loc 3 471 13 is_stmt 0 view .LVU545
 1710 00a6 8091 E800 		lds r24,232
 1711 00aa 8B77      		andi r24,lo8(123)
 1712 00ac 8093 E800 		sts 232,r24
 1713 00b0 0895      		ret
 1714               	.LVL107:
 1715               	.L141:
 471:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1716               		.loc 3 471 13 view .LVU546
 1717               	.LBE381:
 1718               	.LBE380:
 439:tmk_core/protocol/lufa/lufa.c **** 
 1719               		.loc 1 439 14 view .LVU547
 1720 00b2 60E0      		ldi r22,0
 438:tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 1721               		.loc 1 438 14 view .LVU548
 1722 00b4 90E0      		ldi r25,0
 1723 00b6 80E0      		ldi r24,0
 1724 00b8 00C0      		rjmp .L133
 1725               	.L136:
 473:tmk_core/protocol/lufa/lufa.c ****                         }
 1726               		.loc 1 473 29 is_stmt 1 view .LVU549
 473:tmk_core/protocol/lufa/lufa.c ****                         }
 1727               		.loc 1 473 49 is_stmt 0 view .LVU550
 1728 00ba 8091 0000 		lds r24,USB_DeviceState
 473:tmk_core/protocol/lufa/lufa.c ****                         }
 1729               		.loc 1 473 32 view .LVU551
 1730 00be 8111      		cpse r24,__zero_reg__
 1731 00c0 00C0      		rjmp .L135
 1732               	.L123:
 1733               	/* epilogue start */
 544:tmk_core/protocol/lufa/lufa.c **** 
 1734               		.loc 1 544 1 view .LVU552
 1735 00c2 0895      		ret
 1736               	.L124:
 495:tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 1737               		.loc 1 495 13 is_stmt 1 view .LVU553
 495:tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 1738               		.loc 1 495 16 is_stmt 0 view .LVU554
 1739 00c4 8091 0000 		lds r24,USB_ControlRequest
 1740 00c8 813A      		cpi r24,lo8(-95)
 1741 00ca 01F4      		brne .L123
 496:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1742               		.loc 1 496 17 is_stmt 1 view .LVU555
 496:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1743               		.loc 1 496 20 is_stmt 0 view .LVU556
 1744 00cc 8091 0000 		lds r24,USB_ControlRequest+4
 1745 00d0 9091 0000 		lds r25,USB_ControlRequest+4+1
 1746 00d4 892B      		or r24,r25
 1747 00d6 01F4      		brne .L123
 497:tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsINReady()))
 1748               		.loc 1 497 21 is_stmt 1 view .LVU557
 1749               	.LBB382:
 1750               	.LBI382:
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1751               		.loc 3 442 23 view .LVU558
 1752               	.LBB383:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1753               		.loc 3 444 5 view .LVU559
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1754               		.loc 3 444 12 is_stmt 0 view .LVU560
 1755 00d8 8091 E800 		lds r24,232
 1756 00dc 877F      		andi r24,lo8(-9)
 1757 00de 8093 E800 		sts 232,r24
 1758               	.L139:
 1759               	.LBE383:
 1760               	.LBE382:
 499:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 1761               		.loc 1 499 25 is_stmt 1 discriminator 1 view .LVU561
 498:tmk_core/protocol/lufa/lufa.c ****                         ;
 1762               		.loc 1 498 27 discriminator 1 view .LVU562
 1763               	.LBB384:
 1764               	.LBI384:
 405:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1765               		.loc 3 405 23 discriminator 1 view .LVU563
 1766               	.LBB385:
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1767               		.loc 3 407 5 discriminator 1 view .LVU564
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1768               		.loc 3 407 14 is_stmt 0 discriminator 1 view .LVU565
 1769 00e2 8091 E800 		lds r24,232
 1770               	.LBE385:
 1771               	.LBE384:
 498:tmk_core/protocol/lufa/lufa.c ****                         ;
 1772               		.loc 1 498 27 discriminator 1 view .LVU566
 1773 00e6 80FF      		sbrs r24,0
 1774 00e8 00C0      		rjmp .L139
 500:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearIN();
 1775               		.loc 1 500 21 is_stmt 1 view .LVU567
 1776 00ea 8091 0000 		lds r24,keyboard_protocol
 1777               	.LVL108:
 1778               	.LBB386:
 1779               	.LBI386:
 552:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1780               		.loc 3 552 23 view .LVU568
 1781               	.LBB387:
 1782               		.loc 3 554 5 view .LVU569
 1783               	.L150:
 1784               		.loc 3 554 5 is_stmt 0 view .LVU570
 1785               	.LBE387:
 1786               	.LBE386:
 1787               	.LBB388:
 1788               	.LBI388:
 552:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1789               		.loc 3 552 23 is_stmt 1 view .LVU571
 1790               	.LBB389:
 1791               		.loc 3 554 5 view .LVU572
 1792               		.loc 3 554 12 is_stmt 0 view .LVU573
 1793 00ee 8093 F100 		sts 241,r24
 1794               	.LVL109:
 1795               		.loc 3 554 12 view .LVU574
 1796               	.LBE389:
 1797               	.LBE388:
 534:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 1798               		.loc 1 534 17 is_stmt 1 view .LVU575
 1799               	.LBB390:
 1800               	.LBI375:
 453:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1801               		.loc 3 453 23 view .LVU576
 1802               	.LBB377:
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1803               		.loc 3 456 6 view .LVU577
 456:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1804               		.loc 3 456 13 is_stmt 0 view .LVU578
 1805 00f2 8091 E800 		lds r24,232
 1806 00f6 8E77      		andi r24,lo8(126)
 1807 00f8 00C0      		rjmp .L149
 1808               	.L130:
 1809               	.LBE377:
 1810               	.LBE390:
 508:tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 1811               		.loc 1 508 13 is_stmt 1 view .LVU579
 508:tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 1812               		.loc 1 508 16 is_stmt 0 view .LVU580
 1813 00fa 8091 0000 		lds r24,USB_ControlRequest
 1814 00fe 8132      		cpi r24,lo8(33)
 1815 0100 01F4      		brne .L123
 509:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1816               		.loc 1 509 17 is_stmt 1 view .LVU581
 509:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1817               		.loc 1 509 20 is_stmt 0 view .LVU582
 1818 0102 8091 0000 		lds r24,USB_ControlRequest+4
 1819 0106 9091 0000 		lds r25,USB_ControlRequest+4+1
 1820 010a 892B      		or r24,r25
 1821 010c 01F4      		brne .L123
 510:tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 1822               		.loc 1 510 21 is_stmt 1 view .LVU583
 1823               	.LBB391:
 1824               	.LBI391:
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1825               		.loc 3 442 23 view .LVU584
 1826               	.LBB392:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1827               		.loc 3 444 5 view .LVU585
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1828               		.loc 3 444 12 is_stmt 0 view .LVU586
 1829 010e 8091 E800 		lds r24,232
 1830 0112 877F      		andi r24,lo8(-9)
 1831 0114 8093 E800 		sts 232,r24
 1832               	.LBE392:
 1833               	.LBE391:
 511:tmk_core/protocol/lufa/lufa.c **** 
 1834               		.loc 1 511 21 is_stmt 1 view .LVU587
 1835 0118 0E94 0000 		call Endpoint_ClearStatusStage
 1836               	.LVL110:
 513:tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 1837               		.loc 1 513 21 view .LVU588
 513:tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 1838               		.loc 1 513 39 is_stmt 0 view .LVU589
 1839 011c 8091 0000 		lds r24,USB_ControlRequest+2
 1840 0120 8093 0000 		sts keyboard_protocol,r24
 514:tmk_core/protocol/lufa/lufa.c ****                 }
 1841               		.loc 1 514 21 is_stmt 1 view .LVU590
 1842 0124 0C94 0000 		jmp clear_keyboard
 1843               	.LVL111:
 1844               	.L129:
 520:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 1845               		.loc 1 520 13 view .LVU591
 520:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 1846               		.loc 1 520 16 is_stmt 0 view .LVU592
 1847 0128 8091 0000 		lds r24,USB_ControlRequest
 1848 012c 8132      		cpi r24,lo8(33)
 1849 012e 01F4      		brne .L123
 521:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 1850               		.loc 1 521 17 is_stmt 1 view .LVU593
 1851               	.LBB393:
 1852               	.LBI393:
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1853               		.loc 3 442 23 view .LVU594
 1854               	.LBB394:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1855               		.loc 3 444 5 view .LVU595
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1856               		.loc 3 444 12 is_stmt 0 view .LVU596
 1857 0130 8091 E800 		lds r24,232
 1858 0134 877F      		andi r24,lo8(-9)
 1859 0136 8093 E800 		sts 232,r24
 1860               	.LBE394:
 1861               	.LBE393:
 522:tmk_core/protocol/lufa/lufa.c **** 
 1862               		.loc 1 522 17 is_stmt 1 view .LVU597
 1863 013a 0E94 0000 		call Endpoint_ClearStatusStage
 1864               	.LVL112:
 524:tmk_core/protocol/lufa/lufa.c ****             }
 1865               		.loc 1 524 17 view .LVU598
 524:tmk_core/protocol/lufa/lufa.c ****             }
 1866               		.loc 1 524 71 is_stmt 0 view .LVU599
 1867 013e 8091 0000 		lds r24,USB_ControlRequest+3
 524:tmk_core/protocol/lufa/lufa.c ****             }
 1868               		.loc 1 524 31 view .LVU600
 1869 0142 8093 0000 		sts keyboard_idle,r24
 1870 0146 0895      		ret
 1871               	.L127:
 529:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 1872               		.loc 1 529 13 is_stmt 1 view .LVU601
 529:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 1873               		.loc 1 529 16 is_stmt 0 view .LVU602
 1874 0148 8091 0000 		lds r24,USB_ControlRequest
 1875 014c 813A      		cpi r24,lo8(-95)
 1876 014e 01F0      		breq .+2
 1877 0150 00C0      		rjmp .L123
 530:tmk_core/protocol/lufa/lufa.c ****                 while (!(Endpoint_IsINReady()))
 1878               		.loc 1 530 17 is_stmt 1 view .LVU603
 1879               	.LBB395:
 1880               	.LBI395:
 442:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1881               		.loc 3 442 23 view .LVU604
 1882               	.LBB396:
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1883               		.loc 3 444 5 view .LVU605
 444:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1884               		.loc 3 444 12 is_stmt 0 view .LVU606
 1885 0152 8091 E800 		lds r24,232
 1886 0156 877F      		andi r24,lo8(-9)
 1887 0158 8093 E800 		sts 232,r24
 1888               	.L140:
 1889               	.LBE396:
 1890               	.LBE395:
 532:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 1891               		.loc 1 532 21 is_stmt 1 discriminator 1 view .LVU607
 531:tmk_core/protocol/lufa/lufa.c ****                     ;
 1892               		.loc 1 531 23 discriminator 1 view .LVU608
 1893               	.LBB397:
 1894               	.LBI397:
 405:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1895               		.loc 3 405 23 discriminator 1 view .LVU609
 1896               	.LBB398:
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1897               		.loc 3 407 5 discriminator 1 view .LVU610
 407:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1898               		.loc 3 407 14 is_stmt 0 discriminator 1 view .LVU611
 1899 015c 8091 E800 		lds r24,232
 1900               	.LBE398:
 1901               	.LBE397:
 531:tmk_core/protocol/lufa/lufa.c ****                     ;
 1902               		.loc 1 531 23 discriminator 1 view .LVU612
 1903 0160 80FF      		sbrs r24,0
 1904 0162 00C0      		rjmp .L140
 533:tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearIN();
 1905               		.loc 1 533 17 is_stmt 1 view .LVU613
 1906 0164 8091 0000 		lds r24,keyboard_idle
 1907 0168 00C0      		rjmp .L150
 1908               		.cfi_endproc
 1909               	.LFE125:
 1911               		.section	.text.startup.main,"ax",@progbits
 1912               		.weak	main
 1914               	main:
 1915               	.LFB134:
 808:tmk_core/protocol/lufa/lufa.c **** #else
 809:tmk_core/protocol/lufa/lufa.c **** int8_t sendchar(uint8_t c) { return 0; }
 810:tmk_core/protocol/lufa/lufa.c **** #endif
 811:tmk_core/protocol/lufa/lufa.c **** 
 812:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 813:tmk_core/protocol/lufa/lufa.c ****  * MIDI
 814:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 815:tmk_core/protocol/lufa/lufa.c **** 
 816:tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 817:tmk_core/protocol/lufa/lufa.c **** USB_ClassInfo_MIDI_Device_t USB_MIDI_Interface = {
 818:tmk_core/protocol/lufa/lufa.c ****     .Config =
 819:tmk_core/protocol/lufa/lufa.c ****         {
 820:tmk_core/protocol/lufa/lufa.c ****             .StreamingInterfaceNumber = AS_INTERFACE,
 821:tmk_core/protocol/lufa/lufa.c ****             .DataINEndpoint =
 822:tmk_core/protocol/lufa/lufa.c ****                 {
 823:tmk_core/protocol/lufa/lufa.c ****                     .Address = MIDI_STREAM_IN_EPADDR,
 824:tmk_core/protocol/lufa/lufa.c ****                     .Size    = MIDI_STREAM_EPSIZE,
 825:tmk_core/protocol/lufa/lufa.c ****                     .Banks   = 1,
 826:tmk_core/protocol/lufa/lufa.c ****                 },
 827:tmk_core/protocol/lufa/lufa.c ****             .DataOUTEndpoint =
 828:tmk_core/protocol/lufa/lufa.c ****                 {
 829:tmk_core/protocol/lufa/lufa.c ****                     .Address = MIDI_STREAM_OUT_EPADDR,
 830:tmk_core/protocol/lufa/lufa.c ****                     .Size    = MIDI_STREAM_EPSIZE,
 831:tmk_core/protocol/lufa/lufa.c ****                     .Banks   = 1,
 832:tmk_core/protocol/lufa/lufa.c ****                 },
 833:tmk_core/protocol/lufa/lufa.c ****         },
 834:tmk_core/protocol/lufa/lufa.c **** };
 835:tmk_core/protocol/lufa/lufa.c **** 
 836:tmk_core/protocol/lufa/lufa.c **** void send_midi_packet(MIDI_EventPacket_t *event) { MIDI_Device_SendEventPacket(&USB_MIDI_Interface,
 837:tmk_core/protocol/lufa/lufa.c **** 
 838:tmk_core/protocol/lufa/lufa.c **** bool recv_midi_packet(MIDI_EventPacket_t *const event) { return MIDI_Device_ReceiveEventPacket(&USB
 839:tmk_core/protocol/lufa/lufa.c **** 
 840:tmk_core/protocol/lufa/lufa.c **** #endif
 841:tmk_core/protocol/lufa/lufa.c **** 
 842:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 843:tmk_core/protocol/lufa/lufa.c ****  * VIRTUAL SERIAL
 844:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 845:tmk_core/protocol/lufa/lufa.c **** 
 846:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 847:tmk_core/protocol/lufa/lufa.c **** /** \brief Virtual Serial Init
 848:tmk_core/protocol/lufa/lufa.c ****  *
 849:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 850:tmk_core/protocol/lufa/lufa.c ****  */
 851:tmk_core/protocol/lufa/lufa.c **** void virtser_init(void) {
 852:tmk_core/protocol/lufa/lufa.c ****     cdc_device.State.ControlLineStates.DeviceToHost = CDC_CONTROL_LINE_IN_DSR;
 853:tmk_core/protocol/lufa/lufa.c ****     CDC_Device_SendControlLineStateChange(&cdc_device);
 854:tmk_core/protocol/lufa/lufa.c **** }
 855:tmk_core/protocol/lufa/lufa.c **** 
 856:tmk_core/protocol/lufa/lufa.c **** /** \brief Virtual Serial Receive
 857:tmk_core/protocol/lufa/lufa.c ****  *
 858:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 859:tmk_core/protocol/lufa/lufa.c ****  */
 860:tmk_core/protocol/lufa/lufa.c **** void virtser_recv(uint8_t c) __attribute__((weak));
 861:tmk_core/protocol/lufa/lufa.c **** void virtser_recv(uint8_t c) {
 862:tmk_core/protocol/lufa/lufa.c ****     // Ignore by default
 863:tmk_core/protocol/lufa/lufa.c **** }
 864:tmk_core/protocol/lufa/lufa.c **** 
 865:tmk_core/protocol/lufa/lufa.c **** /** \brief Virtual Serial Task
 866:tmk_core/protocol/lufa/lufa.c ****  *
 867:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 868:tmk_core/protocol/lufa/lufa.c ****  */
 869:tmk_core/protocol/lufa/lufa.c **** void virtser_task(void) {
 870:tmk_core/protocol/lufa/lufa.c ****     uint16_t count = CDC_Device_BytesReceived(&cdc_device);
 871:tmk_core/protocol/lufa/lufa.c ****     uint8_t  ch;
 872:tmk_core/protocol/lufa/lufa.c ****     if (count) {
 873:tmk_core/protocol/lufa/lufa.c ****         ch = CDC_Device_ReceiveByte(&cdc_device);
 874:tmk_core/protocol/lufa/lufa.c ****         virtser_recv(ch);
 875:tmk_core/protocol/lufa/lufa.c ****     }
 876:tmk_core/protocol/lufa/lufa.c **** }
 877:tmk_core/protocol/lufa/lufa.c **** /** \brief Virtual Serial Send
 878:tmk_core/protocol/lufa/lufa.c ****  *
 879:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 880:tmk_core/protocol/lufa/lufa.c ****  */
 881:tmk_core/protocol/lufa/lufa.c **** void virtser_send(const uint8_t byte) {
 882:tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 883:tmk_core/protocol/lufa/lufa.c ****     uint8_t ep      = Endpoint_GetCurrentEndpoint();
 884:tmk_core/protocol/lufa/lufa.c **** 
 885:tmk_core/protocol/lufa/lufa.c ****     if (cdc_device.State.ControlLineStates.HostToDevice & CDC_CONTROL_LINE_OUT_DTR) {
 886:tmk_core/protocol/lufa/lufa.c ****         /* IN packet */
 887:tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(cdc_device.Config.DataINEndpoint.Address);
 888:tmk_core/protocol/lufa/lufa.c **** 
 889:tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 890:tmk_core/protocol/lufa/lufa.c ****             Endpoint_SelectEndpoint(ep);
 891:tmk_core/protocol/lufa/lufa.c ****             return;
 892:tmk_core/protocol/lufa/lufa.c ****         }
 893:tmk_core/protocol/lufa/lufa.c **** 
 894:tmk_core/protocol/lufa/lufa.c ****         while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 895:tmk_core/protocol/lufa/lufa.c **** 
 896:tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_8(byte);
 897:tmk_core/protocol/lufa/lufa.c ****         CDC_Device_Flush(&cdc_device);
 898:tmk_core/protocol/lufa/lufa.c **** 
 899:tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsINReady()) {
 900:tmk_core/protocol/lufa/lufa.c ****             Endpoint_ClearIN();
 901:tmk_core/protocol/lufa/lufa.c ****         }
 902:tmk_core/protocol/lufa/lufa.c **** 
 903:tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 904:tmk_core/protocol/lufa/lufa.c ****     }
 905:tmk_core/protocol/lufa/lufa.c **** }
 906:tmk_core/protocol/lufa/lufa.c **** #endif
 907:tmk_core/protocol/lufa/lufa.c **** 
 908:tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 909:tmk_core/protocol/lufa/lufa.c ****  * main
 910:tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 911:tmk_core/protocol/lufa/lufa.c **** /** \brief Setup MCU
 912:tmk_core/protocol/lufa/lufa.c ****  *
 913:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 914:tmk_core/protocol/lufa/lufa.c ****  */
 915:tmk_core/protocol/lufa/lufa.c **** static void setup_mcu(void) {
 916:tmk_core/protocol/lufa/lufa.c ****     /* Disable watchdog if enabled by bootloader/fuses */
 917:tmk_core/protocol/lufa/lufa.c ****     MCUSR &= ~(1 << WDRF);
 918:tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 919:tmk_core/protocol/lufa/lufa.c **** 
 920:tmk_core/protocol/lufa/lufa.c ****     /* Disable clock division */
 921:tmk_core/protocol/lufa/lufa.c ****     // clock_prescale_set(clock_div_1);
 922:tmk_core/protocol/lufa/lufa.c **** 
 923:tmk_core/protocol/lufa/lufa.c ****     CLKPR = (1 << CLKPCE);
 924:tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
 925:tmk_core/protocol/lufa/lufa.c **** }
 926:tmk_core/protocol/lufa/lufa.c **** 
 927:tmk_core/protocol/lufa/lufa.c **** /** \brief Setup USB
 928:tmk_core/protocol/lufa/lufa.c ****  *
 929:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 930:tmk_core/protocol/lufa/lufa.c ****  */
 931:tmk_core/protocol/lufa/lufa.c **** static void setup_usb(void) {
 932:tmk_core/protocol/lufa/lufa.c ****     // Leonardo needs. Without this USB device is not recognized.
 933:tmk_core/protocol/lufa/lufa.c ****     USB_Disable();
 934:tmk_core/protocol/lufa/lufa.c **** 
 935:tmk_core/protocol/lufa/lufa.c ****     USB_Init();
 936:tmk_core/protocol/lufa/lufa.c **** 
 937:tmk_core/protocol/lufa/lufa.c ****     // for Console_Task
 938:tmk_core/protocol/lufa/lufa.c ****     USB_Device_EnableSOFEvents();
 939:tmk_core/protocol/lufa/lufa.c ****     print_set_sendchar(sendchar);
 940:tmk_core/protocol/lufa/lufa.c **** }
 941:tmk_core/protocol/lufa/lufa.c **** 
 942:tmk_core/protocol/lufa/lufa.c **** /** \brief Main
 943:tmk_core/protocol/lufa/lufa.c ****  *
 944:tmk_core/protocol/lufa/lufa.c ****  * FIXME: Needs doc
 945:tmk_core/protocol/lufa/lufa.c ****  */
 946:tmk_core/protocol/lufa/lufa.c **** int main(void) __attribute__((weak));
 947:tmk_core/protocol/lufa/lufa.c **** int main(void) {
 1916               		.loc 1 947 16 view -0
 1917               		.cfi_startproc
 1918               	/* prologue: function */
 1919               	/* frame size = 0 */
 1920               	/* stack size = 0 */
 1921               	.L__stack_usage = 0
 948:tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 949:tmk_core/protocol/lufa/lufa.c ****     setup_midi();
 950:tmk_core/protocol/lufa/lufa.c **** #endif
 951:tmk_core/protocol/lufa/lufa.c **** 
 952:tmk_core/protocol/lufa/lufa.c ****     setup_mcu();
 1922               		.loc 1 952 5 view .LVU615
 1923               	.LBB410:
 1924               	.LBI410:
 915:tmk_core/protocol/lufa/lufa.c ****     /* Disable watchdog if enabled by bootloader/fuses */
 1925               		.loc 1 915 13 view .LVU616
 1926               	.LBB411:
 917:tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 1927               		.loc 1 917 5 view .LVU617
 917:tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 1928               		.loc 1 917 11 is_stmt 0 view .LVU618
 1929 0000 84B7      		in r24,0x34
 1930 0002 877F      		andi r24,lo8(-9)
 1931 0004 84BF      		out 0x34,r24
 918:tmk_core/protocol/lufa/lufa.c **** 
 1932               		.loc 1 918 5 is_stmt 1 view .LVU619
 1933               	.LBB412:
 1934               	.LBI412:
 1935               		.file 7 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h"
   1:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** /* Copyright (c) 2002, 2004 Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    Copyright (c) 2005, 2006, 2007 Eric B. Weddington
   3:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    All rights reserved.
   4:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
   5:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
   8:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  11:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****      the documentation and/or other materials provided with the
  14:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****      distribution.
  15:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  16:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****      contributors may be used to endorse or promote products derived
  18:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****      from this software without specific prior written permission.
  19:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  20:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  32:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** /* $Id: wdt.h 2503 2016-02-07 22:59:47Z joerg_wunsch $ */
  33:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  34:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** /*
  35:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    avr/wdt.h - macros for AVR watchdog timer
  36:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****  */
  37:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #ifndef _AVR_WDT_H_
  39:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #define _AVR_WDT_H_
  40:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  41:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #include <avr/io.h>
  42:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #include <stdint.h>
  43:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** /** \file */
  45:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** /** \defgroup avr_watchdog <avr/wdt.h>: Watchdog timer handling
  46:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     \code #include <avr/wdt.h> \endcode
  47:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     This header file declares the interface to some inline macros
  49:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     handling the watchdog timer present in many AVR devices.  In order
  50:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     to prevent the watchdog timer configuration from being
  51:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     accidentally altered by a crashing application, a special timed
  52:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     sequence is required in order to change it.  The macros within
  53:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     this header file handle the required sequence automatically
  54:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     before changing any value.  Interrupts will be disabled during
  55:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     the manipulation.
  56:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  57:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     \note Depending on the fuse configuration of the particular
  58:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     device, further restrictions might apply, in particular it might
  59:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     be disallowed to turn off the watchdog timer.
  60:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     Note that for newer devices (ATmega88 and newer, effectively any
  62:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     AVR that has the option to also generate interrupts), the watchdog
  63:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     timer remains active even after a system reset (except a power-on
  64:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     condition), using the fastest prescaler value (approximately 15
  65:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     ms).  It is therefore required to turn off the watchdog early
  66:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     during program startup, the datasheet recommends a sequence like
  67:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     the following:
  68:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  69:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     \code
  70:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     #include <stdint.h>
  71:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     #include <avr/wdt.h>
  72:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  73:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     uint8_t mcusr_mirror __attribute__ ((section (".noinit")));
  74:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  75:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     void get_mcusr(void) \
  76:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       __attribute__((naked)) \
  77:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       __attribute__((section(".init3")));
  78:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     void get_mcusr(void)
  79:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     {
  80:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       mcusr_mirror = MCUSR;
  81:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       MCUSR = 0;
  82:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       wdt_disable();
  83:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     }
  84:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     \endcode
  85:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  86:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     Saving the value of MCUSR in \c mcusr_mirror is only needed if the
  87:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     application later wants to examine the reset source, but in particular, 
  88:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     clearing the watchdog reset flag before disabling the
  89:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     watchdog is required, according to the datasheet.
  90:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** */
  91:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  92:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** /**
  93:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
  94:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    Reset the watchdog timer.  When the watchdog timer is enabled,
  95:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    a call to this instruction is required before the timer expires,
  96:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    otherwise a watchdog-initiated device reset will occur. 
  97:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** */
  98:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
  99:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #define wdt_reset() __asm__ __volatile__ ("wdr")
 100:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 101:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #ifndef __DOXYGEN__
 102:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #if defined(WDP3)
 104:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       _BV(WDP3)
 105:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #else
 106:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       0x00
 107:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #endif
 108:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 109:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #if defined(WDTCSR)
 110:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCSR
 111:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #elif defined(WDTCR)
 112:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCR
 113:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #else
 114:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDT
 115:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #endif
 116:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 117:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #if defined(WDTOE)
 118:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDTOE
 119:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #else
 120:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDCE
 121:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #endif
 122:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 123:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #endif	/* !__DOXYGEN__ */
 124:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 125:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** /**
 127:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
 128:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    Enable the watchdog timer, configuring it for expiry after
 129:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    \c timeout (which is a combination of the \c WDP0 through
 130:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    \c WDP2 bits to write into the \c WDTCR register; For those devices 
 131:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    that have a \c WDTCSR register, it uses the combination of the \c WDP0 
 132:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    through \c WDP3 bits).
 133:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 134:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    See also the symbolic constants \c WDTO_15MS et al.
 135:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** */
 136:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 138:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #if defined(__AVR_XMEGA__)
 139:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 140:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** /*
 141:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    wdt_enable(timeout) for xmega devices
 142:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** ** write signature (CCP_IOREG_gc) that enables change of protected I/O
 143:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    registers to the CCP register
 144:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** ** At the same time,
 145:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    1) set WDT change enable (WDT_CEN_bm)
 146:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    2) enable WDT (WDT_ENABLE_bm)
 147:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    3) set timeout (timeout)
 148:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** ** Synchronization starts when ENABLE bit of WDT is set. So, wait till it
 149:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    finishes (SYNCBUSY of STATUS register is automatically cleared after the
 150:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****    sync is finished).
 151:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** */
 152:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #define wdt_enable(timeout) \
 153:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** do { \
 154:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** uint8_t temp; \
 155:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** __asm__ __volatile__ (         \
 156:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"              "\n\t" \
 157:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"            "\n\t" \
 158:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]"     "\n\t" \
 159:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[wdt_enable_timeout]" "\n\t" \
 160:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "1:lds %[tmp], %[wdt_status_reg]"       "\n\t" \
 161:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "sbrc %[tmp], %[wdt_syncbusy_bit]"      "\n\t" \
 162:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "rjmp 1b"                               "\n\t" \
 163:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"             "\n\t" \
 164:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     : [tmp]                "=r" (temp) \
 165:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     : [rampd]              "I" (_SFR_IO_ADDR(RAMPD)),      \
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [ccp_reg]            "I" (_SFR_IO_ADDR(CCP)),        \
 167:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [ioreg_cen_mask]     "r" ((uint8_t)CCP_IOREG_gc),     \
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [wdt_reg]            "n" (_SFR_MEM_ADDR(WDT_CTRL)),   \
 169:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [wdt_enable_timeout] "r" ((uint8_t)(WDT_CEN_bm | WDT_ENABLE_bm | timeout)), \
 170:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [wdt_status_reg]     "n" (_SFR_MEM_ADDR(WDT_STATUS)), \
 171:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [wdt_syncbusy_bit]   "I" (WDT_SYNCBUSY_bm)            \
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     : "r0" \
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** ); \
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** } while(0)
 175:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #define wdt_disable() \
 177:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** __asm__ __volatile__ (  \
 178:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"          "\n\t" \
 179:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"        "\n\t" \
 180:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]" "\n\t" \
 181:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[disable_mask]"   "\n\t" \
 182:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"         "\n\t" \
 183:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     : \
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     : [rampd]             "I" (_SFR_IO_ADDR(RAMPD)),    \
 185:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [ccp_reg]           "I" (_SFR_IO_ADDR(CCP)),      \
 186:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [ioreg_cen_mask]    "r" ((uint8_t)CCP_IOREG_gc),   \
 187:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [wdt_reg]           "n" (_SFR_MEM_ADDR(WDT_CTRL)), \
 188:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [disable_mask]      "r" ((uint8_t)((~WDT_ENABLE_bm) | WDT_CEN_bm)) \
 189:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     : "r0" \
 190:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** );
 191:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 192:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #elif defined(__AVR_TINY__)
 193:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 194:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #define wdt_enable(value) \
 195:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 196:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 197:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 198:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 199:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 200:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "out %[WDTREG],%[WDVALUE]" "\n\t"  \
 201:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t"  \
 202:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     : /* no outputs */  \
 203:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),  \
 204:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 205:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 206:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00) \
 207:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       | _BV(WDE) | (value & 0x07) )) \
 208:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     : "r16" \
 209:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** )
 210:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 211:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #define wdt_disable() \
 212:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** do { \
 213:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** uint8_t temp_wd; \
 214:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 215:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 216:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 217:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 218:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 219:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "in  %[TEMP_WD],%[WDTREG]" "\n\t" \
 220:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "cbr %[TEMP_WD],%[WDVALUE]" "\n\t" \
 221:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "out %[WDTREG],%[TEMP_WD]" "\n\t" \
 222:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t" \
 223:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     : /*no output */ \
 224:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)), \
 225:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 226:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 227:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [TEMP_WD] "d" (temp_wd), \
 228:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****       [WDVALUE] "n" (1 << WDE) \
 229:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****     : "r16" \
 230:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** ); \
 231:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** }while(0)
 232:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 233:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #elif defined(CCP)
 234:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 235:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** static __inline__
 236:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 237:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 238:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** {
 239:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 240:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	{
 241:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 242:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 243:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 244:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 245:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 246:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 247:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 248:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			: /* no outputs */
 249:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 250:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 251:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 252:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 253:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 254:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			: "r0"
 255:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			);
 256:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	}
 257:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P (_WD_CONTROL_REG))
 258:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	{
 259:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 260:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 261:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 262:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 263:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 264:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 265:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 266:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			: /* no outputs */
 267:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 268:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 269:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 270:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 271:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 272:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			: "r0"
 273:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			);
 274:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	}
 275:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 276:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	{
 277:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 278:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 279:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 280:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 281:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 282:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 283:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 284:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			: /* no outputs */
 285:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 286:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 287:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 288:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 289:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 290:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			: "r0"
 291:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			);
 292:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	}
 293:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	else
 294:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****  	{
 295:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 296:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 297:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 298:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 299:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 300:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 301:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 302:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			: /* no outputs */
 303:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 304:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 305:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 306:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 307:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 308:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			: "r0"
 309:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 			);
 310:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	}
 311:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** }
 312:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 313:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** static __inline__
 314:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 315:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** void wdt_disable (void)
 316:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** {
 317:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 318:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	{
 319:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 320:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 321:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 322:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 323:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 324:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 325:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 326:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 327:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 328:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 329:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: /*no output */
 330:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 331:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 332:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 333:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 334:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 335:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: "r0"
 336:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				);
 337:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	}
 338:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P(_WD_CONTROL_REG))
 339:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	{
 340:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 341:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 342:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 343:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 344:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 345:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 346:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 347:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 348:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 349:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 350:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: /*no output */
 351:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 352:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 353:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 354:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 355:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 356:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: "r0"
 357:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				);
 358:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	}
 359:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 360:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	{
 361:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 362:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 363:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 364:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 365:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 366:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 367:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 368:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 369:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 370:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 371:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: /*no output */
 372:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 373:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 374:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 375:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 376:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 377:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: "r0"
 378:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				);
 379:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	}
 380:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	else
 381:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	{
 382:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 383:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 384:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 385:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 386:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 387:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 388:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 389:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 390:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 391:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 392:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: /*no output */
 393:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 394:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 395:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 396:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 397:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 398:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: "r0"
 399:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				);
 400:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	}
 401:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** }
 402:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 403:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** #else
 404:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 405:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** static __inline__
 406:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 407:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 408:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** {
 409:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 410:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	{
 411:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 412:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 413:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 414:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 415:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out %0, %1" "\n\t"
 416:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 417:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out %0, %2" "\n \t"
 418:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: /* no outputs */
 419:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 420:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 421:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 422:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 423:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: "r0"
 424:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 		);
 425:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	}
 426:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	else
 427:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	{
 428:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 429:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 430:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 431:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 432:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"sts %0, %1" "\n\t"
 433:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 434:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"sts %0, %2" "\n \t"
 435:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: /* no outputs */
 436:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 437:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 438:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 439:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 440:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: "r0"
 441:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 		);
 442:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	}
 443:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** }
 444:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 
 445:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** static __inline__
 446:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 447:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** void wdt_disable (void)
 1936               		.loc 7 447 6 view .LVU620
 1937               	.LBE412:
 1938               	.LBE411:
 1939               	.LBE410:
 448:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** {
 449:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 1940               		.loc 7 449 2 view .LVU621
 1941               	.LBB416:
 1942               	.LBB415:
 1943               	.LBB414:
 1944               	.LBB413:
 450:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	{
 451:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 452:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 453:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__"    "\n\t"
 454:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"cli"                        "\n\t"
 455:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"wdr"                        "\n\t"
 456:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"in  %[TEMPREG],%[WDTREG]"   "\n\t"
 457:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"ori %[TEMPREG],%[WDCE_WDE]" "\n\t"
 458:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMPREG]"   "\n\t"
 459:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out %[WDTREG],__zero_reg__" "\n\t"
 460:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__"   "\n\t"
 461:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: [TEMPREG] "=d" (temp_reg)
 462:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: [WDTREG]  "I"  (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 463:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
 464:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 				: "r0"
 465:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 		);
 466:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	}
 467:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	else
 468:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 	{
 469:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 1945               		.loc 7 469 9 view .LVU622
 470:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 1946               		.loc 7 470 3 view .LVU623
 1947               	/* #APP */
 1948               	 ;  470 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/wdt.h" 1
 1949 0006 0FB6      		in __tmp_reg__,__SREG__
 1950 0008 F894      		cli
 1951 000a A895      		wdr
 1952 000c 8091 6000 		lds r24,96
 1953 0010 8861      		ori r24,24
 1954 0012 8093 6000 		sts 96,r24
 1955 0016 1092 6000 		sts 96,__zero_reg__
 1956 001a 0FBE      		out __SREG__,__tmp_reg__
 1957               		
 1958               	 ;  0 "" 2
 1959               	/* #NOAPP */
 1960               	.LBE413:
 1961               	.LBE414:
 923:tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
 1962               		.loc 1 923 5 view .LVU624
 923:tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
 1963               		.loc 1 923 11 is_stmt 0 view .LVU625
 1964 001c 80E8      		ldi r24,lo8(-128)
 1965 001e 8093 6100 		sts 97,r24
 924:tmk_core/protocol/lufa/lufa.c **** }
 1966               		.loc 1 924 5 is_stmt 1 view .LVU626
 924:tmk_core/protocol/lufa/lufa.c **** }
 1967               		.loc 1 924 11 is_stmt 0 view .LVU627
 1968 0022 1092 6100 		sts 97,__zero_reg__
 1969               	.LBE415:
 1970               	.LBE416:
 953:tmk_core/protocol/lufa/lufa.c ****     keyboard_setup();
 1971               		.loc 1 953 5 is_stmt 1 view .LVU628
 1972 0026 0E94 0000 		call keyboard_setup
 1973               	.LVL113:
 954:tmk_core/protocol/lufa/lufa.c ****     setup_usb();
 1974               		.loc 1 954 5 view .LVU629
 1975               	.LBB417:
 1976               	.LBI417:
 931:tmk_core/protocol/lufa/lufa.c ****     // Leonardo needs. Without this USB device is not recognized.
 1977               		.loc 1 931 13 view .LVU630
 1978               	.LBB418:
 933:tmk_core/protocol/lufa/lufa.c **** 
 1979               		.loc 1 933 5 view .LVU631
 1980 002a 0E94 0000 		call USB_Disable
 1981               	.LVL114:
 935:tmk_core/protocol/lufa/lufa.c **** 
 1982               		.loc 1 935 5 view .LVU632
 1983 002e 0E94 0000 		call USB_Init
 1984               	.LVL115:
 938:tmk_core/protocol/lufa/lufa.c ****     print_set_sendchar(sendchar);
 1985               		.loc 1 938 5 view .LVU633
 1986               	.LBB419:
 1987               	.LBI419:
 179:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 1988               		.loc 5 179 24 view .LVU634
 1989               	.LBE419:
 1990               	.LBE418:
 1991               	.LBE417:
 1992               		.loc 5 181 6 view .LVU635
 1993               	.LBB424:
 1994               	.LBB423:
 1995               	.LBB422:
 1996               	.LBB420:
 1997               	.LBI420:
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 1998               		.loc 6 88 23 view .LVU636
 1999               	.LBB421:
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 2000               		.loc 6 90 5 view .LVU637
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 2001               		.loc 6 113 7 view .LVU638
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 2002               		.loc 6 113 14 is_stmt 0 view .LVU639
 2003 0032 8091 E200 		lds r24,226
 2004 0036 8460      		ori r24,lo8(4)
 2005 0038 8093 E200 		sts 226,r24
 2006               		.loc 6 114 7 is_stmt 1 view .LVU640
 2007               	.LVL116:
 2008               		.loc 6 114 7 is_stmt 0 view .LVU641
 2009               	.LBE421:
 2010               	.LBE420:
 2011               	.LBE422:
 939:tmk_core/protocol/lufa/lufa.c **** }
 2012               		.loc 1 939 5 is_stmt 1 view .LVU642
 2013 003c 80E0      		ldi r24,lo8(gs(sendchar))
 2014 003e 90E0      		ldi r25,hi8(gs(sendchar))
 2015 0040 0E94 0000 		call print_set_sendchar
 2016               	.LVL117:
 2017               	.LBE423:
 2018               	.LBE424:
 955:tmk_core/protocol/lufa/lufa.c ****     sei();
 2019               		.loc 1 955 5 view .LVU643
 2020               	/* #APP */
 2021               	 ;  955 "tmk_core/protocol/lufa/lufa.c" 1
 2022 0044 7894      		sei
 2023               	 ;  0 "" 2
 956:tmk_core/protocol/lufa/lufa.c **** 
 957:tmk_core/protocol/lufa/lufa.c **** #if defined(MODULE_ADAFRUIT_EZKEY) || defined(MODULE_RN42)
 958:tmk_core/protocol/lufa/lufa.c ****     serial_init();
 959:tmk_core/protocol/lufa/lufa.c **** #endif
 960:tmk_core/protocol/lufa/lufa.c **** 
 961:tmk_core/protocol/lufa/lufa.c ****     /* wait for USB startup & debug output */
 962:tmk_core/protocol/lufa/lufa.c **** 
 963:tmk_core/protocol/lufa/lufa.c **** #ifdef WAIT_FOR_USB
 964:tmk_core/protocol/lufa/lufa.c ****     while (USB_DeviceState != DEVICE_STATE_Configured) {
 965:tmk_core/protocol/lufa/lufa.c **** #    if defined(INTERRUPT_CONTROL_ENDPOINT)
 966:tmk_core/protocol/lufa/lufa.c ****         ;
 967:tmk_core/protocol/lufa/lufa.c **** #    else
 968:tmk_core/protocol/lufa/lufa.c ****         USB_USBTask();
 969:tmk_core/protocol/lufa/lufa.c **** #    endif
 970:tmk_core/protocol/lufa/lufa.c ****     }
 971:tmk_core/protocol/lufa/lufa.c ****     print("USB configured.\n");
 972:tmk_core/protocol/lufa/lufa.c **** #else
 973:tmk_core/protocol/lufa/lufa.c ****     USB_USBTask();
 2024               		.loc 1 973 5 view .LVU644
 2025               	/* #NOAPP */
 2026 0046 0E94 0000 		call USB_USBTask
 2027               	.LVL118:
 974:tmk_core/protocol/lufa/lufa.c **** #endif
 975:tmk_core/protocol/lufa/lufa.c ****     /* init modules */
 976:tmk_core/protocol/lufa/lufa.c ****     keyboard_init();
 2028               		.loc 1 976 5 view .LVU645
 2029 004a 0E94 0000 		call keyboard_init
 2030               	.LVL119:
 977:tmk_core/protocol/lufa/lufa.c ****     host_set_driver(&lufa_driver);
 2031               		.loc 1 977 5 view .LVU646
 2032 004e 80E0      		ldi r24,lo8(lufa_driver)
 2033 0050 90E0      		ldi r25,hi8(lufa_driver)
 2034 0052 0E94 0000 		call host_set_driver
 2035               	.LVL120:
 978:tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 979:tmk_core/protocol/lufa/lufa.c ****     sleep_led_init();
 980:tmk_core/protocol/lufa/lufa.c **** #endif
 981:tmk_core/protocol/lufa/lufa.c **** 
 982:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 983:tmk_core/protocol/lufa/lufa.c ****     virtser_init();
 984:tmk_core/protocol/lufa/lufa.c **** #endif
 985:tmk_core/protocol/lufa/lufa.c **** 
 986:tmk_core/protocol/lufa/lufa.c ****     print("Keyboard start.\n");
 2036               		.loc 1 986 5 view .LVU647
 2037               	.LBB425:
 2038               		.loc 1 986 5 view .LVU648
 2039               		.loc 1 986 5 view .LVU649
 2040               	.LBE425:
 2041 0056 80E0      		ldi r24,lo8(__c.6059)
 2042 0058 90E0      		ldi r25,hi8(__c.6059)
 2043 005a 0E94 0000 		call xputs
 2044               	.LVL121:
 2045               	.L152:
 987:tmk_core/protocol/lufa/lufa.c ****     while (1) {
 988:tmk_core/protocol/lufa/lufa.c **** #if !defined(NO_USB_STARTUP_CHECK)
 989:tmk_core/protocol/lufa/lufa.c ****         while (USB_DeviceState == DEVICE_STATE_Suspended) {
 2046               		.loc 1 989 15 view .LVU650
 2047               		.loc 1 989 32 is_stmt 0 view .LVU651
 2048 005e 8091 0000 		lds r24,USB_DeviceState
 2049               		.loc 1 989 15 view .LVU652
 2050 0062 8530      		cpi r24,lo8(5)
 2051 0064 01F0      		breq .L156
 990:tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 991:tmk_core/protocol/lufa/lufa.c ****             suspend_power_down();
 992:tmk_core/protocol/lufa/lufa.c ****             if (USB_Device_RemoteWakeupEnabled && suspend_wakeup_condition()) {
 993:tmk_core/protocol/lufa/lufa.c ****                 USB_Device_SendRemoteWakeup();
 994:tmk_core/protocol/lufa/lufa.c ****             }
 995:tmk_core/protocol/lufa/lufa.c ****         }
 996:tmk_core/protocol/lufa/lufa.c **** #endif
 997:tmk_core/protocol/lufa/lufa.c **** 
 998:tmk_core/protocol/lufa/lufa.c ****         keyboard_task();
 2052               		.loc 1 998 9 is_stmt 1 view .LVU653
 2053 0066 0E94 0000 		call keyboard_task
 2054               	.LVL122:
 987:tmk_core/protocol/lufa/lufa.c ****     while (1) {
 2055               		.loc 1 987 11 view .LVU654
 989:tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 2056               		.loc 1 989 15 is_stmt 0 view .LVU655
 2057 006a 00C0      		rjmp .L152
 2058               	.L156:
 990:tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 2059               		.loc 1 990 13 is_stmt 1 view .LVU656
 2060               	.LBB426:
 990:tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 2061               		.loc 1 990 13 view .LVU657
 990:tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 2062               		.loc 1 990 13 view .LVU658
 2063               	.LBE426:
 2064 006c 80E0      		ldi r24,lo8(__c.6061)
 2065 006e 90E0      		ldi r25,hi8(__c.6061)
 2066 0070 0E94 0000 		call xputs
 2067               	.LVL123:
 991:tmk_core/protocol/lufa/lufa.c ****             if (USB_Device_RemoteWakeupEnabled && suspend_wakeup_condition()) {
 2068               		.loc 1 991 13 view .LVU659
 2069 0074 0E94 0000 		call suspend_power_down
 2070               	.LVL124:
 992:tmk_core/protocol/lufa/lufa.c ****                 USB_Device_SendRemoteWakeup();
 2071               		.loc 1 992 13 view .LVU660
 992:tmk_core/protocol/lufa/lufa.c ****                 USB_Device_SendRemoteWakeup();
 2072               		.loc 1 992 16 is_stmt 0 view .LVU661
 2073 0078 8091 0000 		lds r24,USB_Device_RemoteWakeupEnabled
 2074 007c 8823      		tst r24
 2075 007e 01F0      		breq .L152
 992:tmk_core/protocol/lufa/lufa.c ****                 USB_Device_SendRemoteWakeup();
 2076               		.loc 1 992 51 discriminator 1 view .LVU662
 2077 0080 0E94 0000 		call suspend_wakeup_condition
 2078               	.LVL125:
 992:tmk_core/protocol/lufa/lufa.c ****                 USB_Device_SendRemoteWakeup();
 2079               		.loc 1 992 48 discriminator 1 view .LVU663
 2080 0084 8823      		tst r24
 2081 0086 01F0      		breq .L152
 993:tmk_core/protocol/lufa/lufa.c ****             }
 2082               		.loc 1 993 17 is_stmt 1 view .LVU664
 2083 0088 0E94 0000 		call USB_Device_SendRemoteWakeup
 2084               	.LVL126:
 2085 008c 00C0      		rjmp .L152
 2086               		.cfi_endproc
 2087               	.LFE134:
 2089               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
 2090               	.global	CALLBACK_USB_GetDescriptor
 2092               	CALLBACK_USB_GetDescriptor:
 2093               	.LVL127:
 2094               	.LFB135:
 999:tmk_core/protocol/lufa/lufa.c **** 
1000:tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
1001:tmk_core/protocol/lufa/lufa.c ****         MIDI_Device_USBTask(&USB_MIDI_Interface);
1002:tmk_core/protocol/lufa/lufa.c **** #endif
1003:tmk_core/protocol/lufa/lufa.c **** 
1004:tmk_core/protocol/lufa/lufa.c **** #if defined(RGBLIGHT_ANIMATIONS) && defined(RGBLIGHT_ENABLE)
1005:tmk_core/protocol/lufa/lufa.c ****         rgblight_task();
1006:tmk_core/protocol/lufa/lufa.c **** #endif
1007:tmk_core/protocol/lufa/lufa.c **** 
1008:tmk_core/protocol/lufa/lufa.c **** #ifdef MODULE_ADAFRUIT_BLE
1009:tmk_core/protocol/lufa/lufa.c ****         adafruit_ble_task();
1010:tmk_core/protocol/lufa/lufa.c **** #endif
1011:tmk_core/protocol/lufa/lufa.c **** 
1012:tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
1013:tmk_core/protocol/lufa/lufa.c ****         virtser_task();
1014:tmk_core/protocol/lufa/lufa.c ****         CDC_Device_USBTask(&cdc_device);
1015:tmk_core/protocol/lufa/lufa.c **** #endif
1016:tmk_core/protocol/lufa/lufa.c **** 
1017:tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
1018:tmk_core/protocol/lufa/lufa.c ****         raw_hid_task();
1019:tmk_core/protocol/lufa/lufa.c **** #endif
1020:tmk_core/protocol/lufa/lufa.c **** 
1021:tmk_core/protocol/lufa/lufa.c **** #if !defined(INTERRUPT_CONTROL_ENDPOINT)
1022:tmk_core/protocol/lufa/lufa.c ****         USB_USBTask();
1023:tmk_core/protocol/lufa/lufa.c **** #endif
1024:tmk_core/protocol/lufa/lufa.c ****     }
1025:tmk_core/protocol/lufa/lufa.c **** }
1026:tmk_core/protocol/lufa/lufa.c **** 
1027:tmk_core/protocol/lufa/lufa.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue, const uint16_t wIndex, const void **cons
 2095               		.loc 1 1027 121 view -0
 2096               		.cfi_startproc
 2097               	/* prologue: function */
 2098               	/* frame size = 0 */
 2099               	/* stack size = 0 */
 2100               	.L__stack_usage = 0
 2101               		.loc 1 1027 123 view .LVU666
 2102               		.loc 1 1027 130 is_stmt 0 view .LVU667
 2103 0000 0C94 0000 		jmp get_usb_descriptor
 2104               	.LVL128:
 2105               		.loc 1 1027 130 view .LVU668
 2106               		.cfi_endproc
 2107               	.LFE135:
 2109               		.section	.progmem.data.__c.6061,"a"
 2112               	__c.6061:
 2113 0000 5B73 5D00 		.string	"[s]"
 2114               		.section	.progmem.data.__c.6059,"a"
 2117               	__c.6059:
 2118 0000 4B65 7962 		.string	"Keyboard start.\n"
 2118      6F61 7264 
 2118      2073 7461 
 2118      7274 2E0A 
 2118      00
 2119               		.section	.bss.timeouted.6028,"aw",@nobits
 2122               	timeouted.6028:
 2123 0000 00        		.zero	1
 2124               		.section	.bss.count.5955,"aw",@nobits
 2127               	count.5955:
 2128 0000 00        		.zero	1
 2129               		.section	.progmem.data.__c.5949,"a"
 2132               	__c.5949:
 2133 0000 5B57 5D00 		.string	"[W]"
 2134               		.section	.progmem.data.__c.5945,"a"
 2137               	__c.5945:
 2138 0000 5B53 5D00 		.string	"[S]"
 2139               		.section	.progmem.data.__c.5941,"a"
 2142               	__c.5941:
 2143 0000 5B52 5D00 		.string	"[R]"
 2144               		.section	.progmem.data.__c.5936,"a"
 2147               	__c.5936:
 2148 0000 5B44 5D00 		.string	"[D]"
 2149               		.section	.progmem.data.__c.5931,"a"
 2152               	__c.5931:
 2153 0000 5B43 5D00 		.string	"[C]"
 2154               		.section	.bss.console_flush,"aw",@nobits
 2157               	console_flush:
 2158 0000 00        		.zero	1
 2159               	.global	lufa_driver
 2160               		.section	.data.lufa_driver,"aw"
 2163               	lufa_driver:
 2164 0000 0000      		.word	gs(keyboard_leds)
 2165 0002 0000      		.word	gs(send_keyboard)
 2166 0004 0000      		.word	gs(send_mouse)
 2167 0006 0000      		.word	gs(send_system)
 2168 0008 0000      		.word	gs(send_consumer)
 2169               		.section	.bss.keyboard_report_sent,"aw",@nobits
 2172               	keyboard_report_sent:
 2173 0000 0000 0000 		.zero	8
 2173      0000 0000 
 2174               		.section	.bss.keyboard_led_stats,"aw",@nobits
 2177               	keyboard_led_stats:
 2178 0000 00        		.zero	1
 2179               	.global	keyboard_protocol
 2180               		.section	.data.keyboard_protocol,"aw"
 2183               	keyboard_protocol:
 2184 0000 01        		.byte	1
 2185               	.global	keyboard_idle
 2186               		.section	.bss.keyboard_idle,"aw",@nobits
 2189               	keyboard_idle:
 2190 0000 00        		.zero	1
 2191               		.text
 2192               	.Letext0:
 2193               		.file 8 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdint.h"
 2194               		.file 9 "tmk_core/common/report.h"
 2195               		.file 10 "tmk_core/common/host_driver.h"
 2196               		.file 11 "tmk_core/common/host.h"
 2197               		.file 12 "/usr/local/Cellar/avr-gcc@8/8.4.0/lib/avr-gcc/8/gcc/avr/8.4.0/include/stddef.h"
 2198               		.file 13 "tmk_core/common/action.h"
 2199               		.file 14 "tmk_core/common/avr/xprintf.h"
 2200               		.file 15 "tmk_core/common/debug.h"
 2201               		.file 16 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../Device.h"
 2202               		.file 17 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 2203               		.file 18 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 2204               		.file 19 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 2205               		.file 20 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 2206               		.file 21 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdio.h"
 2207               		.file 22 "lib/lufa/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCommon.h"
 2208               		.file 23 "tmk_core/protocol/usb_descriptor.h"
 2209               		.file 24 "tmk_core/protocol/lufa/lufa.h"
 2210               		.file 25 "quantum/keycode_config.h"
 2211               		.file 26 "quantum/keymap.h"
 2212               		.file 27 "tmk_core/common/action_layer.h"
 2213               		.file 28 "tmk_core/common/timer.h"
 2214               		.file 29 "tmk_core/common/action_util.h"
 2215               		.file 30 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdlib.h"
 2216               		.file 31 "quantum/quantum.h"
 2217               		.file 32 "tmk_core/protocol/lufa/outputselect.h"
 2218               		.file 33 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h"
 2219               		.file 34 "tmk_core/common/print.h"
 2220               		.file 35 "tmk_core/common/keyboard.h"
 2221               		.file 36 "tmk_core/common/suspend.h"
 2222               		.file 37 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/EndpointStream_AVR8.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 lufa.c
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:4      *ABS*:000000000000003f __SREG__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:12     .text.keyboard_leds:0000000000000000 keyboard_leds
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2177   .bss.keyboard_led_stats:0000000000000000 keyboard_led_stats
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:32     .text.sendchar:0000000000000000 sendchar
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2157   .bss.console_flush:0000000000000000 console_flush
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2122   .bss.timeouted.6028:0000000000000000 timeouted.6028
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:412    .text.send_consumer:0000000000000000 send_consumer
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:588    .text.send_system:0000000000000000 send_system
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:750    .text.send_mouse:0000000000000000 send_mouse
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:898    .text.send_keyboard:0000000000000000 send_keyboard
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2172   .bss.keyboard_report_sent:0000000000000000 keyboard_report_sent
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:1061   .text.EVENT_USB_Device_Connect:0000000000000000 EVENT_USB_Device_Connect
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2152   .progmem.data.__c.5931:0000000000000000 __c.5931
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:1125   .text.EVENT_USB_Device_Disconnect:0000000000000000 EVENT_USB_Device_Disconnect
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2147   .progmem.data.__c.5936:0000000000000000 __c.5936
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:1154   .text.EVENT_USB_Device_Reset:0000000000000000 EVENT_USB_Device_Reset
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2142   .progmem.data.__c.5941:0000000000000000 __c.5941
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:1177   .text.EVENT_USB_Device_Suspend:0000000000000000 EVENT_USB_Device_Suspend
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2137   .progmem.data.__c.5945:0000000000000000 __c.5945
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:1200   .text.EVENT_USB_Device_WakeUp:0000000000000000 EVENT_USB_Device_WakeUp
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2132   .progmem.data.__c.5949:0000000000000000 __c.5949
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:1226   .text.EVENT_USB_Device_StartOfFrame:0000000000000000 EVENT_USB_Device_StartOfFrame
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2127   .bss.count.5955:0000000000000000 count.5955
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:1426   .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 EVENT_USB_Device_ConfigurationChanged
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:1526   .text.EVENT_USB_Device_ControlRequest:0000000000000000 EVENT_USB_Device_ControlRequest
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2183   .data.keyboard_protocol:0000000000000000 keyboard_protocol
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2189   .bss.keyboard_idle:0000000000000000 keyboard_idle
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:1914   .text.startup.main:0000000000000000 main
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2163   .data.lufa_driver:0000000000000000 lufa_driver
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2117   .progmem.data.__c.6059:0000000000000000 __c.6059
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2112   .progmem.data.__c.6061:0000000000000000 __c.6061
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccFeMw1y.s:2092   .text.CALLBACK_USB_GetDescriptor:0000000000000000 CALLBACK_USB_GetDescriptor

UNDEFINED SYMBOLS
USB_DeviceState
where_to_send
Endpoint_Write_Stream_LE
xputs
USB_IsInitialized
USB_Disable
USB_Init
suspend_wakeup_init
__udivmodqi4
Endpoint_ConfigureEndpoint_Prv
USB_ControlRequest
Endpoint_ClearStatusStage
Endpoint_Write_Control_Stream_LE
clear_keyboard
keyboard_setup
print_set_sendchar
USB_USBTask
keyboard_init
host_set_driver
keyboard_task
suspend_power_down
USB_Device_RemoteWakeupEnabled
suspend_wakeup_condition
USB_Device_SendRemoteWakeup
get_usb_descriptor
__do_copy_data
__do_clear_bss
