   1               		.file	"command.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.mousekey_console_help,"ax",@progbits
  12               	mousekey_console_help:
  13               	.LFB32:
  14               		.file 1 "tmk_core/common/command.c"
   1:tmk_core/common/command.c **** /*
   2:tmk_core/common/command.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/command.c **** 
   4:tmk_core/common/command.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/command.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/command.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/command.c **** (at your option) any later version.
   8:tmk_core/common/command.c **** 
   9:tmk_core/common/command.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/command.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/command.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/command.c **** GNU General Public License for more details.
  13:tmk_core/common/command.c **** 
  14:tmk_core/common/command.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/command.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/command.c **** */
  17:tmk_core/common/command.c **** #include <stdint.h>
  18:tmk_core/common/command.c **** #include <stdbool.h>
  19:tmk_core/common/command.c **** #include "wait.h"
  20:tmk_core/common/command.c **** #include "keycode.h"
  21:tmk_core/common/command.c **** #include "host.h"
  22:tmk_core/common/command.c **** #include "keymap.h"
  23:tmk_core/common/command.c **** #include "print.h"
  24:tmk_core/common/command.c **** #include "debug.h"
  25:tmk_core/common/command.c **** #include "util.h"
  26:tmk_core/common/command.c **** #include "timer.h"
  27:tmk_core/common/command.c **** #include "keyboard.h"
  28:tmk_core/common/command.c **** #include "bootloader.h"
  29:tmk_core/common/command.c **** #include "action_layer.h"
  30:tmk_core/common/command.c **** #include "action_util.h"
  31:tmk_core/common/command.c **** #include "eeconfig.h"
  32:tmk_core/common/command.c **** #include "sleep_led.h"
  33:tmk_core/common/command.c **** #include "led.h"
  34:tmk_core/common/command.c **** #include "command.h"
  35:tmk_core/common/command.c **** #include "quantum.h"
  36:tmk_core/common/command.c **** #include "version.h"
  37:tmk_core/common/command.c **** 
  38:tmk_core/common/command.c **** #ifdef BACKLIGHT_ENABLE
  39:tmk_core/common/command.c **** #    include "backlight.h"
  40:tmk_core/common/command.c **** #endif
  41:tmk_core/common/command.c **** 
  42:tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  43:tmk_core/common/command.c **** #    include "mousekey.h"
  44:tmk_core/common/command.c **** #endif
  45:tmk_core/common/command.c **** 
  46:tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
  47:tmk_core/common/command.c **** #    include "usb_keyboard.h"
  48:tmk_core/common/command.c **** #    ifdef EXTRAKEY_ENABLE
  49:tmk_core/common/command.c **** #        include "usb_extra.h"
  50:tmk_core/common/command.c **** #    endif
  51:tmk_core/common/command.c **** #endif
  52:tmk_core/common/command.c **** 
  53:tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
  54:tmk_core/common/command.c **** #    include "usbdrv.h"
  55:tmk_core/common/command.c **** #endif
  56:tmk_core/common/command.c **** 
  57:tmk_core/common/command.c **** #ifdef AUDIO_ENABLE
  58:tmk_core/common/command.c **** #    include "audio.h"
  59:tmk_core/common/command.c **** #endif /* AUDIO_ENABLE */
  60:tmk_core/common/command.c **** 
  61:tmk_core/common/command.c **** static bool command_common(uint8_t code);
  62:tmk_core/common/command.c **** static void command_common_help(void);
  63:tmk_core/common/command.c **** static void print_version(void);
  64:tmk_core/common/command.c **** static void print_status(void);
  65:tmk_core/common/command.c **** static bool command_console(uint8_t code);
  66:tmk_core/common/command.c **** static void command_console_help(void);
  67:tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  68:tmk_core/common/command.c **** static bool mousekey_console(uint8_t code);
  69:tmk_core/common/command.c **** static void mousekey_console_help(void);
  70:tmk_core/common/command.c **** #endif
  71:tmk_core/common/command.c **** 
  72:tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer);
  73:tmk_core/common/command.c **** 
  74:tmk_core/common/command.c **** command_state_t command_state = ONESHOT;
  75:tmk_core/common/command.c **** 
  76:tmk_core/common/command.c **** bool command_proc(uint8_t code) {
  77:tmk_core/common/command.c ****     switch (command_state) {
  78:tmk_core/common/command.c ****         case ONESHOT:
  79:tmk_core/common/command.c ****             if (!IS_COMMAND()) return false;
  80:tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
  81:tmk_core/common/command.c ****             break;
  82:tmk_core/common/command.c ****         case CONSOLE:
  83:tmk_core/common/command.c ****             if (IS_COMMAND())
  84:tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
  85:tmk_core/common/command.c ****             else
  86:tmk_core/common/command.c ****                 return (command_console_extra(code) || command_console(code));
  87:tmk_core/common/command.c ****             break;
  88:tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  89:tmk_core/common/command.c ****         case MOUSEKEY:
  90:tmk_core/common/command.c ****             mousekey_console(code);
  91:tmk_core/common/command.c ****             break;
  92:tmk_core/common/command.c **** #endif
  93:tmk_core/common/command.c ****         default:
  94:tmk_core/common/command.c ****             command_state = ONESHOT;
  95:tmk_core/common/command.c ****             return false;
  96:tmk_core/common/command.c ****     }
  97:tmk_core/common/command.c ****     return true;
  98:tmk_core/common/command.c **** }
  99:tmk_core/common/command.c **** 
 100:tmk_core/common/command.c **** /* TODO: Refactoring is needed. */
 101:tmk_core/common/command.c **** /* This allows to define extra commands. return false when not processed. */
 102:tmk_core/common/command.c **** bool command_extra(uint8_t code) __attribute__((weak));
 103:tmk_core/common/command.c **** bool command_extra(uint8_t code) {
 104:tmk_core/common/command.c ****     (void)code;
 105:tmk_core/common/command.c ****     return false;
 106:tmk_core/common/command.c **** }
 107:tmk_core/common/command.c **** 
 108:tmk_core/common/command.c **** bool command_console_extra(uint8_t code) __attribute__((weak));
 109:tmk_core/common/command.c **** bool command_console_extra(uint8_t code) {
 110:tmk_core/common/command.c ****     (void)code;
 111:tmk_core/common/command.c ****     return false;
 112:tmk_core/common/command.c **** }
 113:tmk_core/common/command.c **** 
 114:tmk_core/common/command.c **** /***********************************************************
 115:tmk_core/common/command.c ****  * Command common
 116:tmk_core/common/command.c ****  ***********************************************************/
 117:tmk_core/common/command.c **** static void command_common_help(void) {
 118:tmk_core/common/command.c ****     print("\n\t- Magic -\n" STR(MAGIC_KEY_DEBUG) ":	Debug Message Toggle\n" STR(MAGIC_KEY_DEBUG_MAT
 119:tmk_core/common/command.c **** 
 120:tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_CUSTOM
 121:tmk_core/common/command.c ****           STR(MAGIC_KEY_LAYER0) ":	Switch to Layer 0\n" STR(MAGIC_KEY_LAYER1) ":	Switch to Layer 1\
 122:tmk_core/common/command.c **** #endif
 123:tmk_core/common/command.c **** 
 124:tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_FKEYS
 125:tmk_core/common/command.c ****                                                                                                    
 126:tmk_core/common/command.c **** #endif
 127:tmk_core/common/command.c **** 
 128:tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_NKEYS
 129:tmk_core/common/command.c ****                                                                                                    
 130:tmk_core/common/command.c **** #endif
 131:tmk_core/common/command.c **** 
 132:tmk_core/common/command.c ****           STR(MAGIC_KEY_LAYER0_ALT) ":	Switch to Layer 0 (alternate)\n"
 133:tmk_core/common/command.c **** 
 134:tmk_core/common/command.c ****           STR(MAGIC_KEY_BOOTLOADER) ":	Jump to Bootloader\n" STR(MAGIC_KEY_BOOTLOADER_ALT) ":	Jump 
 135:tmk_core/common/command.c **** 
 136:tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 137:tmk_core/common/command.c ****           STR(MAGIC_KEY_LOCK) ":	Lock Keyboard\n"
 138:tmk_core/common/command.c **** #endif
 139:tmk_core/common/command.c **** 
 140:tmk_core/common/command.c ****           STR(MAGIC_KEY_EEPROM) ":	Print EEPROM Settings\n" STR(MAGIC_KEY_EEPROM_CLEAR) ":	Clear EE
 141:tmk_core/common/command.c **** 
 142:tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 143:tmk_core/common/command.c ****           STR(MAGIC_KEY_NKRO) ":	NKRO Toggle\n"
 144:tmk_core/common/command.c **** #endif
 145:tmk_core/common/command.c **** 
 146:tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 147:tmk_core/common/command.c ****           STR(MAGIC_KEY_SLEEP_LED) ":	Sleep LED Test\n"
 148:tmk_core/common/command.c **** #endif
 149:tmk_core/common/command.c ****     );
 150:tmk_core/common/command.c **** }
 151:tmk_core/common/command.c **** 
 152:tmk_core/common/command.c **** static void print_version(void) {
 153:tmk_core/common/command.c ****     // print version & information
 154:tmk_core/common/command.c ****     print("\n\t- Version -\n");
 155:tmk_core/common/command.c ****     print("DESC: " STR(DESCRIPTION) "\n");
 156:tmk_core/common/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 157:tmk_core/common/command.c ****                                                        "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") 
 158:tmk_core/common/command.c ****                                                                                                 "VE
 159:tmk_core/common/command.c **** #ifdef SKIP_VERSION
 160:tmk_core/common/command.c ****     print("BUILD:  (" __DATE__ ")\n");
 161:tmk_core/common/command.c **** #else
 162:tmk_core/common/command.c ****     print("BUILD: " STR(QMK_VERSION) " (" __TIME__ " " __DATE__ ")\n");
 163:tmk_core/common/command.c **** #endif
 164:tmk_core/common/command.c **** 
 165:tmk_core/common/command.c ****     /* build options */
 166:tmk_core/common/command.c ****     print("OPTIONS:"
 167:tmk_core/common/command.c **** 
 168:tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 169:tmk_core/common/command.c ****           " PJRC"
 170:tmk_core/common/command.c **** #endif
 171:tmk_core/common/command.c **** #ifdef PROTOCOL_LUFA
 172:tmk_core/common/command.c ****           " LUFA"
 173:tmk_core/common/command.c **** #endif
 174:tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
 175:tmk_core/common/command.c ****           " VUSB"
 176:tmk_core/common/command.c **** #endif
 177:tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 178:tmk_core/common/command.c ****           " BOOTMAGIC"
 179:tmk_core/common/command.c **** #endif
 180:tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 181:tmk_core/common/command.c ****           " MOUSEKEY"
 182:tmk_core/common/command.c **** #endif
 183:tmk_core/common/command.c **** #ifdef EXTRAKEY_ENABLE
 184:tmk_core/common/command.c ****           " EXTRAKEY"
 185:tmk_core/common/command.c **** #endif
 186:tmk_core/common/command.c **** #ifdef CONSOLE_ENABLE
 187:tmk_core/common/command.c ****           " CONSOLE"
 188:tmk_core/common/command.c **** #endif
 189:tmk_core/common/command.c **** #ifdef COMMAND_ENABLE
 190:tmk_core/common/command.c ****           " COMMAND"
 191:tmk_core/common/command.c **** #endif
 192:tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 193:tmk_core/common/command.c ****           " NKRO"
 194:tmk_core/common/command.c **** #endif
 195:tmk_core/common/command.c **** #ifdef KEYMAP_SECTION_ENABLE
 196:tmk_core/common/command.c ****           " KEYMAP_SECTION"
 197:tmk_core/common/command.c **** #endif
 198:tmk_core/common/command.c **** 
 199:tmk_core/common/command.c ****           " " STR(BOOTLOADER_SIZE) "\n");
 200:tmk_core/common/command.c **** 
 201:tmk_core/common/command.c ****     print("GCC: " STR(__GNUC__) "." STR(__GNUC_MINOR__) "." STR(__GNUC_PATCHLEVEL__)
 202:tmk_core/common/command.c **** #if defined(__AVR__)
 203:tmk_core/common/command.c ****               " AVR-LIBC: " __AVR_LIBC_VERSION_STRING__ " AVR_ARCH: avr" STR(__AVR_ARCH__)
 204:tmk_core/common/command.c **** #endif
 205:tmk_core/common/command.c ****                   "\n");
 206:tmk_core/common/command.c **** 
 207:tmk_core/common/command.c ****     return;
 208:tmk_core/common/command.c **** }
 209:tmk_core/common/command.c **** 
 210:tmk_core/common/command.c **** static void print_status(void) {
 211:tmk_core/common/command.c ****     print("\n\t- Status -\n");
 212:tmk_core/common/command.c **** 
 213:tmk_core/common/command.c ****     print_val_hex8(host_keyboard_leds());
 214:tmk_core/common/command.c **** #ifndef PROTOCOL_VUSB
 215:tmk_core/common/command.c ****     // these aren't set on the V-USB protocol, so we just ignore them for now
 216:tmk_core/common/command.c ****     print_val_hex8(keyboard_protocol);
 217:tmk_core/common/command.c ****     print_val_hex8(keyboard_idle);
 218:tmk_core/common/command.c **** #endif
 219:tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 220:tmk_core/common/command.c ****     print_val_hex8(keymap_config.nkro);
 221:tmk_core/common/command.c **** #endif
 222:tmk_core/common/command.c ****     print_val_hex32(timer_read32());
 223:tmk_core/common/command.c **** 
 224:tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 225:tmk_core/common/command.c ****     print_val_hex8(UDCON);
 226:tmk_core/common/command.c ****     print_val_hex8(UDIEN);
 227:tmk_core/common/command.c ****     print_val_hex8(UDINT);
 228:tmk_core/common/command.c ****     print_val_hex8(usb_keyboard_leds);
 229:tmk_core/common/command.c ****     print_val_hex8(usb_keyboard_idle_count);
 230:tmk_core/common/command.c **** #endif
 231:tmk_core/common/command.c **** 
 232:tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 233:tmk_core/common/command.c **** #    if USB_COUNT_SOF
 234:tmk_core/common/command.c ****     print_val_hex8(usbSofCount);
 235:tmk_core/common/command.c **** #    endif
 236:tmk_core/common/command.c **** #endif
 237:tmk_core/common/command.c ****     return;
 238:tmk_core/common/command.c **** }
 239:tmk_core/common/command.c **** 
 240:tmk_core/common/command.c **** static void print_eeconfig(void) {
 241:tmk_core/common/command.c **** // Print these variables if NO_PRINT or USER_PRINT are not defined.
 242:tmk_core/common/command.c **** #if !defined(NO_PRINT) && !defined(USER_PRINT)
 243:tmk_core/common/command.c **** 
 244:tmk_core/common/command.c ****     print("default_layer: ");
 245:tmk_core/common/command.c ****     print_dec(eeconfig_read_default_layer());
 246:tmk_core/common/command.c ****     print("\n");
 247:tmk_core/common/command.c **** 
 248:tmk_core/common/command.c ****     debug_config_t dc;
 249:tmk_core/common/command.c ****     dc.raw = eeconfig_read_debug();
 250:tmk_core/common/command.c ****     print("debug_config.raw: ");
 251:tmk_core/common/command.c ****     print_hex8(dc.raw);
 252:tmk_core/common/command.c ****     print("\n");
 253:tmk_core/common/command.c ****     print(".enable: ");
 254:tmk_core/common/command.c ****     print_dec(dc.enable);
 255:tmk_core/common/command.c ****     print("\n");
 256:tmk_core/common/command.c ****     print(".matrix: ");
 257:tmk_core/common/command.c ****     print_dec(dc.matrix);
 258:tmk_core/common/command.c ****     print("\n");
 259:tmk_core/common/command.c ****     print(".keyboard: ");
 260:tmk_core/common/command.c ****     print_dec(dc.keyboard);
 261:tmk_core/common/command.c ****     print("\n");
 262:tmk_core/common/command.c ****     print(".mouse: ");
 263:tmk_core/common/command.c ****     print_dec(dc.mouse);
 264:tmk_core/common/command.c ****     print("\n");
 265:tmk_core/common/command.c **** 
 266:tmk_core/common/command.c ****     keymap_config_t kc;
 267:tmk_core/common/command.c ****     kc.raw = eeconfig_read_keymap();
 268:tmk_core/common/command.c ****     print("keymap_config.raw: ");
 269:tmk_core/common/command.c ****     print_hex8(kc.raw);
 270:tmk_core/common/command.c ****     print("\n");
 271:tmk_core/common/command.c ****     print(".swap_control_capslock: ");
 272:tmk_core/common/command.c ****     print_dec(kc.swap_control_capslock);
 273:tmk_core/common/command.c ****     print("\n");
 274:tmk_core/common/command.c ****     print(".capslock_to_control: ");
 275:tmk_core/common/command.c ****     print_dec(kc.capslock_to_control);
 276:tmk_core/common/command.c ****     print("\n");
 277:tmk_core/common/command.c ****     print(".swap_lctl_lgui: ");
 278:tmk_core/common/command.c ****     print_dec(kc.swap_lctl_lgui);
 279:tmk_core/common/command.c ****     print("\n");
 280:tmk_core/common/command.c ****     print(".swap_rctl_rgui: ");
 281:tmk_core/common/command.c ****     print_dec(kc.swap_rctl_rgui);
 282:tmk_core/common/command.c ****     print("\n");
 283:tmk_core/common/command.c ****     print(".swap_lalt_lgui: ");
 284:tmk_core/common/command.c ****     print_dec(kc.swap_lalt_lgui);
 285:tmk_core/common/command.c ****     print("\n");
 286:tmk_core/common/command.c ****     print(".swap_ralt_rgui: ");
 287:tmk_core/common/command.c ****     print_dec(kc.swap_ralt_rgui);
 288:tmk_core/common/command.c ****     print("\n");
 289:tmk_core/common/command.c ****     print(".no_gui: ");
 290:tmk_core/common/command.c ****     print_dec(kc.no_gui);
 291:tmk_core/common/command.c ****     print("\n");
 292:tmk_core/common/command.c ****     print(".swap_grave_esc: ");
 293:tmk_core/common/command.c ****     print_dec(kc.swap_grave_esc);
 294:tmk_core/common/command.c ****     print("\n");
 295:tmk_core/common/command.c ****     print(".swap_backslash_backspace: ");
 296:tmk_core/common/command.c ****     print_dec(kc.swap_backslash_backspace);
 297:tmk_core/common/command.c ****     print("\n");
 298:tmk_core/common/command.c ****     print(".nkro: ");
 299:tmk_core/common/command.c ****     print_dec(kc.nkro);
 300:tmk_core/common/command.c ****     print("\n");
 301:tmk_core/common/command.c **** 
 302:tmk_core/common/command.c **** #    ifdef BACKLIGHT_ENABLE
 303:tmk_core/common/command.c ****     backlight_config_t bc;
 304:tmk_core/common/command.c ****     bc.raw = eeconfig_read_backlight();
 305:tmk_core/common/command.c ****     print("backlight_config.raw: ");
 306:tmk_core/common/command.c ****     print_hex8(bc.raw);
 307:tmk_core/common/command.c ****     print("\n");
 308:tmk_core/common/command.c ****     print(".enable: ");
 309:tmk_core/common/command.c ****     print_dec(bc.enable);
 310:tmk_core/common/command.c ****     print("\n");
 311:tmk_core/common/command.c ****     print(".level: ");
 312:tmk_core/common/command.c ****     print_dec(bc.level);
 313:tmk_core/common/command.c ****     print("\n");
 314:tmk_core/common/command.c **** #    endif /* BACKLIGHT_ENABLE */
 315:tmk_core/common/command.c **** 
 316:tmk_core/common/command.c **** #endif /* !NO_PRINT */
 317:tmk_core/common/command.c **** }
 318:tmk_core/common/command.c **** 
 319:tmk_core/common/command.c **** static bool command_common(uint8_t code) {
 320:tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 321:tmk_core/common/command.c ****     static host_driver_t *host_driver = 0;
 322:tmk_core/common/command.c **** #endif
 323:tmk_core/common/command.c **** 
 324:tmk_core/common/command.c ****     switch (code) {
 325:tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 326:tmk_core/common/command.c **** 
 327:tmk_core/common/command.c ****         // test breathing sleep LED
 328:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_SLEEP_LED):
 329:tmk_core/common/command.c ****             print("Sleep LED Test\n");
 330:tmk_core/common/command.c ****             sleep_led_toggle();
 331:tmk_core/common/command.c ****             led_set(host_keyboard_leds());
 332:tmk_core/common/command.c ****             break;
 333:tmk_core/common/command.c **** #endif
 334:tmk_core/common/command.c **** 
 335:tmk_core/common/command.c ****         // print stored eeprom config
 336:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_EEPROM):
 337:tmk_core/common/command.c ****             print("eeconfig:\n");
 338:tmk_core/common/command.c ****             print_eeconfig();
 339:tmk_core/common/command.c ****             break;
 340:tmk_core/common/command.c **** 
 341:tmk_core/common/command.c ****         // clear eeprom
 342:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_EEPROM_CLEAR):
 343:tmk_core/common/command.c ****             print("Clearing EEPROM\n");
 344:tmk_core/common/command.c ****             eeconfig_init();
 345:tmk_core/common/command.c ****             break;
 346:tmk_core/common/command.c **** 
 347:tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 348:tmk_core/common/command.c **** 
 349:tmk_core/common/command.c ****         // lock/unlock keyboard
 350:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LOCK):
 351:tmk_core/common/command.c ****             if (host_get_driver()) {
 352:tmk_core/common/command.c ****                 host_driver = host_get_driver();
 353:tmk_core/common/command.c ****                 clear_keyboard();
 354:tmk_core/common/command.c ****                 host_set_driver(0);
 355:tmk_core/common/command.c ****                 print("Locked.\n");
 356:tmk_core/common/command.c ****             } else {
 357:tmk_core/common/command.c ****                 host_set_driver(host_driver);
 358:tmk_core/common/command.c ****                 print("Unlocked.\n");
 359:tmk_core/common/command.c ****             }
 360:tmk_core/common/command.c ****             break;
 361:tmk_core/common/command.c **** #endif
 362:tmk_core/common/command.c **** 
 363:tmk_core/common/command.c ****         // print help
 364:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_HELP):
 365:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_HELP_ALT):
 366:tmk_core/common/command.c ****             command_common_help();
 367:tmk_core/common/command.c ****             break;
 368:tmk_core/common/command.c **** 
 369:tmk_core/common/command.c ****         // activate console
 370:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_CONSOLE):
 371:tmk_core/common/command.c ****             debug_matrix   = false;
 372:tmk_core/common/command.c ****             debug_keyboard = false;
 373:tmk_core/common/command.c ****             debug_mouse    = false;
 374:tmk_core/common/command.c ****             debug_enable   = false;
 375:tmk_core/common/command.c ****             command_console_help();
 376:tmk_core/common/command.c ****             print("C> ");
 377:tmk_core/common/command.c ****             command_state = CONSOLE;
 378:tmk_core/common/command.c ****             break;
 379:tmk_core/common/command.c **** 
 380:tmk_core/common/command.c ****         // jump to bootloader
 381:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_BOOTLOADER):
 382:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_BOOTLOADER_ALT):
 383:tmk_core/common/command.c ****             clear_keyboard();  // clear to prevent stuck keys
 384:tmk_core/common/command.c ****             print("\n\nJumping to bootloader... ");
 385:tmk_core/common/command.c **** #ifdef AUDIO_ENABLE
 386:tmk_core/common/command.c ****             stop_all_notes();
 387:tmk_core/common/command.c ****             shutdown_user();
 388:tmk_core/common/command.c **** #else
 389:tmk_core/common/command.c ****             wait_ms(1000);
 390:tmk_core/common/command.c **** #endif
 391:tmk_core/common/command.c ****             bootloader_jump();  // not return
 392:tmk_core/common/command.c ****             break;
 393:tmk_core/common/command.c **** 
 394:tmk_core/common/command.c ****         // debug toggle
 395:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG):
 396:tmk_core/common/command.c ****             debug_enable = !debug_enable;
 397:tmk_core/common/command.c ****             if (debug_enable) {
 398:tmk_core/common/command.c ****                 print("\ndebug: on\n");
 399:tmk_core/common/command.c ****             } else {
 400:tmk_core/common/command.c ****                 print("\ndebug: off\n");
 401:tmk_core/common/command.c ****                 debug_matrix   = false;
 402:tmk_core/common/command.c ****                 debug_keyboard = false;
 403:tmk_core/common/command.c ****                 debug_mouse    = false;
 404:tmk_core/common/command.c ****             }
 405:tmk_core/common/command.c ****             break;
 406:tmk_core/common/command.c **** 
 407:tmk_core/common/command.c ****         // debug matrix toggle
 408:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG_MATRIX):
 409:tmk_core/common/command.c ****             debug_matrix = !debug_matrix;
 410:tmk_core/common/command.c ****             if (debug_matrix) {
 411:tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 412:tmk_core/common/command.c ****                 debug_enable = true;
 413:tmk_core/common/command.c ****             } else {
 414:tmk_core/common/command.c ****                 print("\nmatrix: off\n");
 415:tmk_core/common/command.c ****             }
 416:tmk_core/common/command.c ****             break;
 417:tmk_core/common/command.c **** 
 418:tmk_core/common/command.c ****         // debug keyboard toggle
 419:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG_KBD):
 420:tmk_core/common/command.c ****             debug_keyboard = !debug_keyboard;
 421:tmk_core/common/command.c ****             if (debug_keyboard) {
 422:tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 423:tmk_core/common/command.c ****                 debug_enable = true;
 424:tmk_core/common/command.c ****             } else {
 425:tmk_core/common/command.c ****                 print("\nkeyboard: off\n");
 426:tmk_core/common/command.c ****             }
 427:tmk_core/common/command.c ****             break;
 428:tmk_core/common/command.c **** 
 429:tmk_core/common/command.c ****         // debug mouse toggle
 430:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG_MOUSE):
 431:tmk_core/common/command.c ****             debug_mouse = !debug_mouse;
 432:tmk_core/common/command.c ****             if (debug_mouse) {
 433:tmk_core/common/command.c ****                 print("\nmouse: on\n");
 434:tmk_core/common/command.c ****                 debug_enable = true;
 435:tmk_core/common/command.c ****             } else {
 436:tmk_core/common/command.c ****                 print("\nmouse: off\n");
 437:tmk_core/common/command.c ****             }
 438:tmk_core/common/command.c ****             break;
 439:tmk_core/common/command.c **** 
 440:tmk_core/common/command.c ****         // print version
 441:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_VERSION):
 442:tmk_core/common/command.c ****             print_version();
 443:tmk_core/common/command.c ****             break;
 444:tmk_core/common/command.c **** 
 445:tmk_core/common/command.c ****         // print status
 446:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_STATUS):
 447:tmk_core/common/command.c ****             print_status();
 448:tmk_core/common/command.c ****             break;
 449:tmk_core/common/command.c **** 
 450:tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 451:tmk_core/common/command.c **** 
 452:tmk_core/common/command.c ****         // NKRO toggle
 453:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_NKRO):
 454:tmk_core/common/command.c ****             clear_keyboard();  // clear to prevent stuck keys
 455:tmk_core/common/command.c ****             keymap_config.nkro = !keymap_config.nkro;
 456:tmk_core/common/command.c ****             if (keymap_config.nkro) {
 457:tmk_core/common/command.c ****                 print("NKRO: on\n");
 458:tmk_core/common/command.c ****             } else {
 459:tmk_core/common/command.c ****                 print("NKRO: off\n");
 460:tmk_core/common/command.c ****             }
 461:tmk_core/common/command.c ****             break;
 462:tmk_core/common/command.c **** #endif
 463:tmk_core/common/command.c **** 
 464:tmk_core/common/command.c ****             // switch layers
 465:tmk_core/common/command.c **** 
 466:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER0_ALT):
 467:tmk_core/common/command.c ****             switch_default_layer(0);
 468:tmk_core/common/command.c ****             break;
 469:tmk_core/common/command.c **** 
 470:tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_CUSTOM
 471:tmk_core/common/command.c **** 
 472:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER0):
 473:tmk_core/common/command.c ****             switch_default_layer(0);
 474:tmk_core/common/command.c ****             break;
 475:tmk_core/common/command.c **** 
 476:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER1):
 477:tmk_core/common/command.c ****             switch_default_layer(1);
 478:tmk_core/common/command.c ****             break;
 479:tmk_core/common/command.c **** 
 480:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER2):
 481:tmk_core/common/command.c ****             switch_default_layer(2);
 482:tmk_core/common/command.c ****             break;
 483:tmk_core/common/command.c **** 
 484:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER3):
 485:tmk_core/common/command.c ****             switch_default_layer(3);
 486:tmk_core/common/command.c ****             break;
 487:tmk_core/common/command.c **** 
 488:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER4):
 489:tmk_core/common/command.c ****             switch_default_layer(4);
 490:tmk_core/common/command.c ****             break;
 491:tmk_core/common/command.c **** 
 492:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER5):
 493:tmk_core/common/command.c ****             switch_default_layer(5);
 494:tmk_core/common/command.c ****             break;
 495:tmk_core/common/command.c **** 
 496:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER6):
 497:tmk_core/common/command.c ****             switch_default_layer(6);
 498:tmk_core/common/command.c ****             break;
 499:tmk_core/common/command.c **** 
 500:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER7):
 501:tmk_core/common/command.c ****             switch_default_layer(7);
 502:tmk_core/common/command.c ****             break;
 503:tmk_core/common/command.c **** 
 504:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER8):
 505:tmk_core/common/command.c ****             switch_default_layer(8);
 506:tmk_core/common/command.c ****             break;
 507:tmk_core/common/command.c **** 
 508:tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER9):
 509:tmk_core/common/command.c ****             switch_default_layer(9);
 510:tmk_core/common/command.c ****             break;
 511:tmk_core/common/command.c **** #endif
 512:tmk_core/common/command.c **** 
 513:tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_FKEYS
 514:tmk_core/common/command.c **** 
 515:tmk_core/common/command.c ****         case KC_F1 ... KC_F9:
 516:tmk_core/common/command.c ****             switch_default_layer((code - KC_F1) + 1);
 517:tmk_core/common/command.c ****             break;
 518:tmk_core/common/command.c ****         case KC_F10:
 519:tmk_core/common/command.c ****             switch_default_layer(0);
 520:tmk_core/common/command.c ****             break;
 521:tmk_core/common/command.c **** #endif
 522:tmk_core/common/command.c **** 
 523:tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_NKEYS
 524:tmk_core/common/command.c **** 
 525:tmk_core/common/command.c ****         case KC_1 ... KC_9:
 526:tmk_core/common/command.c ****             switch_default_layer((code - KC_1) + 1);
 527:tmk_core/common/command.c ****             break;
 528:tmk_core/common/command.c ****         case KC_0:
 529:tmk_core/common/command.c ****             switch_default_layer(0);
 530:tmk_core/common/command.c ****             break;
 531:tmk_core/common/command.c **** #endif
 532:tmk_core/common/command.c **** 
 533:tmk_core/common/command.c ****         default:
 534:tmk_core/common/command.c ****             print("?");
 535:tmk_core/common/command.c ****             return false;
 536:tmk_core/common/command.c ****     }
 537:tmk_core/common/command.c ****     return true;
 538:tmk_core/common/command.c **** }
 539:tmk_core/common/command.c **** 
 540:tmk_core/common/command.c **** /***********************************************************
 541:tmk_core/common/command.c ****  * Command console
 542:tmk_core/common/command.c ****  ***********************************************************/
 543:tmk_core/common/command.c **** static void command_console_help(void) {
 544:tmk_core/common/command.c ****     print("\n\t- Console -\n"
 545:tmk_core/common/command.c ****           "ESC/q:	quit\n"
 546:tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 547:tmk_core/common/command.c ****           "m:	mousekey\n"
 548:tmk_core/common/command.c **** #endif
 549:tmk_core/common/command.c ****     );
 550:tmk_core/common/command.c **** }
 551:tmk_core/common/command.c **** 
 552:tmk_core/common/command.c **** static bool command_console(uint8_t code) {
 553:tmk_core/common/command.c ****     switch (code) {
 554:tmk_core/common/command.c ****         case KC_H:
 555:tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 556:tmk_core/common/command.c ****             command_console_help();
 557:tmk_core/common/command.c ****             break;
 558:tmk_core/common/command.c ****         case KC_Q:
 559:tmk_core/common/command.c ****         case KC_ESC:
 560:tmk_core/common/command.c ****             command_state = ONESHOT;
 561:tmk_core/common/command.c ****             return false;
 562:tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 563:tmk_core/common/command.c ****         case KC_M:
 564:tmk_core/common/command.c ****             mousekey_console_help();
 565:tmk_core/common/command.c ****             print("M> ");
 566:tmk_core/common/command.c ****             command_state = MOUSEKEY;
 567:tmk_core/common/command.c ****             return true;
 568:tmk_core/common/command.c **** #endif
 569:tmk_core/common/command.c ****         default:
 570:tmk_core/common/command.c ****             print("?");
 571:tmk_core/common/command.c ****             return false;
 572:tmk_core/common/command.c ****     }
 573:tmk_core/common/command.c ****     print("C> ");
 574:tmk_core/common/command.c ****     return true;
 575:tmk_core/common/command.c **** }
 576:tmk_core/common/command.c **** 
 577:tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 578:tmk_core/common/command.c **** /***********************************************************
 579:tmk_core/common/command.c ****  * Mousekey console
 580:tmk_core/common/command.c ****  ***********************************************************/
 581:tmk_core/common/command.c **** static uint8_t mousekey_param = 0;
 582:tmk_core/common/command.c **** 
 583:tmk_core/common/command.c **** static void mousekey_param_print(void) {
 584:tmk_core/common/command.c **** // Print these variables if NO_PRINT or USER_PRINT are not defined.
 585:tmk_core/common/command.c **** #    if !defined(NO_PRINT) && !defined(USER_PRINT)
 586:tmk_core/common/command.c ****     print("\n\t- Values -\n");
 587:tmk_core/common/command.c ****     print("1: delay(*10ms): ");
 588:tmk_core/common/command.c ****     pdec(mk_delay);
 589:tmk_core/common/command.c ****     print("\n");
 590:tmk_core/common/command.c ****     print("2: interval(ms): ");
 591:tmk_core/common/command.c ****     pdec(mk_interval);
 592:tmk_core/common/command.c ****     print("\n");
 593:tmk_core/common/command.c ****     print("3: max_speed: ");
 594:tmk_core/common/command.c ****     pdec(mk_max_speed);
 595:tmk_core/common/command.c ****     print("\n");
 596:tmk_core/common/command.c ****     print("4: time_to_max: ");
 597:tmk_core/common/command.c ****     pdec(mk_time_to_max);
 598:tmk_core/common/command.c ****     print("\n");
 599:tmk_core/common/command.c ****     print("5: wheel_max_speed: ");
 600:tmk_core/common/command.c ****     pdec(mk_wheel_max_speed);
 601:tmk_core/common/command.c ****     print("\n");
 602:tmk_core/common/command.c ****     print("6: wheel_time_to_max: ");
 603:tmk_core/common/command.c ****     pdec(mk_wheel_time_to_max);
 604:tmk_core/common/command.c ****     print("\n");
 605:tmk_core/common/command.c **** #    endif /* !NO_PRINT */
 606:tmk_core/common/command.c **** }
 607:tmk_core/common/command.c **** 
 608:tmk_core/common/command.c **** //#define PRINT_SET_VAL(v)  print(#v " = "); print_dec(v); print("\n");
 609:tmk_core/common/command.c **** #    define PRINT_SET_VAL(v) xprintf(#    v " = %d\n", (v))
 610:tmk_core/common/command.c **** static void mousekey_param_inc(uint8_t param, uint8_t inc) {
 611:tmk_core/common/command.c ****     switch (param) {
 612:tmk_core/common/command.c ****         case 1:
 613:tmk_core/common/command.c ****             if (mk_delay + inc < UINT8_MAX)
 614:tmk_core/common/command.c ****                 mk_delay += inc;
 615:tmk_core/common/command.c ****             else
 616:tmk_core/common/command.c ****                 mk_delay = UINT8_MAX;
 617:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 618:tmk_core/common/command.c ****             break;
 619:tmk_core/common/command.c ****         case 2:
 620:tmk_core/common/command.c ****             if (mk_interval + inc < UINT8_MAX)
 621:tmk_core/common/command.c ****                 mk_interval += inc;
 622:tmk_core/common/command.c ****             else
 623:tmk_core/common/command.c ****                 mk_interval = UINT8_MAX;
 624:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 625:tmk_core/common/command.c ****             break;
 626:tmk_core/common/command.c ****         case 3:
 627:tmk_core/common/command.c ****             if (mk_max_speed + inc < UINT8_MAX)
 628:tmk_core/common/command.c ****                 mk_max_speed += inc;
 629:tmk_core/common/command.c ****             else
 630:tmk_core/common/command.c ****                 mk_max_speed = UINT8_MAX;
 631:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 632:tmk_core/common/command.c ****             break;
 633:tmk_core/common/command.c ****         case 4:
 634:tmk_core/common/command.c ****             if (mk_time_to_max + inc < UINT8_MAX)
 635:tmk_core/common/command.c ****                 mk_time_to_max += inc;
 636:tmk_core/common/command.c ****             else
 637:tmk_core/common/command.c ****                 mk_time_to_max = UINT8_MAX;
 638:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 639:tmk_core/common/command.c ****             break;
 640:tmk_core/common/command.c ****         case 5:
 641:tmk_core/common/command.c ****             if (mk_wheel_max_speed + inc < UINT8_MAX)
 642:tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 643:tmk_core/common/command.c ****             else
 644:tmk_core/common/command.c ****                 mk_wheel_max_speed = UINT8_MAX;
 645:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 646:tmk_core/common/command.c ****             break;
 647:tmk_core/common/command.c ****         case 6:
 648:tmk_core/common/command.c ****             if (mk_wheel_time_to_max + inc < UINT8_MAX)
 649:tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 650:tmk_core/common/command.c ****             else
 651:tmk_core/common/command.c ****                 mk_wheel_time_to_max = UINT8_MAX;
 652:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 653:tmk_core/common/command.c ****             break;
 654:tmk_core/common/command.c ****     }
 655:tmk_core/common/command.c **** }
 656:tmk_core/common/command.c **** 
 657:tmk_core/common/command.c **** static void mousekey_param_dec(uint8_t param, uint8_t dec) {
 658:tmk_core/common/command.c ****     switch (param) {
 659:tmk_core/common/command.c ****         case 1:
 660:tmk_core/common/command.c ****             if (mk_delay > dec)
 661:tmk_core/common/command.c ****                 mk_delay -= dec;
 662:tmk_core/common/command.c ****             else
 663:tmk_core/common/command.c ****                 mk_delay = 0;
 664:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 665:tmk_core/common/command.c ****             break;
 666:tmk_core/common/command.c ****         case 2:
 667:tmk_core/common/command.c ****             if (mk_interval > dec)
 668:tmk_core/common/command.c ****                 mk_interval -= dec;
 669:tmk_core/common/command.c ****             else
 670:tmk_core/common/command.c ****                 mk_interval = 0;
 671:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 672:tmk_core/common/command.c ****             break;
 673:tmk_core/common/command.c ****         case 3:
 674:tmk_core/common/command.c ****             if (mk_max_speed > dec)
 675:tmk_core/common/command.c ****                 mk_max_speed -= dec;
 676:tmk_core/common/command.c ****             else
 677:tmk_core/common/command.c ****                 mk_max_speed = 0;
 678:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 679:tmk_core/common/command.c ****             break;
 680:tmk_core/common/command.c ****         case 4:
 681:tmk_core/common/command.c ****             if (mk_time_to_max > dec)
 682:tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 683:tmk_core/common/command.c ****             else
 684:tmk_core/common/command.c ****                 mk_time_to_max = 0;
 685:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 686:tmk_core/common/command.c ****             break;
 687:tmk_core/common/command.c ****         case 5:
 688:tmk_core/common/command.c ****             if (mk_wheel_max_speed > dec)
 689:tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 690:tmk_core/common/command.c ****             else
 691:tmk_core/common/command.c ****                 mk_wheel_max_speed = 0;
 692:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 693:tmk_core/common/command.c ****             break;
 694:tmk_core/common/command.c ****         case 6:
 695:tmk_core/common/command.c ****             if (mk_wheel_time_to_max > dec)
 696:tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 697:tmk_core/common/command.c ****             else
 698:tmk_core/common/command.c ****                 mk_wheel_time_to_max = 0;
 699:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 700:tmk_core/common/command.c ****             break;
 701:tmk_core/common/command.c ****     }
 702:tmk_core/common/command.c **** }
 703:tmk_core/common/command.c **** 
 704:tmk_core/common/command.c **** static void mousekey_console_help(void) {
  15               		.loc 1 704 41 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 705:tmk_core/common/command.c ****     print("\n\t- Mousekey -\n"
  21               		.loc 1 705 5 view .LVU1
  22               	.LBB17:
  23               		.loc 1 705 5 view .LVU2
  24               		.loc 1 705 5 view .LVU3
  25               	.LBE17:
  26 0000 80E0      		ldi r24,lo8(__c.3721)
  27 0002 90E0      		ldi r25,hi8(__c.3721)
  28 0004 0E94 0000 		call xputs
  29               	.LVL0:
 706:tmk_core/common/command.c ****           "ESC/q:	quit\n"
 707:tmk_core/common/command.c ****           "1:	delay(*10ms)\n"
 708:tmk_core/common/command.c ****           "2:	interval(ms)\n"
 709:tmk_core/common/command.c ****           "3:	max_speed\n"
 710:tmk_core/common/command.c ****           "4:	time_to_max\n"
 711:tmk_core/common/command.c ****           "5:	wheel_max_speed\n"
 712:tmk_core/common/command.c ****           "6:	wheel_time_to_max\n"
 713:tmk_core/common/command.c ****           "\n"
 714:tmk_core/common/command.c ****           "p:	print values\n"
 715:tmk_core/common/command.c ****           "d:	set defaults\n"
 716:tmk_core/common/command.c ****           "up:	+1\n"
 717:tmk_core/common/command.c ****           "down:	-1\n"
 718:tmk_core/common/command.c ****           "pgup:	+10\n"
 719:tmk_core/common/command.c ****           "pgdown:	-10\n"
 720:tmk_core/common/command.c ****           "\n"
 721:tmk_core/common/command.c ****           "speed = delta * max_speed * (repeat / time_to_max)\n");
 722:tmk_core/common/command.c ****     xprintf("where delta: cursor=%d, wheel=%d\n"
  30               		.loc 1 722 5 view .LVU4
  31               	.LBB18:
  32               		.loc 1 722 5 view .LVU5
  33               		.loc 1 722 5 view .LVU6
  34               	.LBE18:
  35 0008 1F92      		push __zero_reg__
  36               	.LCFI0:
  37               		.cfi_def_cfa_offset 3
  38 000a 81E0      		ldi r24,lo8(1)
  39 000c 8F93      		push r24
  40               	.LCFI1:
  41               		.cfi_def_cfa_offset 4
  42 000e 1F92      		push __zero_reg__
  43               	.LCFI2:
  44               		.cfi_def_cfa_offset 5
  45 0010 85E0      		ldi r24,lo8(5)
  46 0012 8F93      		push r24
  47               	.LCFI3:
  48               		.cfi_def_cfa_offset 6
  49 0014 80E0      		ldi r24,lo8(__c.3723)
  50 0016 90E0      		ldi r25,hi8(__c.3723)
  51 0018 9F93      		push r25
  52               	.LCFI4:
  53               		.cfi_def_cfa_offset 7
  54 001a 8F93      		push r24
  55               	.LCFI5:
  56               		.cfi_def_cfa_offset 8
  57 001c 0E94 0000 		call __xprintf
  58               	.LVL1:
 723:tmk_core/common/command.c ****             "See http://en.wikipedia.org/wiki/Mouse_keys\n",
 724:tmk_core/common/command.c ****             MOUSEKEY_MOVE_DELTA, MOUSEKEY_WHEEL_DELTA);
 725:tmk_core/common/command.c **** }
  59               		.loc 1 725 1 is_stmt 0 view .LVU7
  60 0020 0F90      		pop __tmp_reg__
  61 0022 0F90      		pop __tmp_reg__
  62 0024 0F90      		pop __tmp_reg__
  63 0026 0F90      		pop __tmp_reg__
  64 0028 0F90      		pop __tmp_reg__
  65 002a 0F90      		pop __tmp_reg__
  66               	.LCFI6:
  67               		.cfi_def_cfa_offset 2
  68               	/* epilogue start */
  69 002c 0895      		ret
  70               		.cfi_endproc
  71               	.LFE32:
  73               		.section	.text.mousekey_param_inc,"ax",@progbits
  75               	mousekey_param_inc:
  76               	.LVL2:
  77               	.LFB30:
 610:tmk_core/common/command.c ****     switch (param) {
  78               		.loc 1 610 60 is_stmt 1 view -0
  79               		.cfi_startproc
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
 611:tmk_core/common/command.c ****         case 1:
  84               		.loc 1 611 5 view .LVU9
  85 0000 8330      		cpi r24,lo8(3)
  86 0002 01F4      		brne .+2
  87 0004 00C0      		rjmp .L3
  88 0006 00F4      		brsh .L4
  89 0008 8130      		cpi r24,lo8(1)
  90 000a 01F0      		breq .L5
  91 000c 8230      		cpi r24,lo8(2)
  92 000e 01F0      		breq .L6
  93 0010 0895      		ret
  94               	.L4:
  95 0012 8530      		cpi r24,lo8(5)
  96 0014 01F4      		brne .+2
  97 0016 00C0      		rjmp .L8
  98 0018 00F4      		brsh .+2
  99 001a 00C0      		rjmp .L9
 100 001c 8630      		cpi r24,lo8(6)
 101 001e 01F4      		brne .+2
 102 0020 00C0      		rjmp .L10
 103 0022 0895      		ret
 104               	.L5:
 613:tmk_core/common/command.c ****                 mk_delay += inc;
 105               		.loc 1 613 13 view .LVU10
 613:tmk_core/common/command.c ****                 mk_delay += inc;
 106               		.loc 1 613 26 is_stmt 0 view .LVU11
 107 0024 8091 0000 		lds r24,mk_delay
 108               	.LVL3:
 613:tmk_core/common/command.c ****                 mk_delay += inc;
 109               		.loc 1 613 26 view .LVU12
 110 0028 482F      		mov r20,r24
 111 002a 460F      		add r20,r22
 112 002c 5527      		clr r21
 113 002e 551F      		rol r21
 613:tmk_core/common/command.c ****                 mk_delay += inc;
 114               		.loc 1 613 16 view .LVU13
 115 0030 4F3F      		cpi r20,-1
 116 0032 5105      		cpc r21,__zero_reg__
 117 0034 04F4      		brge .L11
 614:tmk_core/common/command.c ****             else
 118               		.loc 1 614 17 is_stmt 1 view .LVU14
 614:tmk_core/common/command.c ****             else
 119               		.loc 1 614 26 is_stmt 0 view .LVU15
 120 0036 680F      		add r22,r24
 121               	.LVL4:
 614:tmk_core/common/command.c ****             else
 122               		.loc 1 614 26 view .LVU16
 123 0038 6093 0000 		sts mk_delay,r22
 124               	.L12:
 617:tmk_core/common/command.c ****             break;
 125               		.loc 1 617 13 is_stmt 1 view .LVU17
 126               	.LBB19:
 617:tmk_core/common/command.c ****             break;
 127               		.loc 1 617 13 view .LVU18
 617:tmk_core/common/command.c ****             break;
 128               		.loc 1 617 13 view .LVU19
 129               	.LBE19:
 130 003c 8091 0000 		lds r24,mk_delay
 131 0040 1F92      		push __zero_reg__
 132               	.LCFI7:
 133               		.cfi_def_cfa_offset 3
 134 0042 8F93      		push r24
 135               	.LCFI8:
 136               		.cfi_def_cfa_offset 4
 137 0044 80E0      		ldi r24,lo8(__c.3677)
 138 0046 90E0      		ldi r25,hi8(__c.3677)
 139               	.L23:
 652:tmk_core/common/command.c ****             break;
 140               		.loc 1 652 13 is_stmt 0 view .LVU20
 141 0048 9F93      		push r25
 142               	.LCFI9:
 143               		.cfi_def_cfa_offset 5
 144 004a 8F93      		push r24
 145               	.LCFI10:
 146               		.cfi_def_cfa_offset 6
 147 004c 0E94 0000 		call __xprintf
 148               	.LVL5:
 653:tmk_core/common/command.c ****     }
 149               		.loc 1 653 13 is_stmt 1 view .LVU21
 150 0050 0F90      		pop __tmp_reg__
 151 0052 0F90      		pop __tmp_reg__
 152 0054 0F90      		pop __tmp_reg__
 153 0056 0F90      		pop __tmp_reg__
 154               	.LCFI11:
 155               		.cfi_def_cfa_offset 2
 156               	/* epilogue start */
 655:tmk_core/common/command.c **** 
 157               		.loc 1 655 1 is_stmt 0 view .LVU22
 158 0058 0895      		ret
 159               	.LVL6:
 160               	.L11:
 616:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 161               		.loc 1 616 17 is_stmt 1 view .LVU23
 616:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 162               		.loc 1 616 26 is_stmt 0 view .LVU24
 163 005a 8FEF      		ldi r24,lo8(-1)
 164 005c 8093 0000 		sts mk_delay,r24
 165 0060 00C0      		rjmp .L12
 166               	.LVL7:
 167               	.L6:
 620:tmk_core/common/command.c ****                 mk_interval += inc;
 168               		.loc 1 620 13 is_stmt 1 view .LVU25
 620:tmk_core/common/command.c ****                 mk_interval += inc;
 169               		.loc 1 620 29 is_stmt 0 view .LVU26
 170 0062 8091 0000 		lds r24,mk_interval
 171               	.LVL8:
 620:tmk_core/common/command.c ****                 mk_interval += inc;
 172               		.loc 1 620 29 view .LVU27
 173 0066 482F      		mov r20,r24
 174 0068 460F      		add r20,r22
 175 006a 5527      		clr r21
 176 006c 551F      		rol r21
 620:tmk_core/common/command.c ****                 mk_interval += inc;
 177               		.loc 1 620 16 view .LVU28
 178 006e 4F3F      		cpi r20,-1
 179 0070 5105      		cpc r21,__zero_reg__
 180 0072 04F4      		brge .L13
 621:tmk_core/common/command.c ****             else
 181               		.loc 1 621 17 is_stmt 1 view .LVU29
 621:tmk_core/common/command.c ****             else
 182               		.loc 1 621 29 is_stmt 0 view .LVU30
 183 0074 680F      		add r22,r24
 184               	.LVL9:
 621:tmk_core/common/command.c ****             else
 185               		.loc 1 621 29 view .LVU31
 186 0076 6093 0000 		sts mk_interval,r22
 187               	.L14:
 624:tmk_core/common/command.c ****             break;
 188               		.loc 1 624 13 is_stmt 1 view .LVU32
 189               	.LBB20:
 624:tmk_core/common/command.c ****             break;
 190               		.loc 1 624 13 view .LVU33
 624:tmk_core/common/command.c ****             break;
 191               		.loc 1 624 13 view .LVU34
 192               	.LBE20:
 193 007a 8091 0000 		lds r24,mk_interval
 194 007e 1F92      		push __zero_reg__
 195               	.LCFI12:
 196               		.cfi_remember_state
 197               		.cfi_def_cfa_offset 3
 198 0080 8F93      		push r24
 199               	.LCFI13:
 200               		.cfi_def_cfa_offset 4
 201 0082 80E0      		ldi r24,lo8(__c.3681)
 202 0084 90E0      		ldi r25,hi8(__c.3681)
 203 0086 00C0      		rjmp .L23
 204               	.LVL10:
 205               	.L13:
 206               	.LCFI14:
 207               		.cfi_restore_state
 623:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 208               		.loc 1 623 17 view .LVU35
 623:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 209               		.loc 1 623 29 is_stmt 0 view .LVU36
 210 0088 8FEF      		ldi r24,lo8(-1)
 211 008a 8093 0000 		sts mk_interval,r24
 212 008e 00C0      		rjmp .L14
 213               	.LVL11:
 214               	.L3:
 627:tmk_core/common/command.c ****                 mk_max_speed += inc;
 215               		.loc 1 627 13 is_stmt 1 view .LVU37
 627:tmk_core/common/command.c ****                 mk_max_speed += inc;
 216               		.loc 1 627 30 is_stmt 0 view .LVU38
 217 0090 8091 0000 		lds r24,mk_max_speed
 218               	.LVL12:
 627:tmk_core/common/command.c ****                 mk_max_speed += inc;
 219               		.loc 1 627 30 view .LVU39
 220 0094 482F      		mov r20,r24
 221 0096 460F      		add r20,r22
 222 0098 5527      		clr r21
 223 009a 551F      		rol r21
 627:tmk_core/common/command.c ****                 mk_max_speed += inc;
 224               		.loc 1 627 16 view .LVU40
 225 009c 4F3F      		cpi r20,-1
 226 009e 5105      		cpc r21,__zero_reg__
 227 00a0 04F4      		brge .L15
 628:tmk_core/common/command.c ****             else
 228               		.loc 1 628 17 is_stmt 1 view .LVU41
 628:tmk_core/common/command.c ****             else
 229               		.loc 1 628 30 is_stmt 0 view .LVU42
 230 00a2 680F      		add r22,r24
 231               	.LVL13:
 628:tmk_core/common/command.c ****             else
 232               		.loc 1 628 30 view .LVU43
 233 00a4 6093 0000 		sts mk_max_speed,r22
 234               	.L16:
 631:tmk_core/common/command.c ****             break;
 235               		.loc 1 631 13 is_stmt 1 view .LVU44
 236               	.LBB21:
 631:tmk_core/common/command.c ****             break;
 237               		.loc 1 631 13 view .LVU45
 631:tmk_core/common/command.c ****             break;
 238               		.loc 1 631 13 view .LVU46
 239               	.LBE21:
 240 00a8 8091 0000 		lds r24,mk_max_speed
 241 00ac 1F92      		push __zero_reg__
 242               	.LCFI15:
 243               		.cfi_remember_state
 244               		.cfi_def_cfa_offset 3
 245 00ae 8F93      		push r24
 246               	.LCFI16:
 247               		.cfi_def_cfa_offset 4
 248 00b0 80E0      		ldi r24,lo8(__c.3684)
 249 00b2 90E0      		ldi r25,hi8(__c.3684)
 250 00b4 00C0      		rjmp .L23
 251               	.LVL14:
 252               	.L15:
 253               	.LCFI17:
 254               		.cfi_restore_state
 630:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 255               		.loc 1 630 17 view .LVU47
 630:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 256               		.loc 1 630 30 is_stmt 0 view .LVU48
 257 00b6 8FEF      		ldi r24,lo8(-1)
 258 00b8 8093 0000 		sts mk_max_speed,r24
 259 00bc 00C0      		rjmp .L16
 260               	.LVL15:
 261               	.L9:
 634:tmk_core/common/command.c ****                 mk_time_to_max += inc;
 262               		.loc 1 634 13 is_stmt 1 view .LVU49
 634:tmk_core/common/command.c ****                 mk_time_to_max += inc;
 263               		.loc 1 634 32 is_stmt 0 view .LVU50
 264 00be 8091 0000 		lds r24,mk_time_to_max
 265               	.LVL16:
 634:tmk_core/common/command.c ****                 mk_time_to_max += inc;
 266               		.loc 1 634 32 view .LVU51
 267 00c2 482F      		mov r20,r24
 268 00c4 460F      		add r20,r22
 269 00c6 5527      		clr r21
 270 00c8 551F      		rol r21
 634:tmk_core/common/command.c ****                 mk_time_to_max += inc;
 271               		.loc 1 634 16 view .LVU52
 272 00ca 4F3F      		cpi r20,-1
 273 00cc 5105      		cpc r21,__zero_reg__
 274 00ce 04F4      		brge .L17
 635:tmk_core/common/command.c ****             else
 275               		.loc 1 635 17 is_stmt 1 view .LVU53
 635:tmk_core/common/command.c ****             else
 276               		.loc 1 635 32 is_stmt 0 view .LVU54
 277 00d0 680F      		add r22,r24
 278               	.LVL17:
 635:tmk_core/common/command.c ****             else
 279               		.loc 1 635 32 view .LVU55
 280 00d2 6093 0000 		sts mk_time_to_max,r22
 281               	.L18:
 638:tmk_core/common/command.c ****             break;
 282               		.loc 1 638 13 is_stmt 1 view .LVU56
 283               	.LBB22:
 638:tmk_core/common/command.c ****             break;
 284               		.loc 1 638 13 view .LVU57
 638:tmk_core/common/command.c ****             break;
 285               		.loc 1 638 13 view .LVU58
 286               	.LBE22:
 287 00d6 8091 0000 		lds r24,mk_time_to_max
 288 00da 1F92      		push __zero_reg__
 289               	.LCFI18:
 290               		.cfi_remember_state
 291               		.cfi_def_cfa_offset 3
 292 00dc 8F93      		push r24
 293               	.LCFI19:
 294               		.cfi_def_cfa_offset 4
 295 00de 80E0      		ldi r24,lo8(__c.3687)
 296 00e0 90E0      		ldi r25,hi8(__c.3687)
 297 00e2 00C0      		rjmp .L23
 298               	.LVL18:
 299               	.L17:
 300               	.LCFI20:
 301               		.cfi_restore_state
 637:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 302               		.loc 1 637 17 view .LVU59
 637:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 303               		.loc 1 637 32 is_stmt 0 view .LVU60
 304 00e4 8FEF      		ldi r24,lo8(-1)
 305 00e6 8093 0000 		sts mk_time_to_max,r24
 306 00ea 00C0      		rjmp .L18
 307               	.LVL19:
 308               	.L8:
 641:tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 309               		.loc 1 641 13 is_stmt 1 view .LVU61
 641:tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 310               		.loc 1 641 36 is_stmt 0 view .LVU62
 311 00ec 8091 0000 		lds r24,mk_wheel_max_speed
 312               	.LVL20:
 641:tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 313               		.loc 1 641 36 view .LVU63
 314 00f0 482F      		mov r20,r24
 315 00f2 460F      		add r20,r22
 316 00f4 5527      		clr r21
 317 00f6 551F      		rol r21
 641:tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 318               		.loc 1 641 16 view .LVU64
 319 00f8 4F3F      		cpi r20,-1
 320 00fa 5105      		cpc r21,__zero_reg__
 321 00fc 04F4      		brge .L19
 642:tmk_core/common/command.c ****             else
 322               		.loc 1 642 17 is_stmt 1 view .LVU65
 642:tmk_core/common/command.c ****             else
 323               		.loc 1 642 36 is_stmt 0 view .LVU66
 324 00fe 680F      		add r22,r24
 325               	.LVL21:
 642:tmk_core/common/command.c ****             else
 326               		.loc 1 642 36 view .LVU67
 327 0100 6093 0000 		sts mk_wheel_max_speed,r22
 328               	.L20:
 645:tmk_core/common/command.c ****             break;
 329               		.loc 1 645 13 is_stmt 1 view .LVU68
 330               	.LBB23:
 645:tmk_core/common/command.c ****             break;
 331               		.loc 1 645 13 view .LVU69
 645:tmk_core/common/command.c ****             break;
 332               		.loc 1 645 13 view .LVU70
 333               	.LBE23:
 334 0104 8091 0000 		lds r24,mk_wheel_max_speed
 335 0108 1F92      		push __zero_reg__
 336               	.LCFI21:
 337               		.cfi_remember_state
 338               		.cfi_def_cfa_offset 3
 339 010a 8F93      		push r24
 340               	.LCFI22:
 341               		.cfi_def_cfa_offset 4
 342 010c 80E0      		ldi r24,lo8(__c.3690)
 343 010e 90E0      		ldi r25,hi8(__c.3690)
 344 0110 00C0      		rjmp .L23
 345               	.LVL22:
 346               	.L19:
 347               	.LCFI23:
 348               		.cfi_restore_state
 644:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 349               		.loc 1 644 17 view .LVU71
 644:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 350               		.loc 1 644 36 is_stmt 0 view .LVU72
 351 0112 8FEF      		ldi r24,lo8(-1)
 352 0114 8093 0000 		sts mk_wheel_max_speed,r24
 353 0118 00C0      		rjmp .L20
 354               	.LVL23:
 355               	.L10:
 648:tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 356               		.loc 1 648 13 is_stmt 1 view .LVU73
 648:tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 357               		.loc 1 648 38 is_stmt 0 view .LVU74
 358 011a 8091 0000 		lds r24,mk_wheel_time_to_max
 359               	.LVL24:
 648:tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 360               		.loc 1 648 38 view .LVU75
 361 011e 482F      		mov r20,r24
 362 0120 460F      		add r20,r22
 363 0122 5527      		clr r21
 364 0124 551F      		rol r21
 648:tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 365               		.loc 1 648 16 view .LVU76
 366 0126 4F3F      		cpi r20,-1
 367 0128 5105      		cpc r21,__zero_reg__
 368 012a 04F4      		brge .L21
 649:tmk_core/common/command.c ****             else
 369               		.loc 1 649 17 is_stmt 1 view .LVU77
 649:tmk_core/common/command.c ****             else
 370               		.loc 1 649 38 is_stmt 0 view .LVU78
 371 012c 680F      		add r22,r24
 372               	.LVL25:
 649:tmk_core/common/command.c ****             else
 373               		.loc 1 649 38 view .LVU79
 374 012e 6093 0000 		sts mk_wheel_time_to_max,r22
 375               	.L22:
 652:tmk_core/common/command.c ****             break;
 376               		.loc 1 652 13 is_stmt 1 view .LVU80
 377               	.LBB24:
 652:tmk_core/common/command.c ****             break;
 378               		.loc 1 652 13 view .LVU81
 652:tmk_core/common/command.c ****             break;
 379               		.loc 1 652 13 view .LVU82
 380               	.LBE24:
 381 0132 8091 0000 		lds r24,mk_wheel_time_to_max
 382 0136 1F92      		push __zero_reg__
 383               	.LCFI24:
 384               		.cfi_remember_state
 385               		.cfi_def_cfa_offset 3
 386 0138 8F93      		push r24
 387               	.LCFI25:
 388               		.cfi_def_cfa_offset 4
 389 013a 80E0      		ldi r24,lo8(__c.3693)
 390 013c 90E0      		ldi r25,hi8(__c.3693)
 391 013e 00C0      		rjmp .L23
 392               	.LVL26:
 393               	.L21:
 394               	.LCFI26:
 395               		.cfi_restore_state
 651:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 396               		.loc 1 651 17 view .LVU83
 651:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 397               		.loc 1 651 38 is_stmt 0 view .LVU84
 398 0140 8FEF      		ldi r24,lo8(-1)
 399 0142 8093 0000 		sts mk_wheel_time_to_max,r24
 400 0146 00C0      		rjmp .L22
 401               		.cfi_endproc
 402               	.LFE30:
 404               		.section	.text.mousekey_param_dec,"ax",@progbits
 406               	mousekey_param_dec:
 407               	.LVL27:
 408               	.LFB31:
 657:tmk_core/common/command.c ****     switch (param) {
 409               		.loc 1 657 60 is_stmt 1 view -0
 410               		.cfi_startproc
 411               	/* prologue: function */
 412               	/* frame size = 0 */
 413               	/* stack size = 0 */
 414               	.L__stack_usage = 0
 658:tmk_core/common/command.c ****         case 1:
 415               		.loc 1 658 5 view .LVU86
 416 0000 8330      		cpi r24,lo8(3)
 417 0002 01F0      		breq .L25
 418 0004 00F4      		brsh .L26
 419 0006 8130      		cpi r24,lo8(1)
 420 0008 01F0      		breq .L27
 421 000a 8230      		cpi r24,lo8(2)
 422 000c 01F0      		breq .L28
 423 000e 0895      		ret
 424               	.L26:
 425 0010 8530      		cpi r24,lo8(5)
 426 0012 01F4      		brne .+2
 427 0014 00C0      		rjmp .L30
 428 0016 00F4      		brsh .+2
 429 0018 00C0      		rjmp .L31
 430 001a 8630      		cpi r24,lo8(6)
 431 001c 01F4      		brne .+2
 432 001e 00C0      		rjmp .L32
 433 0020 0895      		ret
 434               	.L27:
 660:tmk_core/common/command.c ****                 mk_delay -= dec;
 435               		.loc 1 660 13 view .LVU87
 660:tmk_core/common/command.c ****                 mk_delay -= dec;
 436               		.loc 1 660 26 is_stmt 0 view .LVU88
 437 0022 8091 0000 		lds r24,mk_delay
 438               	.LVL28:
 660:tmk_core/common/command.c ****                 mk_delay -= dec;
 439               		.loc 1 660 16 view .LVU89
 440 0026 6817      		cp r22,r24
 441 0028 00F4      		brsh .L33
 661:tmk_core/common/command.c ****             else
 442               		.loc 1 661 17 is_stmt 1 view .LVU90
 661:tmk_core/common/command.c ****             else
 443               		.loc 1 661 26 is_stmt 0 view .LVU91
 444 002a 861B      		sub r24,r22
 445 002c 8093 0000 		sts mk_delay,r24
 446               	.L34:
 664:tmk_core/common/command.c ****             break;
 447               		.loc 1 664 13 is_stmt 1 view .LVU92
 448               	.LBB25:
 664:tmk_core/common/command.c ****             break;
 449               		.loc 1 664 13 view .LVU93
 664:tmk_core/common/command.c ****             break;
 450               		.loc 1 664 13 view .LVU94
 451               	.LBE25:
 452 0030 8091 0000 		lds r24,mk_delay
 453 0034 1F92      		push __zero_reg__
 454               	.LCFI27:
 455               		.cfi_def_cfa_offset 3
 456 0036 8F93      		push r24
 457               	.LCFI28:
 458               		.cfi_def_cfa_offset 4
 459 0038 80E0      		ldi r24,lo8(__c.3700)
 460 003a 90E0      		ldi r25,hi8(__c.3700)
 461               	.L45:
 699:tmk_core/common/command.c ****             break;
 462               		.loc 1 699 13 is_stmt 0 view .LVU95
 463 003c 9F93      		push r25
 464               	.LCFI29:
 465               		.cfi_def_cfa_offset 5
 466 003e 8F93      		push r24
 467               	.LCFI30:
 468               		.cfi_def_cfa_offset 6
 469 0040 0E94 0000 		call __xprintf
 470               	.LVL29:
 700:tmk_core/common/command.c ****     }
 471               		.loc 1 700 13 is_stmt 1 view .LVU96
 472 0044 0F90      		pop __tmp_reg__
 473 0046 0F90      		pop __tmp_reg__
 474 0048 0F90      		pop __tmp_reg__
 475 004a 0F90      		pop __tmp_reg__
 476               	.LCFI31:
 477               		.cfi_def_cfa_offset 2
 478               	/* epilogue start */
 702:tmk_core/common/command.c **** 
 479               		.loc 1 702 1 is_stmt 0 view .LVU97
 480 004c 0895      		ret
 481               	.LVL30:
 482               	.L33:
 663:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 483               		.loc 1 663 17 is_stmt 1 view .LVU98
 663:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 484               		.loc 1 663 26 is_stmt 0 view .LVU99
 485 004e 1092 0000 		sts mk_delay,__zero_reg__
 486 0052 00C0      		rjmp .L34
 487               	.LVL31:
 488               	.L28:
 667:tmk_core/common/command.c ****                 mk_interval -= dec;
 489               		.loc 1 667 13 is_stmt 1 view .LVU100
 667:tmk_core/common/command.c ****                 mk_interval -= dec;
 490               		.loc 1 667 29 is_stmt 0 view .LVU101
 491 0054 8091 0000 		lds r24,mk_interval
 492               	.LVL32:
 667:tmk_core/common/command.c ****                 mk_interval -= dec;
 493               		.loc 1 667 16 view .LVU102
 494 0058 6817      		cp r22,r24
 495 005a 00F4      		brsh .L35
 668:tmk_core/common/command.c ****             else
 496               		.loc 1 668 17 is_stmt 1 view .LVU103
 668:tmk_core/common/command.c ****             else
 497               		.loc 1 668 29 is_stmt 0 view .LVU104
 498 005c 861B      		sub r24,r22
 499 005e 8093 0000 		sts mk_interval,r24
 500               	.L36:
 671:tmk_core/common/command.c ****             break;
 501               		.loc 1 671 13 is_stmt 1 view .LVU105
 502               	.LBB26:
 671:tmk_core/common/command.c ****             break;
 503               		.loc 1 671 13 view .LVU106
 671:tmk_core/common/command.c ****             break;
 504               		.loc 1 671 13 view .LVU107
 505               	.LBE26:
 506 0062 8091 0000 		lds r24,mk_interval
 507 0066 1F92      		push __zero_reg__
 508               	.LCFI32:
 509               		.cfi_remember_state
 510               		.cfi_def_cfa_offset 3
 511 0068 8F93      		push r24
 512               	.LCFI33:
 513               		.cfi_def_cfa_offset 4
 514 006a 80E0      		ldi r24,lo8(__c.3704)
 515 006c 90E0      		ldi r25,hi8(__c.3704)
 516 006e 00C0      		rjmp .L45
 517               	.L35:
 518               	.LCFI34:
 519               		.cfi_restore_state
 670:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 520               		.loc 1 670 17 view .LVU108
 670:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 521               		.loc 1 670 29 is_stmt 0 view .LVU109
 522 0070 1092 0000 		sts mk_interval,__zero_reg__
 523 0074 00C0      		rjmp .L36
 524               	.LVL33:
 525               	.L25:
 674:tmk_core/common/command.c ****                 mk_max_speed -= dec;
 526               		.loc 1 674 13 is_stmt 1 view .LVU110
 674:tmk_core/common/command.c ****                 mk_max_speed -= dec;
 527               		.loc 1 674 30 is_stmt 0 view .LVU111
 528 0076 8091 0000 		lds r24,mk_max_speed
 529               	.LVL34:
 674:tmk_core/common/command.c ****                 mk_max_speed -= dec;
 530               		.loc 1 674 16 view .LVU112
 531 007a 6817      		cp r22,r24
 532 007c 00F4      		brsh .L37
 675:tmk_core/common/command.c ****             else
 533               		.loc 1 675 17 is_stmt 1 view .LVU113
 675:tmk_core/common/command.c ****             else
 534               		.loc 1 675 30 is_stmt 0 view .LVU114
 535 007e 861B      		sub r24,r22
 536 0080 8093 0000 		sts mk_max_speed,r24
 537               	.L38:
 678:tmk_core/common/command.c ****             break;
 538               		.loc 1 678 13 is_stmt 1 view .LVU115
 539               	.LBB27:
 678:tmk_core/common/command.c ****             break;
 540               		.loc 1 678 13 view .LVU116
 678:tmk_core/common/command.c ****             break;
 541               		.loc 1 678 13 view .LVU117
 542               	.LBE27:
 543 0084 8091 0000 		lds r24,mk_max_speed
 544 0088 1F92      		push __zero_reg__
 545               	.LCFI35:
 546               		.cfi_remember_state
 547               		.cfi_def_cfa_offset 3
 548 008a 8F93      		push r24
 549               	.LCFI36:
 550               		.cfi_def_cfa_offset 4
 551 008c 80E0      		ldi r24,lo8(__c.3707)
 552 008e 90E0      		ldi r25,hi8(__c.3707)
 553 0090 00C0      		rjmp .L45
 554               	.L37:
 555               	.LCFI37:
 556               		.cfi_restore_state
 677:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 557               		.loc 1 677 17 view .LVU118
 677:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 558               		.loc 1 677 30 is_stmt 0 view .LVU119
 559 0092 1092 0000 		sts mk_max_speed,__zero_reg__
 560 0096 00C0      		rjmp .L38
 561               	.LVL35:
 562               	.L31:
 681:tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 563               		.loc 1 681 13 is_stmt 1 view .LVU120
 681:tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 564               		.loc 1 681 32 is_stmt 0 view .LVU121
 565 0098 8091 0000 		lds r24,mk_time_to_max
 566               	.LVL36:
 681:tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 567               		.loc 1 681 16 view .LVU122
 568 009c 6817      		cp r22,r24
 569 009e 00F4      		brsh .L39
 682:tmk_core/common/command.c ****             else
 570               		.loc 1 682 17 is_stmt 1 view .LVU123
 682:tmk_core/common/command.c ****             else
 571               		.loc 1 682 32 is_stmt 0 view .LVU124
 572 00a0 861B      		sub r24,r22
 573 00a2 8093 0000 		sts mk_time_to_max,r24
 574               	.L40:
 685:tmk_core/common/command.c ****             break;
 575               		.loc 1 685 13 is_stmt 1 view .LVU125
 576               	.LBB28:
 685:tmk_core/common/command.c ****             break;
 577               		.loc 1 685 13 view .LVU126
 685:tmk_core/common/command.c ****             break;
 578               		.loc 1 685 13 view .LVU127
 579               	.LBE28:
 580 00a6 8091 0000 		lds r24,mk_time_to_max
 581 00aa 1F92      		push __zero_reg__
 582               	.LCFI38:
 583               		.cfi_remember_state
 584               		.cfi_def_cfa_offset 3
 585 00ac 8F93      		push r24
 586               	.LCFI39:
 587               		.cfi_def_cfa_offset 4
 588 00ae 80E0      		ldi r24,lo8(__c.3710)
 589 00b0 90E0      		ldi r25,hi8(__c.3710)
 590 00b2 00C0      		rjmp .L45
 591               	.L39:
 592               	.LCFI40:
 593               		.cfi_restore_state
 684:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 594               		.loc 1 684 17 view .LVU128
 684:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 595               		.loc 1 684 32 is_stmt 0 view .LVU129
 596 00b4 1092 0000 		sts mk_time_to_max,__zero_reg__
 597 00b8 00C0      		rjmp .L40
 598               	.LVL37:
 599               	.L30:
 688:tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 600               		.loc 1 688 13 is_stmt 1 view .LVU130
 688:tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 601               		.loc 1 688 36 is_stmt 0 view .LVU131
 602 00ba 8091 0000 		lds r24,mk_wheel_max_speed
 603               	.LVL38:
 688:tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 604               		.loc 1 688 16 view .LVU132
 605 00be 6817      		cp r22,r24
 606 00c0 00F4      		brsh .L41
 689:tmk_core/common/command.c ****             else
 607               		.loc 1 689 17 is_stmt 1 view .LVU133
 689:tmk_core/common/command.c ****             else
 608               		.loc 1 689 36 is_stmt 0 view .LVU134
 609 00c2 861B      		sub r24,r22
 610 00c4 8093 0000 		sts mk_wheel_max_speed,r24
 611               	.L42:
 692:tmk_core/common/command.c ****             break;
 612               		.loc 1 692 13 is_stmt 1 view .LVU135
 613               	.LBB29:
 692:tmk_core/common/command.c ****             break;
 614               		.loc 1 692 13 view .LVU136
 692:tmk_core/common/command.c ****             break;
 615               		.loc 1 692 13 view .LVU137
 616               	.LBE29:
 617 00c8 8091 0000 		lds r24,mk_wheel_max_speed
 618 00cc 1F92      		push __zero_reg__
 619               	.LCFI41:
 620               		.cfi_remember_state
 621               		.cfi_def_cfa_offset 3
 622 00ce 8F93      		push r24
 623               	.LCFI42:
 624               		.cfi_def_cfa_offset 4
 625 00d0 80E0      		ldi r24,lo8(__c.3713)
 626 00d2 90E0      		ldi r25,hi8(__c.3713)
 627 00d4 00C0      		rjmp .L45
 628               	.L41:
 629               	.LCFI43:
 630               		.cfi_restore_state
 691:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 631               		.loc 1 691 17 view .LVU138
 691:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 632               		.loc 1 691 36 is_stmt 0 view .LVU139
 633 00d6 1092 0000 		sts mk_wheel_max_speed,__zero_reg__
 634 00da 00C0      		rjmp .L42
 635               	.LVL39:
 636               	.L32:
 695:tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 637               		.loc 1 695 13 is_stmt 1 view .LVU140
 695:tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 638               		.loc 1 695 38 is_stmt 0 view .LVU141
 639 00dc 8091 0000 		lds r24,mk_wheel_time_to_max
 640               	.LVL40:
 695:tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 641               		.loc 1 695 16 view .LVU142
 642 00e0 6817      		cp r22,r24
 643 00e2 00F4      		brsh .L43
 696:tmk_core/common/command.c ****             else
 644               		.loc 1 696 17 is_stmt 1 view .LVU143
 696:tmk_core/common/command.c ****             else
 645               		.loc 1 696 38 is_stmt 0 view .LVU144
 646 00e4 861B      		sub r24,r22
 647 00e6 8093 0000 		sts mk_wheel_time_to_max,r24
 648               	.L44:
 699:tmk_core/common/command.c ****             break;
 649               		.loc 1 699 13 is_stmt 1 view .LVU145
 650               	.LBB30:
 699:tmk_core/common/command.c ****             break;
 651               		.loc 1 699 13 view .LVU146
 699:tmk_core/common/command.c ****             break;
 652               		.loc 1 699 13 view .LVU147
 653               	.LBE30:
 654 00ea 8091 0000 		lds r24,mk_wheel_time_to_max
 655 00ee 1F92      		push __zero_reg__
 656               	.LCFI44:
 657               		.cfi_remember_state
 658               		.cfi_def_cfa_offset 3
 659 00f0 8F93      		push r24
 660               	.LCFI45:
 661               		.cfi_def_cfa_offset 4
 662 00f2 80E0      		ldi r24,lo8(__c.3716)
 663 00f4 90E0      		ldi r25,hi8(__c.3716)
 664 00f6 00C0      		rjmp .L45
 665               	.L43:
 666               	.LCFI46:
 667               		.cfi_restore_state
 698:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 668               		.loc 1 698 17 view .LVU148
 698:tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 669               		.loc 1 698 38 is_stmt 0 view .LVU149
 670 00f8 1092 0000 		sts mk_wheel_time_to_max,__zero_reg__
 671 00fc 00C0      		rjmp .L44
 672               		.cfi_endproc
 673               	.LFE31:
 675               		.section	.text.switch_default_layer,"ax",@progbits
 677               	switch_default_layer:
 678               	.LVL41:
 679               	.LFB35:
 726:tmk_core/common/command.c **** 
 727:tmk_core/common/command.c **** static bool mousekey_console(uint8_t code) {
 728:tmk_core/common/command.c ****     switch (code) {
 729:tmk_core/common/command.c ****         case KC_H:
 730:tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 731:tmk_core/common/command.c ****             mousekey_console_help();
 732:tmk_core/common/command.c ****             break;
 733:tmk_core/common/command.c ****         case KC_Q:
 734:tmk_core/common/command.c ****         case KC_ESC:
 735:tmk_core/common/command.c ****             if (mousekey_param) {
 736:tmk_core/common/command.c ****                 mousekey_param = 0;
 737:tmk_core/common/command.c ****             } else {
 738:tmk_core/common/command.c ****                 print("C> ");
 739:tmk_core/common/command.c ****                 command_state = CONSOLE;
 740:tmk_core/common/command.c ****                 return false;
 741:tmk_core/common/command.c ****             }
 742:tmk_core/common/command.c ****             break;
 743:tmk_core/common/command.c ****         case KC_P:
 744:tmk_core/common/command.c ****             mousekey_param_print();
 745:tmk_core/common/command.c ****             break;
 746:tmk_core/common/command.c ****         case KC_1:
 747:tmk_core/common/command.c ****         case KC_2:
 748:tmk_core/common/command.c ****         case KC_3:
 749:tmk_core/common/command.c ****         case KC_4:
 750:tmk_core/common/command.c ****         case KC_5:
 751:tmk_core/common/command.c ****         case KC_6:
 752:tmk_core/common/command.c ****             mousekey_param = numkey2num(code);
 753:tmk_core/common/command.c ****             break;
 754:tmk_core/common/command.c ****         case KC_UP:
 755:tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 1);
 756:tmk_core/common/command.c ****             break;
 757:tmk_core/common/command.c ****         case KC_DOWN:
 758:tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 1);
 759:tmk_core/common/command.c ****             break;
 760:tmk_core/common/command.c ****         case KC_PGUP:
 761:tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 10);
 762:tmk_core/common/command.c ****             break;
 763:tmk_core/common/command.c ****         case KC_PGDN:
 764:tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 10);
 765:tmk_core/common/command.c ****             break;
 766:tmk_core/common/command.c ****         case KC_D:
 767:tmk_core/common/command.c ****             mk_delay             = MOUSEKEY_DELAY / 10;
 768:tmk_core/common/command.c ****             mk_interval          = MOUSEKEY_INTERVAL;
 769:tmk_core/common/command.c ****             mk_max_speed         = MOUSEKEY_MAX_SPEED;
 770:tmk_core/common/command.c ****             mk_time_to_max       = MOUSEKEY_TIME_TO_MAX;
 771:tmk_core/common/command.c ****             mk_wheel_max_speed   = MOUSEKEY_WHEEL_MAX_SPEED;
 772:tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 773:tmk_core/common/command.c ****             print("set default\n");
 774:tmk_core/common/command.c ****             break;
 775:tmk_core/common/command.c ****         default:
 776:tmk_core/common/command.c ****             print("?");
 777:tmk_core/common/command.c ****             return false;
 778:tmk_core/common/command.c ****     }
 779:tmk_core/common/command.c ****     if (mousekey_param) {
 780:tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 781:tmk_core/common/command.c ****     } else {
 782:tmk_core/common/command.c ****         print("M>");
 783:tmk_core/common/command.c ****     }
 784:tmk_core/common/command.c ****     return true;
 785:tmk_core/common/command.c **** }
 786:tmk_core/common/command.c **** #endif
 787:tmk_core/common/command.c **** 
 788:tmk_core/common/command.c **** /***********************************************************
 789:tmk_core/common/command.c ****  * Utilities
 790:tmk_core/common/command.c ****  ***********************************************************/
 791:tmk_core/common/command.c **** uint8_t numkey2num(uint8_t code) {
 792:tmk_core/common/command.c ****     switch (code) {
 793:tmk_core/common/command.c ****         case KC_1:
 794:tmk_core/common/command.c ****             return 1;
 795:tmk_core/common/command.c ****         case KC_2:
 796:tmk_core/common/command.c ****             return 2;
 797:tmk_core/common/command.c ****         case KC_3:
 798:tmk_core/common/command.c ****             return 3;
 799:tmk_core/common/command.c ****         case KC_4:
 800:tmk_core/common/command.c ****             return 4;
 801:tmk_core/common/command.c ****         case KC_5:
 802:tmk_core/common/command.c ****             return 5;
 803:tmk_core/common/command.c ****         case KC_6:
 804:tmk_core/common/command.c ****             return 6;
 805:tmk_core/common/command.c ****         case KC_7:
 806:tmk_core/common/command.c ****             return 7;
 807:tmk_core/common/command.c ****         case KC_8:
 808:tmk_core/common/command.c ****             return 8;
 809:tmk_core/common/command.c ****         case KC_9:
 810:tmk_core/common/command.c ****             return 9;
 811:tmk_core/common/command.c ****         case KC_0:
 812:tmk_core/common/command.c ****             return 0;
 813:tmk_core/common/command.c ****     }
 814:tmk_core/common/command.c ****     return 0;
 815:tmk_core/common/command.c **** }
 816:tmk_core/common/command.c **** 
 817:tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer) {
 680               		.loc 1 817 49 is_stmt 1 view -0
 681               		.cfi_startproc
 682               		.loc 1 817 49 is_stmt 0 view .LVU151
 683 0000 CF93      		push r28
 684               	.LCFI47:
 685               		.cfi_def_cfa_offset 3
 686               		.cfi_offset 28, -2
 687               	/* prologue: function */
 688               	/* frame size = 0 */
 689               	/* stack size = 1 */
 690               	.L__stack_usage = 1
 691 0002 C82F      		mov r28,r24
 818:tmk_core/common/command.c ****     xprintf("L%d\n", layer);
 692               		.loc 1 818 5 is_stmt 1 view .LVU152
 693               	.LBB31:
 694               		.loc 1 818 5 view .LVU153
 695               		.loc 1 818 5 view .LVU154
 696               	.LBE31:
 697 0004 1F92      		push __zero_reg__
 698               	.LCFI48:
 699               		.cfi_def_cfa_offset 4
 700 0006 8F93      		push r24
 701               	.LCFI49:
 702               		.cfi_def_cfa_offset 5
 703 0008 80E0      		ldi r24,lo8(__c.3772)
 704 000a 90E0      		ldi r25,hi8(__c.3772)
 705               	.LVL42:
 706               		.loc 1 818 5 is_stmt 0 view .LVU155
 707 000c 9F93      		push r25
 708               	.LCFI50:
 709               		.cfi_def_cfa_offset 6
 710 000e 8F93      		push r24
 711               	.LCFI51:
 712               		.cfi_def_cfa_offset 7
 713 0010 0E94 0000 		call __xprintf
 714               	.LVL43:
 819:tmk_core/common/command.c ****     default_layer_set(1UL << layer);
 715               		.loc 1 819 5 is_stmt 1 view .LVU156
 716 0014 61E0      		ldi r22,lo8(1)
 717 0016 70E0      		ldi r23,0
 718 0018 80E0      		ldi r24,0
 719 001a 90E0      		ldi r25,0
 720 001c 00C0      		rjmp 2f
 721               		1:
 722 001e 660F      		lsl r22
 723 0020 771F      		rol r23
 724 0022 881F      		rol r24
 725 0024 991F      		rol r25
 726               		2:
 727 0026 CA95      		dec r28
 728 0028 02F4      		brpl 1b
 729 002a 0E94 0000 		call default_layer_set
 730               	.LVL44:
 820:tmk_core/common/command.c ****     clear_keyboard();
 731               		.loc 1 820 5 view .LVU157
 732 002e 0F90      		pop __tmp_reg__
 733 0030 0F90      		pop __tmp_reg__
 734 0032 0F90      		pop __tmp_reg__
 735 0034 0F90      		pop __tmp_reg__
 736               	.LCFI52:
 737               		.cfi_def_cfa_offset 3
 738               	/* epilogue start */
 821:tmk_core/common/command.c **** }
 739               		.loc 1 821 1 is_stmt 0 view .LVU158
 740 0036 CF91      		pop r28
 741               	.LVL45:
 820:tmk_core/common/command.c ****     clear_keyboard();
 742               		.loc 1 820 5 view .LVU159
 743 0038 0C94 0000 		jmp clear_keyboard
 744               	.LVL46:
 745               		.cfi_endproc
 746               	.LFE35:
 748               		.section	.text.command_common,"ax",@progbits
 750               	command_common:
 751               	.LFB26:
 319:tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 752               		.loc 1 319 42 is_stmt 1 view -0
 753               		.cfi_startproc
 754 0000 CF93      		push r28
 755               	.LCFI53:
 756               		.cfi_def_cfa_offset 3
 757               		.cfi_offset 28, -2
 758 0002 DF93      		push r29
 759               	.LCFI54:
 760               		.cfi_def_cfa_offset 4
 761               		.cfi_offset 29, -3
 762               	/* prologue: function */
 763               	/* frame size = 0 */
 764               	/* stack size = 2 */
 765               	.L__stack_usage = 2
 324:tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 766               		.loc 1 324 5 view .LVU161
 767 0004 8B31      		cpi r24,lo8(27)
 768 0006 01F4      		brne .+2
 769 0008 00C0      		rjmp .L48
 770 000a 00F0      		brlo .+2
 771 000c 00C0      		rjmp .L49
 772 000e 8B30      		cpi r24,lo8(11)
 773 0010 01F4      		brne .+2
 774 0012 00C0      		rjmp .L50
 775 0014 00F0      		brlo .+2
 776 0016 00C0      		rjmp .L51
 777 0018 8630      		cpi r24,lo8(6)
 778 001a 01F4      		brne .+2
 779 001c 00C0      		rjmp .L52
 780 001e 00F4      		brsh .L53
 781 0020 8530      		cpi r24,lo8(5)
 782 0022 01F4      		brne .+2
 783 0024 00C0      		rjmp .L54
 784               	.L55:
 534:tmk_core/common/command.c ****             return false;
 785               		.loc 1 534 13 view .LVU162
 786               	.LBB121:
 534:tmk_core/common/command.c ****             return false;
 787               		.loc 1 534 13 view .LVU163
 534:tmk_core/common/command.c ****             return false;
 788               		.loc 1 534 13 view .LVU164
 789               	.LBE121:
 790 0026 80E0      		ldi r24,lo8(__c.3607)
 791 0028 90E0      		ldi r25,hi8(__c.3607)
 792 002a 0E94 0000 		call xputs
 535:tmk_core/common/command.c ****     }
 793               		.loc 1 535 13 view .LVU165
 535:tmk_core/common/command.c ****     }
 794               		.loc 1 535 20 is_stmt 0 view .LVU166
 795 002e 80E0      		ldi r24,0
 796 0030 00C0      		rjmp .L47
 797               	.L53:
 324:tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 798               		.loc 1 324 5 view .LVU167
 799 0032 8730      		cpi r24,lo8(7)
 800 0034 01F4      		brne .+2
 801 0036 00C0      		rjmp .L56
 802 0038 8830      		cpi r24,lo8(8)
 803 003a 01F4      		brne .L55
 337:tmk_core/common/command.c ****             print_eeconfig();
 804               		.loc 1 337 13 is_stmt 1 view .LVU168
 805               	.LBB122:
 337:tmk_core/common/command.c ****             print_eeconfig();
 806               		.loc 1 337 13 view .LVU169
 337:tmk_core/common/command.c ****             print_eeconfig();
 807               		.loc 1 337 13 view .LVU170
 808               	.LBE122:
 809 003c 80E0      		ldi r24,lo8(__c.3564)
 810 003e 90E0      		ldi r25,hi8(__c.3564)
 811 0040 0E94 0000 		call xputs
 338:tmk_core/common/command.c ****             break;
 812               		.loc 1 338 13 view .LVU171
 813               	.LBB123:
 814               	.LBI123:
 240:tmk_core/common/command.c **** // Print these variables if NO_PRINT or USER_PRINT are not defined.
 815               		.loc 1 240 13 view .LVU172
 816               	.LBB124:
 244:tmk_core/common/command.c ****     print_dec(eeconfig_read_default_layer());
 817               		.loc 1 244 5 view .LVU173
 818               	.LBE124:
 819               	.LBE123:
 244:tmk_core/common/command.c ****     print_dec(eeconfig_read_default_layer());
 820               		.loc 1 244 5 view .LVU174
 244:tmk_core/common/command.c ****     print_dec(eeconfig_read_default_layer());
 821               		.loc 1 244 5 view .LVU175
 822               	.LBB176:
 823               	.LBB125:
 824 0044 80E0      		ldi r24,lo8(__c.3456)
 825 0046 90E0      		ldi r25,hi8(__c.3456)
 826 0048 0E94 0000 		call xputs
 245:tmk_core/common/command.c ****     print("\n");
 827               		.loc 1 245 5 view .LVU176
 828 004c 0E94 0000 		call eeconfig_read_default_layer
 829               	.LBE125:
 830               	.LBE176:
 245:tmk_core/common/command.c ****     print("\n");
 831               		.loc 1 245 5 view .LVU177
 245:tmk_core/common/command.c ****     print("\n");
 832               		.loc 1 245 5 view .LVU178
 833               	.LBB177:
 834               	.LBB126:
 835 0050 1F92      		push __zero_reg__
 836               	.LCFI55:
 837               		.cfi_def_cfa_offset 5
 838 0052 8F93      		push r24
 839               	.LCFI56:
 840               		.cfi_def_cfa_offset 6
 841 0054 80E0      		ldi r24,lo8(__c.3458)
 842 0056 90E0      		ldi r25,hi8(__c.3458)
 843 0058 9F93      		push r25
 844               	.LCFI57:
 845               		.cfi_def_cfa_offset 7
 846 005a 8F93      		push r24
 847               	.LCFI58:
 848               		.cfi_def_cfa_offset 8
 849 005c 0E94 0000 		call __xprintf
 246:tmk_core/common/command.c **** 
 850               		.loc 1 246 5 view .LVU179
 851               	.LBE126:
 852               	.LBE177:
 246:tmk_core/common/command.c **** 
 853               		.loc 1 246 5 view .LVU180
 246:tmk_core/common/command.c **** 
 854               		.loc 1 246 5 view .LVU181
 855               	.LBB178:
 856               	.LBB127:
 857 0060 80E0      		ldi r24,lo8(__c.3460)
 858 0062 90E0      		ldi r25,hi8(__c.3460)
 859 0064 0E94 0000 		call xputs
 248:tmk_core/common/command.c ****     dc.raw = eeconfig_read_debug();
 860               		.loc 1 248 5 view .LVU182
 249:tmk_core/common/command.c ****     print("debug_config.raw: ");
 861               		.loc 1 249 5 view .LVU183
 249:tmk_core/common/command.c ****     print("debug_config.raw: ");
 862               		.loc 1 249 14 is_stmt 0 view .LVU184
 863 0068 0E94 0000 		call eeconfig_read_debug
 864 006c C82F      		mov r28,r24
 250:tmk_core/common/command.c ****     print_hex8(dc.raw);
 865               		.loc 1 250 5 is_stmt 1 view .LVU185
 866               	.LBE127:
 867               	.LBE178:
 250:tmk_core/common/command.c ****     print_hex8(dc.raw);
 868               		.loc 1 250 5 view .LVU186
 250:tmk_core/common/command.c ****     print_hex8(dc.raw);
 869               		.loc 1 250 5 view .LVU187
 870               	.LBB179:
 871               	.LBB128:
 872 006e 80E0      		ldi r24,lo8(__c.3463)
 873 0070 90E0      		ldi r25,hi8(__c.3463)
 874 0072 0E94 0000 		call xputs
 251:tmk_core/common/command.c ****     print("\n");
 875               		.loc 1 251 5 view .LVU188
 876               	.LBE128:
 877               	.LBE179:
 251:tmk_core/common/command.c ****     print("\n");
 878               		.loc 1 251 5 view .LVU189
 251:tmk_core/common/command.c ****     print("\n");
 879               		.loc 1 251 5 view .LVU190
 880               	.LBB180:
 881               	.LBB129:
 882 0076 1F92      		push __zero_reg__
 883               	.LCFI59:
 884               		.cfi_def_cfa_offset 9
 885 0078 CF93      		push r28
 886               	.LCFI60:
 887               		.cfi_def_cfa_offset 10
 888 007a 80E0      		ldi r24,lo8(__c.3465)
 889 007c 90E0      		ldi r25,hi8(__c.3465)
 890 007e 9F93      		push r25
 891               	.LCFI61:
 892               		.cfi_def_cfa_offset 11
 893 0080 8F93      		push r24
 894               	.LCFI62:
 895               		.cfi_def_cfa_offset 12
 896 0082 0E94 0000 		call __xprintf
 252:tmk_core/common/command.c ****     print(".enable: ");
 897               		.loc 1 252 5 view .LVU191
 898               	.LBE129:
 899               	.LBE180:
 252:tmk_core/common/command.c ****     print(".enable: ");
 900               		.loc 1 252 5 view .LVU192
 252:tmk_core/common/command.c ****     print(".enable: ");
 901               		.loc 1 252 5 view .LVU193
 902               	.LBB181:
 903               	.LBB130:
 904 0086 80E0      		ldi r24,lo8(__c.3467)
 905 0088 90E0      		ldi r25,hi8(__c.3467)
 906 008a 0E94 0000 		call xputs
 253:tmk_core/common/command.c ****     print_dec(dc.enable);
 907               		.loc 1 253 5 view .LVU194
 908               	.LBE130:
 909               	.LBE181:
 253:tmk_core/common/command.c ****     print_dec(dc.enable);
 910               		.loc 1 253 5 view .LVU195
 253:tmk_core/common/command.c ****     print_dec(dc.enable);
 911               		.loc 1 253 5 view .LVU196
 912               	.LBB182:
 913               	.LBB131:
 914 008e 80E0      		ldi r24,lo8(__c.3469)
 915 0090 90E0      		ldi r25,hi8(__c.3469)
 916 0092 0E94 0000 		call xputs
 254:tmk_core/common/command.c ****     print("\n");
 917               		.loc 1 254 5 view .LVU197
 918               	.LBE131:
 919               	.LBE182:
 254:tmk_core/common/command.c ****     print("\n");
 920               		.loc 1 254 5 view .LVU198
 254:tmk_core/common/command.c ****     print("\n");
 921               		.loc 1 254 5 view .LVU199
 922               	.LBB183:
 923               	.LBB132:
 924 0096 8C2F      		mov r24,r28
 925 0098 8170      		andi r24,1
 926 009a 1F92      		push __zero_reg__
 927               	.LCFI63:
 928               		.cfi_def_cfa_offset 13
 929 009c 8F93      		push r24
 930               	.LCFI64:
 931               		.cfi_def_cfa_offset 14
 932 009e 80E0      		ldi r24,lo8(__c.3471)
 933 00a0 90E0      		ldi r25,hi8(__c.3471)
 934 00a2 9F93      		push r25
 935               	.LCFI65:
 936               		.cfi_def_cfa_offset 15
 937 00a4 8F93      		push r24
 938               	.LCFI66:
 939               		.cfi_def_cfa_offset 16
 940 00a6 0E94 0000 		call __xprintf
 255:tmk_core/common/command.c ****     print(".matrix: ");
 941               		.loc 1 255 5 view .LVU200
 942               	.LBE132:
 943               	.LBE183:
 255:tmk_core/common/command.c ****     print(".matrix: ");
 944               		.loc 1 255 5 view .LVU201
 255:tmk_core/common/command.c ****     print(".matrix: ");
 945               		.loc 1 255 5 view .LVU202
 946               	.LBB184:
 947               	.LBB133:
 948 00aa 80E0      		ldi r24,lo8(__c.3473)
 949 00ac 90E0      		ldi r25,hi8(__c.3473)
 950 00ae 0E94 0000 		call xputs
 256:tmk_core/common/command.c ****     print_dec(dc.matrix);
 951               		.loc 1 256 5 view .LVU203
 952               	.LBE133:
 953               	.LBE184:
 256:tmk_core/common/command.c ****     print_dec(dc.matrix);
 954               		.loc 1 256 5 view .LVU204
 256:tmk_core/common/command.c ****     print_dec(dc.matrix);
 955               		.loc 1 256 5 view .LVU205
 956               	.LBB185:
 957               	.LBB134:
 958 00b2 80E0      		ldi r24,lo8(__c.3475)
 959 00b4 90E0      		ldi r25,hi8(__c.3475)
 960 00b6 0E94 0000 		call xputs
 257:tmk_core/common/command.c ****     print("\n");
 961               		.loc 1 257 5 view .LVU206
 962               	.LBE134:
 963               	.LBE185:
 257:tmk_core/common/command.c ****     print("\n");
 964               		.loc 1 257 5 view .LVU207
 257:tmk_core/common/command.c ****     print("\n");
 965               		.loc 1 257 5 view .LVU208
 966               	.LBB186:
 967               	.LBB135:
 968 00ba C1FB      		bst r28,1
 969 00bc 8827      		clr r24
 970 00be 80F9      		bld r24,0
 971 00c0 1F92      		push __zero_reg__
 972               	.LCFI67:
 973               		.cfi_def_cfa_offset 17
 974 00c2 8F93      		push r24
 975               	.LCFI68:
 976               		.cfi_def_cfa_offset 18
 977 00c4 80E0      		ldi r24,lo8(__c.3477)
 978 00c6 90E0      		ldi r25,hi8(__c.3477)
 979 00c8 9F93      		push r25
 980               	.LCFI69:
 981               		.cfi_def_cfa_offset 19
 982 00ca 8F93      		push r24
 983               	.LCFI70:
 984               		.cfi_def_cfa_offset 20
 985 00cc 0E94 0000 		call __xprintf
 258:tmk_core/common/command.c ****     print(".keyboard: ");
 986               		.loc 1 258 5 view .LVU209
 987               	.LBE135:
 988               	.LBE186:
 258:tmk_core/common/command.c ****     print(".keyboard: ");
 989               		.loc 1 258 5 view .LVU210
 258:tmk_core/common/command.c ****     print(".keyboard: ");
 990               		.loc 1 258 5 view .LVU211
 991               	.LBB187:
 992               	.LBB136:
 993 00d0 80E0      		ldi r24,lo8(__c.3479)
 994 00d2 90E0      		ldi r25,hi8(__c.3479)
 995 00d4 0E94 0000 		call xputs
 259:tmk_core/common/command.c ****     print_dec(dc.keyboard);
 996               		.loc 1 259 5 view .LVU212
 997               	.LBE136:
 998               	.LBE187:
 259:tmk_core/common/command.c ****     print_dec(dc.keyboard);
 999               		.loc 1 259 5 view .LVU213
 259:tmk_core/common/command.c ****     print_dec(dc.keyboard);
 1000               		.loc 1 259 5 view .LVU214
 1001               	.LBB188:
 1002               	.LBB137:
 1003 00d8 80E0      		ldi r24,lo8(__c.3481)
 1004 00da 90E0      		ldi r25,hi8(__c.3481)
 1005 00dc 0E94 0000 		call xputs
 260:tmk_core/common/command.c ****     print("\n");
 1006               		.loc 1 260 5 view .LVU215
 1007               	.LBE137:
 1008               	.LBE188:
 260:tmk_core/common/command.c ****     print("\n");
 1009               		.loc 1 260 5 view .LVU216
 260:tmk_core/common/command.c ****     print("\n");
 1010               		.loc 1 260 5 view .LVU217
 1011               	.LBB189:
 1012               	.LBB138:
 1013 00e0 C2FB      		bst r28,2
 1014 00e2 8827      		clr r24
 1015 00e4 80F9      		bld r24,0
 1016 00e6 1F92      		push __zero_reg__
 1017               	.LCFI71:
 1018               		.cfi_def_cfa_offset 21
 1019 00e8 8F93      		push r24
 1020               	.LCFI72:
 1021               		.cfi_def_cfa_offset 22
 1022 00ea 80E0      		ldi r24,lo8(__c.3483)
 1023 00ec 90E0      		ldi r25,hi8(__c.3483)
 1024 00ee 9F93      		push r25
 1025               	.LCFI73:
 1026               		.cfi_def_cfa_offset 23
 1027 00f0 8F93      		push r24
 1028               	.LCFI74:
 1029               		.cfi_def_cfa_offset 24
 1030 00f2 0E94 0000 		call __xprintf
 261:tmk_core/common/command.c ****     print(".mouse: ");
 1031               		.loc 1 261 5 view .LVU218
 1032               	.LBE138:
 1033               	.LBE189:
 261:tmk_core/common/command.c ****     print(".mouse: ");
 1034               		.loc 1 261 5 view .LVU219
 261:tmk_core/common/command.c ****     print(".mouse: ");
 1035               		.loc 1 261 5 view .LVU220
 1036               	.LBB190:
 1037               	.LBB139:
 1038 00f6 80E0      		ldi r24,lo8(__c.3485)
 1039 00f8 90E0      		ldi r25,hi8(__c.3485)
 1040 00fa 0E94 0000 		call xputs
 262:tmk_core/common/command.c ****     print_dec(dc.mouse);
 1041               		.loc 1 262 5 view .LVU221
 1042               	.LBE139:
 1043               	.LBE190:
 262:tmk_core/common/command.c ****     print_dec(dc.mouse);
 1044               		.loc 1 262 5 view .LVU222
 262:tmk_core/common/command.c ****     print_dec(dc.mouse);
 1045               		.loc 1 262 5 view .LVU223
 1046               	.LBB191:
 1047               	.LBB140:
 1048 00fe 80E0      		ldi r24,lo8(__c.3487)
 1049 0100 90E0      		ldi r25,hi8(__c.3487)
 1050 0102 0E94 0000 		call xputs
 263:tmk_core/common/command.c ****     print("\n");
 1051               		.loc 1 263 5 view .LVU224
 1052               	.LBE140:
 1053               	.LBE191:
 263:tmk_core/common/command.c ****     print("\n");
 1054               		.loc 1 263 5 view .LVU225
 263:tmk_core/common/command.c ****     print("\n");
 1055               		.loc 1 263 5 view .LVU226
 1056               	.LBB192:
 1057               	.LBB141:
 1058 0106 C3FB      		bst r28,3
 1059 0108 CC27      		clr r28
 1060 010a C0F9      		bld r28,0
 1061 010c 1F92      		push __zero_reg__
 1062               	.LCFI75:
 1063               		.cfi_def_cfa_offset 25
 1064 010e CF93      		push r28
 1065               	.LCFI76:
 1066               		.cfi_def_cfa_offset 26
 1067 0110 80E0      		ldi r24,lo8(__c.3489)
 1068 0112 90E0      		ldi r25,hi8(__c.3489)
 1069 0114 9F93      		push r25
 1070               	.LCFI77:
 1071               		.cfi_def_cfa_offset 27
 1072 0116 8F93      		push r24
 1073               	.LCFI78:
 1074               		.cfi_def_cfa_offset 28
 1075 0118 0E94 0000 		call __xprintf
 264:tmk_core/common/command.c **** 
 1076               		.loc 1 264 5 view .LVU227
 1077               	.LBE141:
 1078               	.LBE192:
 264:tmk_core/common/command.c **** 
 1079               		.loc 1 264 5 view .LVU228
 264:tmk_core/common/command.c **** 
 1080               		.loc 1 264 5 view .LVU229
 1081               	.LBB193:
 1082               	.LBB142:
 1083 011c 80E0      		ldi r24,lo8(__c.3491)
 1084 011e 90E0      		ldi r25,hi8(__c.3491)
 1085 0120 0E94 0000 		call xputs
 266:tmk_core/common/command.c ****     kc.raw = eeconfig_read_keymap();
 1086               		.loc 1 266 5 view .LVU230
 267:tmk_core/common/command.c ****     print("keymap_config.raw: ");
 1087               		.loc 1 267 5 view .LVU231
 267:tmk_core/common/command.c ****     print("keymap_config.raw: ");
 1088               		.loc 1 267 14 is_stmt 0 view .LVU232
 1089 0124 0E94 0000 		call eeconfig_read_keymap
 1090 0128 EC01      		movw r28,r24
 268:tmk_core/common/command.c ****     print_hex8(kc.raw);
 1091               		.loc 1 268 5 is_stmt 1 view .LVU233
 1092               	.LBE142:
 1093               	.LBE193:
 268:tmk_core/common/command.c ****     print_hex8(kc.raw);
 1094               		.loc 1 268 5 view .LVU234
 268:tmk_core/common/command.c ****     print_hex8(kc.raw);
 1095               		.loc 1 268 5 view .LVU235
 1096               	.LBB194:
 1097               	.LBB143:
 1098 012a 80E0      		ldi r24,lo8(__c.3494)
 1099 012c 90E0      		ldi r25,hi8(__c.3494)
 1100 012e 0E94 0000 		call xputs
 269:tmk_core/common/command.c ****     print("\n");
 1101               		.loc 1 269 5 view .LVU236
 1102               	.LBE143:
 1103               	.LBE194:
 269:tmk_core/common/command.c ****     print("\n");
 1104               		.loc 1 269 5 view .LVU237
 269:tmk_core/common/command.c ****     print("\n");
 1105               		.loc 1 269 5 view .LVU238
 1106               	.LBB195:
 1107               	.LBB144:
 1108 0132 DF93      		push r29
 1109               	.LCFI79:
 1110               		.cfi_def_cfa_offset 29
 1111 0134 CF93      		push r28
 1112               	.LCFI80:
 1113               		.cfi_def_cfa_offset 30
 1114 0136 80E0      		ldi r24,lo8(__c.3496)
 1115 0138 90E0      		ldi r25,hi8(__c.3496)
 1116 013a 9F93      		push r25
 1117               	.LCFI81:
 1118               		.cfi_def_cfa_offset 31
 1119 013c 8F93      		push r24
 1120               	.LCFI82:
 1121               		.cfi_def_cfa_offset 32
 1122 013e 0E94 0000 		call __xprintf
 270:tmk_core/common/command.c ****     print(".swap_control_capslock: ");
 1123               		.loc 1 270 5 view .LVU239
 1124               	.LBE144:
 1125               	.LBE195:
 270:tmk_core/common/command.c ****     print(".swap_control_capslock: ");
 1126               		.loc 1 270 5 view .LVU240
 270:tmk_core/common/command.c ****     print(".swap_control_capslock: ");
 1127               		.loc 1 270 5 view .LVU241
 1128               	.LBB196:
 1129               	.LBB145:
 1130 0142 80E0      		ldi r24,lo8(__c.3498)
 1131 0144 90E0      		ldi r25,hi8(__c.3498)
 1132 0146 0E94 0000 		call xputs
 271:tmk_core/common/command.c ****     print_dec(kc.swap_control_capslock);
 1133               		.loc 1 271 5 view .LVU242
 1134               	.LBE145:
 1135               	.LBE196:
 271:tmk_core/common/command.c ****     print_dec(kc.swap_control_capslock);
 1136               		.loc 1 271 5 view .LVU243
 271:tmk_core/common/command.c ****     print_dec(kc.swap_control_capslock);
 1137               		.loc 1 271 5 view .LVU244
 1138               	.LBB197:
 1139               	.LBB146:
 1140 014a 80E0      		ldi r24,lo8(__c.3500)
 1141 014c 90E0      		ldi r25,hi8(__c.3500)
 1142 014e 0E94 0000 		call xputs
 272:tmk_core/common/command.c ****     print("\n");
 1143               		.loc 1 272 5 view .LVU245
 1144               	.LBE146:
 1145               	.LBE197:
 272:tmk_core/common/command.c ****     print("\n");
 1146               		.loc 1 272 5 view .LVU246
 272:tmk_core/common/command.c ****     print("\n");
 1147               		.loc 1 272 5 view .LVU247
 1148               	.LBB198:
 1149               	.LBB147:
 1150 0152 8C2F      		mov r24,r28
 1151 0154 8170      		andi r24,1
 1152 0156 1F92      		push __zero_reg__
 1153               	.LCFI83:
 1154               		.cfi_def_cfa_offset 33
 1155 0158 8F93      		push r24
 1156               	.LCFI84:
 1157               		.cfi_def_cfa_offset 34
 1158 015a 80E0      		ldi r24,lo8(__c.3502)
 1159 015c 90E0      		ldi r25,hi8(__c.3502)
 1160 015e 9F93      		push r25
 1161               	.LCFI85:
 1162               		.cfi_def_cfa_offset 35
 1163 0160 8F93      		push r24
 1164               	.LCFI86:
 1165               		.cfi_def_cfa_offset 36
 1166 0162 0E94 0000 		call __xprintf
 273:tmk_core/common/command.c ****     print(".capslock_to_control: ");
 1167               		.loc 1 273 5 view .LVU248
 1168               	.LBE147:
 1169               	.LBE198:
 273:tmk_core/common/command.c ****     print(".capslock_to_control: ");
 1170               		.loc 1 273 5 view .LVU249
 273:tmk_core/common/command.c ****     print(".capslock_to_control: ");
 1171               		.loc 1 273 5 view .LVU250
 1172               	.LBB199:
 1173               	.LBB148:
 1174 0166 8DB7      		in r24,__SP_L__
 1175 0168 9EB7      		in r25,__SP_H__
 1176 016a 8096      		adiw r24,32
 1177 016c 0FB6      		in __tmp_reg__,__SREG__
 1178 016e F894      		cli
 1179 0170 9EBF      		out __SP_H__,r25
 1180 0172 0FBE      		out __SREG__,__tmp_reg__
 1181 0174 8DBF      		out __SP_L__,r24
 1182               	.LCFI87:
 1183               		.cfi_def_cfa_offset 4
 1184 0176 80E0      		ldi r24,lo8(__c.3504)
 1185 0178 90E0      		ldi r25,hi8(__c.3504)
 1186 017a 0E94 0000 		call xputs
 274:tmk_core/common/command.c ****     print_dec(kc.capslock_to_control);
 1187               		.loc 1 274 5 view .LVU251
 1188               	.LBE148:
 1189               	.LBE199:
 274:tmk_core/common/command.c ****     print_dec(kc.capslock_to_control);
 1190               		.loc 1 274 5 view .LVU252
 274:tmk_core/common/command.c ****     print_dec(kc.capslock_to_control);
 1191               		.loc 1 274 5 view .LVU253
 1192               	.LBB200:
 1193               	.LBB149:
 1194 017e 80E0      		ldi r24,lo8(__c.3506)
 1195 0180 90E0      		ldi r25,hi8(__c.3506)
 1196 0182 0E94 0000 		call xputs
 275:tmk_core/common/command.c ****     print("\n");
 1197               		.loc 1 275 5 view .LVU254
 1198               	.LBE149:
 1199               	.LBE200:
 275:tmk_core/common/command.c ****     print("\n");
 1200               		.loc 1 275 5 view .LVU255
 275:tmk_core/common/command.c ****     print("\n");
 1201               		.loc 1 275 5 view .LVU256
 1202               	.LBB201:
 1203               	.LBB150:
 1204 0186 C1FB      		bst r28,1
 1205 0188 8827      		clr r24
 1206 018a 80F9      		bld r24,0
 1207 018c 1F92      		push __zero_reg__
 1208               	.LCFI88:
 1209               		.cfi_def_cfa_offset 5
 1210 018e 8F93      		push r24
 1211               	.LCFI89:
 1212               		.cfi_def_cfa_offset 6
 1213 0190 80E0      		ldi r24,lo8(__c.3508)
 1214 0192 90E0      		ldi r25,hi8(__c.3508)
 1215 0194 9F93      		push r25
 1216               	.LCFI90:
 1217               		.cfi_def_cfa_offset 7
 1218 0196 8F93      		push r24
 1219               	.LCFI91:
 1220               		.cfi_def_cfa_offset 8
 1221 0198 0E94 0000 		call __xprintf
 276:tmk_core/common/command.c ****     print(".swap_lctl_lgui: ");
 1222               		.loc 1 276 5 view .LVU257
 1223               	.LBE150:
 1224               	.LBE201:
 276:tmk_core/common/command.c ****     print(".swap_lctl_lgui: ");
 1225               		.loc 1 276 5 view .LVU258
 276:tmk_core/common/command.c ****     print(".swap_lctl_lgui: ");
 1226               		.loc 1 276 5 view .LVU259
 1227               	.LBB202:
 1228               	.LBB151:
 1229 019c 80E0      		ldi r24,lo8(__c.3510)
 1230 019e 90E0      		ldi r25,hi8(__c.3510)
 1231 01a0 0E94 0000 		call xputs
 277:tmk_core/common/command.c ****     print_dec(kc.swap_lctl_lgui);
 1232               		.loc 1 277 5 view .LVU260
 1233               	.LBE151:
 1234               	.LBE202:
 277:tmk_core/common/command.c ****     print_dec(kc.swap_lctl_lgui);
 1235               		.loc 1 277 5 view .LVU261
 277:tmk_core/common/command.c ****     print_dec(kc.swap_lctl_lgui);
 1236               		.loc 1 277 5 view .LVU262
 1237               	.LBB203:
 1238               	.LBB152:
 1239 01a4 80E0      		ldi r24,lo8(__c.3512)
 1240 01a6 90E0      		ldi r25,hi8(__c.3512)
 1241 01a8 0E94 0000 		call xputs
 278:tmk_core/common/command.c ****     print("\n");
 1242               		.loc 1 278 5 view .LVU263
 1243               	.LBE152:
 1244               	.LBE203:
 278:tmk_core/common/command.c ****     print("\n");
 1245               		.loc 1 278 5 view .LVU264
 278:tmk_core/common/command.c ****     print("\n");
 1246               		.loc 1 278 5 view .LVU265
 1247               	.LBB204:
 1248               	.LBB153:
 1249 01ac 8D2F      		mov r24,r29
 1250 01ae 8170      		andi r24,1
 1251 01b0 1F92      		push __zero_reg__
 1252               	.LCFI92:
 1253               		.cfi_def_cfa_offset 9
 1254 01b2 8F93      		push r24
 1255               	.LCFI93:
 1256               		.cfi_def_cfa_offset 10
 1257 01b4 80E0      		ldi r24,lo8(__c.3514)
 1258 01b6 90E0      		ldi r25,hi8(__c.3514)
 1259 01b8 9F93      		push r25
 1260               	.LCFI94:
 1261               		.cfi_def_cfa_offset 11
 1262 01ba 8F93      		push r24
 1263               	.LCFI95:
 1264               		.cfi_def_cfa_offset 12
 1265 01bc 0E94 0000 		call __xprintf
 279:tmk_core/common/command.c ****     print(".swap_rctl_rgui: ");
 1266               		.loc 1 279 5 view .LVU266
 1267               	.LBE153:
 1268               	.LBE204:
 279:tmk_core/common/command.c ****     print(".swap_rctl_rgui: ");
 1269               		.loc 1 279 5 view .LVU267
 279:tmk_core/common/command.c ****     print(".swap_rctl_rgui: ");
 1270               		.loc 1 279 5 view .LVU268
 1271               	.LBB205:
 1272               	.LBB154:
 1273 01c0 80E0      		ldi r24,lo8(__c.3516)
 1274 01c2 90E0      		ldi r25,hi8(__c.3516)
 1275 01c4 0E94 0000 		call xputs
 280:tmk_core/common/command.c ****     print_dec(kc.swap_rctl_rgui);
 1276               		.loc 1 280 5 view .LVU269
 1277               	.LBE154:
 1278               	.LBE205:
 280:tmk_core/common/command.c ****     print_dec(kc.swap_rctl_rgui);
 1279               		.loc 1 280 5 view .LVU270
 280:tmk_core/common/command.c ****     print_dec(kc.swap_rctl_rgui);
 1280               		.loc 1 280 5 view .LVU271
 1281               	.LBB206:
 1282               	.LBB155:
 1283 01c8 80E0      		ldi r24,lo8(__c.3518)
 1284 01ca 90E0      		ldi r25,hi8(__c.3518)
 1285 01cc 0E94 0000 		call xputs
 281:tmk_core/common/command.c ****     print("\n");
 1286               		.loc 1 281 5 view .LVU272
 1287               	.LBE155:
 1288               	.LBE206:
 281:tmk_core/common/command.c ****     print("\n");
 1289               		.loc 1 281 5 view .LVU273
 281:tmk_core/common/command.c ****     print("\n");
 1290               		.loc 1 281 5 view .LVU274
 1291               	.LBB207:
 1292               	.LBB156:
 1293 01d0 D695      		lsr r29
 1294 01d2 D170      		andi r29,1
 1295 01d4 1F92      		push __zero_reg__
 1296               	.LCFI96:
 1297               		.cfi_def_cfa_offset 13
 1298 01d6 DF93      		push r29
 1299               	.LCFI97:
 1300               		.cfi_def_cfa_offset 14
 1301 01d8 80E0      		ldi r24,lo8(__c.3520)
 1302 01da 90E0      		ldi r25,hi8(__c.3520)
 1303 01dc 9F93      		push r25
 1304               	.LCFI98:
 1305               		.cfi_def_cfa_offset 15
 1306 01de 8F93      		push r24
 1307               	.LCFI99:
 1308               		.cfi_def_cfa_offset 16
 1309 01e0 0E94 0000 		call __xprintf
 282:tmk_core/common/command.c ****     print(".swap_lalt_lgui: ");
 1310               		.loc 1 282 5 view .LVU275
 1311               	.LBE156:
 1312               	.LBE207:
 282:tmk_core/common/command.c ****     print(".swap_lalt_lgui: ");
 1313               		.loc 1 282 5 view .LVU276
 282:tmk_core/common/command.c ****     print(".swap_lalt_lgui: ");
 1314               		.loc 1 282 5 view .LVU277
 1315               	.LBB208:
 1316               	.LBB157:
 1317 01e4 80E0      		ldi r24,lo8(__c.3522)
 1318 01e6 90E0      		ldi r25,hi8(__c.3522)
 1319 01e8 0E94 0000 		call xputs
 283:tmk_core/common/command.c ****     print_dec(kc.swap_lalt_lgui);
 1320               		.loc 1 283 5 view .LVU278
 1321               	.LBE157:
 1322               	.LBE208:
 283:tmk_core/common/command.c ****     print_dec(kc.swap_lalt_lgui);
 1323               		.loc 1 283 5 view .LVU279
 283:tmk_core/common/command.c ****     print_dec(kc.swap_lalt_lgui);
 1324               		.loc 1 283 5 view .LVU280
 1325               	.LBB209:
 1326               	.LBB158:
 1327 01ec 80E0      		ldi r24,lo8(__c.3524)
 1328 01ee 90E0      		ldi r25,hi8(__c.3524)
 1329 01f0 0E94 0000 		call xputs
 284:tmk_core/common/command.c ****     print("\n");
 1330               		.loc 1 284 5 view .LVU281
 1331               	.LBE158:
 1332               	.LBE209:
 284:tmk_core/common/command.c ****     print("\n");
 1333               		.loc 1 284 5 view .LVU282
 284:tmk_core/common/command.c ****     print("\n");
 1334               		.loc 1 284 5 view .LVU283
 1335               	.LBB210:
 1336               	.LBB159:
 1337 01f4 C2FB      		bst r28,2
 1338 01f6 8827      		clr r24
 1339 01f8 80F9      		bld r24,0
 1340 01fa 1F92      		push __zero_reg__
 1341               	.LCFI100:
 1342               		.cfi_def_cfa_offset 17
 1343 01fc 8F93      		push r24
 1344               	.LCFI101:
 1345               		.cfi_def_cfa_offset 18
 1346 01fe 80E0      		ldi r24,lo8(__c.3526)
 1347 0200 90E0      		ldi r25,hi8(__c.3526)
 1348 0202 9F93      		push r25
 1349               	.LCFI102:
 1350               		.cfi_def_cfa_offset 19
 1351 0204 8F93      		push r24
 1352               	.LCFI103:
 1353               		.cfi_def_cfa_offset 20
 1354 0206 0E94 0000 		call __xprintf
 285:tmk_core/common/command.c ****     print(".swap_ralt_rgui: ");
 1355               		.loc 1 285 5 view .LVU284
 1356               	.LBE159:
 1357               	.LBE210:
 285:tmk_core/common/command.c ****     print(".swap_ralt_rgui: ");
 1358               		.loc 1 285 5 view .LVU285
 285:tmk_core/common/command.c ****     print(".swap_ralt_rgui: ");
 1359               		.loc 1 285 5 view .LVU286
 1360               	.LBB211:
 1361               	.LBB160:
 1362 020a 80E0      		ldi r24,lo8(__c.3528)
 1363 020c 90E0      		ldi r25,hi8(__c.3528)
 1364 020e 0E94 0000 		call xputs
 286:tmk_core/common/command.c ****     print_dec(kc.swap_ralt_rgui);
 1365               		.loc 1 286 5 view .LVU287
 1366               	.LBE160:
 1367               	.LBE211:
 286:tmk_core/common/command.c ****     print_dec(kc.swap_ralt_rgui);
 1368               		.loc 1 286 5 view .LVU288
 286:tmk_core/common/command.c ****     print_dec(kc.swap_ralt_rgui);
 1369               		.loc 1 286 5 view .LVU289
 1370               	.LBB212:
 1371               	.LBB161:
 1372 0212 80E0      		ldi r24,lo8(__c.3530)
 1373 0214 90E0      		ldi r25,hi8(__c.3530)
 1374 0216 0E94 0000 		call xputs
 287:tmk_core/common/command.c ****     print("\n");
 1375               		.loc 1 287 5 view .LVU290
 1376               	.LBE161:
 1377               	.LBE212:
 287:tmk_core/common/command.c ****     print("\n");
 1378               		.loc 1 287 5 view .LVU291
 287:tmk_core/common/command.c ****     print("\n");
 1379               		.loc 1 287 5 view .LVU292
 1380               	.LBB213:
 1381               	.LBB162:
 1382 021a C3FB      		bst r28,3
 1383 021c 8827      		clr r24
 1384 021e 80F9      		bld r24,0
 1385 0220 1F92      		push __zero_reg__
 1386               	.LCFI104:
 1387               		.cfi_def_cfa_offset 21
 1388 0222 8F93      		push r24
 1389               	.LCFI105:
 1390               		.cfi_def_cfa_offset 22
 1391 0224 80E0      		ldi r24,lo8(__c.3532)
 1392 0226 90E0      		ldi r25,hi8(__c.3532)
 1393 0228 9F93      		push r25
 1394               	.LCFI106:
 1395               		.cfi_def_cfa_offset 23
 1396 022a 8F93      		push r24
 1397               	.LCFI107:
 1398               		.cfi_def_cfa_offset 24
 1399 022c 0E94 0000 		call __xprintf
 288:tmk_core/common/command.c ****     print(".no_gui: ");
 1400               		.loc 1 288 5 view .LVU293
 1401               	.LBE162:
 1402               	.LBE213:
 288:tmk_core/common/command.c ****     print(".no_gui: ");
 1403               		.loc 1 288 5 view .LVU294
 288:tmk_core/common/command.c ****     print(".no_gui: ");
 1404               		.loc 1 288 5 view .LVU295
 1405               	.LBB214:
 1406               	.LBB163:
 1407 0230 80E0      		ldi r24,lo8(__c.3534)
 1408 0232 90E0      		ldi r25,hi8(__c.3534)
 1409 0234 0E94 0000 		call xputs
 289:tmk_core/common/command.c ****     print_dec(kc.no_gui);
 1410               		.loc 1 289 5 view .LVU296
 1411               	.LBE163:
 1412               	.LBE214:
 289:tmk_core/common/command.c ****     print_dec(kc.no_gui);
 1413               		.loc 1 289 5 view .LVU297
 289:tmk_core/common/command.c ****     print_dec(kc.no_gui);
 1414               		.loc 1 289 5 view .LVU298
 1415               	.LBB215:
 1416               	.LBB164:
 1417 0238 80E0      		ldi r24,lo8(__c.3536)
 1418 023a 90E0      		ldi r25,hi8(__c.3536)
 1419 023c 0E94 0000 		call xputs
 290:tmk_core/common/command.c ****     print("\n");
 1420               		.loc 1 290 5 view .LVU299
 1421               	.LBE164:
 1422               	.LBE215:
 290:tmk_core/common/command.c ****     print("\n");
 1423               		.loc 1 290 5 view .LVU300
 290:tmk_core/common/command.c ****     print("\n");
 1424               		.loc 1 290 5 view .LVU301
 1425               	.LBB216:
 1426               	.LBB165:
 1427 0240 C4FB      		bst r28,4
 1428 0242 8827      		clr r24
 1429 0244 80F9      		bld r24,0
 1430 0246 1F92      		push __zero_reg__
 1431               	.LCFI108:
 1432               		.cfi_def_cfa_offset 25
 1433 0248 8F93      		push r24
 1434               	.LCFI109:
 1435               		.cfi_def_cfa_offset 26
 1436 024a 80E0      		ldi r24,lo8(__c.3538)
 1437 024c 90E0      		ldi r25,hi8(__c.3538)
 1438 024e 9F93      		push r25
 1439               	.LCFI110:
 1440               		.cfi_def_cfa_offset 27
 1441 0250 8F93      		push r24
 1442               	.LCFI111:
 1443               		.cfi_def_cfa_offset 28
 1444 0252 0E94 0000 		call __xprintf
 291:tmk_core/common/command.c ****     print(".swap_grave_esc: ");
 1445               		.loc 1 291 5 view .LVU302
 1446               	.LBE165:
 1447               	.LBE216:
 291:tmk_core/common/command.c ****     print(".swap_grave_esc: ");
 1448               		.loc 1 291 5 view .LVU303
 291:tmk_core/common/command.c ****     print(".swap_grave_esc: ");
 1449               		.loc 1 291 5 view .LVU304
 1450               	.LBB217:
 1451               	.LBB166:
 1452 0256 80E0      		ldi r24,lo8(__c.3540)
 1453 0258 90E0      		ldi r25,hi8(__c.3540)
 1454 025a 0E94 0000 		call xputs
 292:tmk_core/common/command.c ****     print_dec(kc.swap_grave_esc);
 1455               		.loc 1 292 5 view .LVU305
 1456               	.LBE166:
 1457               	.LBE217:
 292:tmk_core/common/command.c ****     print_dec(kc.swap_grave_esc);
 1458               		.loc 1 292 5 view .LVU306
 292:tmk_core/common/command.c ****     print_dec(kc.swap_grave_esc);
 1459               		.loc 1 292 5 view .LVU307
 1460               	.LBB218:
 1461               	.LBB167:
 1462 025e 80E0      		ldi r24,lo8(__c.3542)
 1463 0260 90E0      		ldi r25,hi8(__c.3542)
 1464 0262 0E94 0000 		call xputs
 293:tmk_core/common/command.c ****     print("\n");
 1465               		.loc 1 293 5 view .LVU308
 1466               	.LBE167:
 1467               	.LBE218:
 293:tmk_core/common/command.c ****     print("\n");
 1468               		.loc 1 293 5 view .LVU309
 293:tmk_core/common/command.c ****     print("\n");
 1469               		.loc 1 293 5 view .LVU310
 1470               	.LBB219:
 1471               	.LBB168:
 1472 0266 C5FB      		bst r28,5
 1473 0268 8827      		clr r24
 1474 026a 80F9      		bld r24,0
 1475 026c 1F92      		push __zero_reg__
 1476               	.LCFI112:
 1477               		.cfi_def_cfa_offset 29
 1478 026e 8F93      		push r24
 1479               	.LCFI113:
 1480               		.cfi_def_cfa_offset 30
 1481 0270 80E0      		ldi r24,lo8(__c.3544)
 1482 0272 90E0      		ldi r25,hi8(__c.3544)
 1483 0274 9F93      		push r25
 1484               	.LCFI114:
 1485               		.cfi_def_cfa_offset 31
 1486 0276 8F93      		push r24
 1487               	.LCFI115:
 1488               		.cfi_def_cfa_offset 32
 1489 0278 0E94 0000 		call __xprintf
 294:tmk_core/common/command.c ****     print(".swap_backslash_backspace: ");
 1490               		.loc 1 294 5 view .LVU311
 1491               	.LBE168:
 1492               	.LBE219:
 294:tmk_core/common/command.c ****     print(".swap_backslash_backspace: ");
 1493               		.loc 1 294 5 view .LVU312
 294:tmk_core/common/command.c ****     print(".swap_backslash_backspace: ");
 1494               		.loc 1 294 5 view .LVU313
 1495               	.LBB220:
 1496               	.LBB169:
 1497 027c 80E0      		ldi r24,lo8(__c.3546)
 1498 027e 90E0      		ldi r25,hi8(__c.3546)
 1499 0280 0E94 0000 		call xputs
 295:tmk_core/common/command.c ****     print_dec(kc.swap_backslash_backspace);
 1500               		.loc 1 295 5 view .LVU314
 1501               	.LBE169:
 1502               	.LBE220:
 295:tmk_core/common/command.c ****     print_dec(kc.swap_backslash_backspace);
 1503               		.loc 1 295 5 view .LVU315
 295:tmk_core/common/command.c ****     print_dec(kc.swap_backslash_backspace);
 1504               		.loc 1 295 5 view .LVU316
 1505               	.LBB221:
 1506               	.LBB170:
 1507 0284 80E0      		ldi r24,lo8(__c.3548)
 1508 0286 90E0      		ldi r25,hi8(__c.3548)
 1509 0288 0E94 0000 		call xputs
 296:tmk_core/common/command.c ****     print("\n");
 1510               		.loc 1 296 5 view .LVU317
 1511               	.LBE170:
 1512               	.LBE221:
 296:tmk_core/common/command.c ****     print("\n");
 1513               		.loc 1 296 5 view .LVU318
 296:tmk_core/common/command.c ****     print("\n");
 1514               		.loc 1 296 5 view .LVU319
 1515               	.LBB222:
 1516               	.LBB171:
 1517 028c C6FB      		bst r28,6
 1518 028e 8827      		clr r24
 1519 0290 80F9      		bld r24,0
 1520 0292 1F92      		push __zero_reg__
 1521               	.LCFI116:
 1522               		.cfi_def_cfa_offset 33
 1523 0294 8F93      		push r24
 1524               	.LCFI117:
 1525               		.cfi_def_cfa_offset 34
 1526 0296 80E0      		ldi r24,lo8(__c.3550)
 1527 0298 90E0      		ldi r25,hi8(__c.3550)
 1528 029a 9F93      		push r25
 1529               	.LCFI118:
 1530               		.cfi_def_cfa_offset 35
 1531 029c 8F93      		push r24
 1532               	.LCFI119:
 1533               		.cfi_def_cfa_offset 36
 1534 029e 0E94 0000 		call __xprintf
 297:tmk_core/common/command.c ****     print(".nkro: ");
 1535               		.loc 1 297 5 view .LVU320
 1536               	.LBE171:
 1537               	.LBE222:
 297:tmk_core/common/command.c ****     print(".nkro: ");
 1538               		.loc 1 297 5 view .LVU321
 297:tmk_core/common/command.c ****     print(".nkro: ");
 1539               		.loc 1 297 5 view .LVU322
 1540               	.LBB223:
 1541               	.LBB172:
 1542 02a2 8DB7      		in r24,__SP_L__
 1543 02a4 9EB7      		in r25,__SP_H__
 1544 02a6 8096      		adiw r24,32
 1545 02a8 0FB6      		in __tmp_reg__,__SREG__
 1546 02aa F894      		cli
 1547 02ac 9EBF      		out __SP_H__,r25
 1548 02ae 0FBE      		out __SREG__,__tmp_reg__
 1549 02b0 8DBF      		out __SP_L__,r24
 1550               	.LCFI120:
 1551               		.cfi_def_cfa_offset 4
 1552 02b2 80E0      		ldi r24,lo8(__c.3552)
 1553 02b4 90E0      		ldi r25,hi8(__c.3552)
 1554 02b6 0E94 0000 		call xputs
 298:tmk_core/common/command.c ****     print_dec(kc.nkro);
 1555               		.loc 1 298 5 view .LVU323
 1556               	.LBE172:
 1557               	.LBE223:
 298:tmk_core/common/command.c ****     print_dec(kc.nkro);
 1558               		.loc 1 298 5 view .LVU324
 298:tmk_core/common/command.c ****     print_dec(kc.nkro);
 1559               		.loc 1 298 5 view .LVU325
 1560               	.LBB224:
 1561               	.LBB173:
 1562 02ba 80E0      		ldi r24,lo8(__c.3554)
 1563 02bc 90E0      		ldi r25,hi8(__c.3554)
 1564 02be 0E94 0000 		call xputs
 299:tmk_core/common/command.c ****     print("\n");
 1565               		.loc 1 299 5 view .LVU326
 1566               	.LBE173:
 1567               	.LBE224:
 299:tmk_core/common/command.c ****     print("\n");
 1568               		.loc 1 299 5 view .LVU327
 299:tmk_core/common/command.c ****     print("\n");
 1569               		.loc 1 299 5 view .LVU328
 1570               	.LBB225:
 1571               	.LBB174:
 1572 02c2 C7FB      		bst r28,7
 1573 02c4 CC27      		clr r28
 1574 02c6 C0F9      		bld r28,0
 1575 02c8 1F92      		push __zero_reg__
 1576               	.LCFI121:
 1577               		.cfi_def_cfa_offset 5
 1578 02ca CF93      		push r28
 1579               	.LCFI122:
 1580               		.cfi_def_cfa_offset 6
 1581 02cc 80E0      		ldi r24,lo8(__c.3556)
 1582 02ce 90E0      		ldi r25,hi8(__c.3556)
 1583 02d0 9F93      		push r25
 1584               	.LCFI123:
 1585               		.cfi_def_cfa_offset 7
 1586 02d2 8F93      		push r24
 1587               	.LCFI124:
 1588               		.cfi_def_cfa_offset 8
 1589 02d4 0E94 0000 		call __xprintf
 300:tmk_core/common/command.c **** 
 1590               		.loc 1 300 5 view .LVU329
 1591               	.LBE174:
 1592               	.LBE225:
 300:tmk_core/common/command.c **** 
 1593               		.loc 1 300 5 view .LVU330
 300:tmk_core/common/command.c **** 
 1594               		.loc 1 300 5 view .LVU331
 1595               	.LBB226:
 1596               	.LBB175:
 1597 02d8 80E0      		ldi r24,lo8(__c.3558)
 1598 02da 90E0      		ldi r25,hi8(__c.3558)
 1599 02dc 0E94 0000 		call xputs
 1600 02e0 0F90      		pop __tmp_reg__
 1601 02e2 0F90      		pop __tmp_reg__
 1602 02e4 0F90      		pop __tmp_reg__
 1603 02e6 0F90      		pop __tmp_reg__
 1604               	.LCFI125:
 1605               		.cfi_def_cfa_offset 4
 1606               	.L98:
 1607               	.LBE175:
 1608               	.LBE226:
 527:tmk_core/common/command.c ****         case KC_0:
 1609               		.loc 1 527 13 view .LVU332
 537:tmk_core/common/command.c **** }
 1610               		.loc 1 537 12 is_stmt 0 view .LVU333
 1611 02e8 81E0      		ldi r24,lo8(1)
 527:tmk_core/common/command.c ****         case KC_0:
 1612               		.loc 1 527 13 view .LVU334
 1613 02ea 00C0      		rjmp .L47
 1614               	.L51:
 324:tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 1615               		.loc 1 324 5 view .LVU335
 1616 02ec 8031      		cpi r24,lo8(16)
 1617 02ee 01F4      		brne .+2
 1618 02f0 00C0      		rjmp .L58
 1619 02f2 00F4      		brsh .L59
 1620 02f4 8E30      		cpi r24,lo8(14)
 1621 02f6 01F0      		breq .+2
 1622 02f8 00C0      		rjmp .L55
 420:tmk_core/common/command.c ****             if (debug_keyboard) {
 1623               		.loc 1 420 13 is_stmt 1 view .LVU336
 420:tmk_core/common/command.c ****             if (debug_keyboard) {
 1624               		.loc 1 420 31 is_stmt 0 view .LVU337
 1625 02fa 9091 0000 		lds r25,debug_config
 420:tmk_core/common/command.c ****             if (debug_keyboard) {
 1626               		.loc 1 420 28 view .LVU338
 1627 02fe 892F      		mov r24,r25
 1628 0300 8B7F      		andi r24,~(1<<2)
 1629 0302 92FF      		sbrs r25,2
 1630 0304 8460      		ori r24,1<<2
 1631 0306 8093 0000 		sts debug_config,r24
 421:tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 1632               		.loc 1 421 13 is_stmt 1 view .LVU339
 421:tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 1633               		.loc 1 421 16 is_stmt 0 view .LVU340
 1634 030a 82FF      		sbrs r24,2
 1635 030c 00C0      		rjmp .L73
 422:tmk_core/common/command.c ****                 debug_enable = true;
 1636               		.loc 1 422 17 is_stmt 1 view .LVU341
 1637               	.LBB227:
 422:tmk_core/common/command.c ****                 debug_enable = true;
 1638               		.loc 1 422 17 view .LVU342
 422:tmk_core/common/command.c ****                 debug_enable = true;
 1639               		.loc 1 422 17 view .LVU343
 1640               	.LBE227:
 1641 030e 80E0      		ldi r24,lo8(__c.3590)
 1642 0310 90E0      		ldi r25,hi8(__c.3590)
 1643 0312 00C0      		rjmp .L100
 1644               	.L59:
 324:tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 1645               		.loc 1 324 5 is_stmt 0 view .LVU344
 1646 0314 8631      		cpi r24,lo8(22)
 1647 0316 01F4      		brne .+2
 1648 0318 00C0      		rjmp .L61
 1649 031a 8931      		cpi r24,lo8(25)
 1650 031c 01F0      		breq .+2
 1651 031e 00C0      		rjmp .L55
 442:tmk_core/common/command.c ****             break;
 1652               		.loc 1 442 13 is_stmt 1 view .LVU345
 1653               	.LBB228:
 1654               	.LBI228:
 152:tmk_core/common/command.c ****     // print version & information
 1655               		.loc 1 152 13 view .LVU346
 1656               	.LBB229:
 154:tmk_core/common/command.c ****     print("DESC: " STR(DESCRIPTION) "\n");
 1657               		.loc 1 154 5 view .LVU347
 1658               	.LBE229:
 1659               	.LBE228:
 154:tmk_core/common/command.c ****     print("DESC: " STR(DESCRIPTION) "\n");
 1660               		.loc 1 154 5 view .LVU348
 154:tmk_core/common/command.c ****     print("DESC: " STR(DESCRIPTION) "\n");
 1661               		.loc 1 154 5 view .LVU349
 1662               	.LBB237:
 1663               	.LBB230:
 1664 0320 80E0      		ldi r24,lo8(__c.3428)
 1665 0322 90E0      		ldi r25,hi8(__c.3428)
 1666 0324 0E94 0000 		call xputs
 155:tmk_core/common/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1667               		.loc 1 155 5 view .LVU350
 1668               	.LBE230:
 1669               	.LBE237:
 155:tmk_core/common/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1670               		.loc 1 155 5 view .LVU351
 155:tmk_core/common/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1671               		.loc 1 155 5 view .LVU352
 1672               	.LBB238:
 1673               	.LBB231:
 1674 0328 80E0      		ldi r24,lo8(__c.3430)
 1675 032a 90E0      		ldi r25,hi8(__c.3430)
 1676 032c 0E94 0000 		call xputs
 156:tmk_core/common/command.c ****                                                        "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") 
 1677               		.loc 1 156 5 view .LVU353
 1678               	.LBE231:
 1679               	.LBE238:
 156:tmk_core/common/command.c ****                                                        "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") 
 1680               		.loc 1 156 5 view .LVU354
 156:tmk_core/common/command.c ****                                                        "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") 
 1681               		.loc 1 156 5 view .LVU355
 1682               	.LBB239:
 1683               	.LBB232:
 1684 0330 80E0      		ldi r24,lo8(__c.3432)
 1685 0332 90E0      		ldi r25,hi8(__c.3432)
 1686 0334 0E94 0000 		call xputs
 162:tmk_core/common/command.c **** #endif
 1687               		.loc 1 162 5 view .LVU356
 1688               	.LBE232:
 1689               	.LBE239:
 162:tmk_core/common/command.c **** #endif
 1690               		.loc 1 162 5 view .LVU357
 162:tmk_core/common/command.c **** #endif
 1691               		.loc 1 162 5 view .LVU358
 1692               	.LBB240:
 1693               	.LBB233:
 1694 0338 80E0      		ldi r24,lo8(__c.3434)
 1695 033a 90E0      		ldi r25,hi8(__c.3434)
 1696 033c 0E94 0000 		call xputs
 166:tmk_core/common/command.c **** 
 1697               		.loc 1 166 5 view .LVU359
 1698               	.LBE233:
 1699               	.LBE240:
 166:tmk_core/common/command.c **** 
 1700               		.loc 1 166 5 view .LVU360
 166:tmk_core/common/command.c **** 
 1701               		.loc 1 166 5 view .LVU361
 1702               	.LBB241:
 1703               	.LBB234:
 1704 0340 80E0      		ldi r24,lo8(__c.3436)
 1705 0342 90E0      		ldi r25,hi8(__c.3436)
 1706 0344 0E94 0000 		call xputs
 201:tmk_core/common/command.c **** #if defined(__AVR__)
 1707               		.loc 1 201 5 view .LVU362
 1708               	.LBE234:
 1709               	.LBE241:
 201:tmk_core/common/command.c **** #if defined(__AVR__)
 1710               		.loc 1 201 5 view .LVU363
 201:tmk_core/common/command.c **** #if defined(__AVR__)
 1711               		.loc 1 201 5 view .LVU364
 1712               	.LBB242:
 1713               	.LBB235:
 1714 0348 80E0      		ldi r24,lo8(__c.3438)
 1715 034a 90E0      		ldi r25,hi8(__c.3438)
 1716 034c 00C0      		rjmp .L99
 1717               	.L49:
 1718               	.LBE235:
 1719               	.LBE242:
 324:tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 1720               		.loc 1 324 5 is_stmt 0 view .LVU365
 1721 034e 8A32      		cpi r24,lo8(42)
 1722 0350 01F0      		breq .L63
 1723 0352 00F4      		brsh .L64
 1724 0354 8732      		cpi r24,lo8(39)
 1725 0356 01F0      		breq .L65
 1726 0358 00F4      		brsh .L66
 1727 035a 8E31      		cpi r24,lo8(30)
 1728 035c 00F4      		brsh .+2
 1729 035e 00C0      		rjmp .L55
 526:tmk_core/common/command.c ****             break;
 1730               		.loc 1 526 13 is_stmt 1 view .LVU366
 1731 0360 8D51      		subi r24,lo8(-(-29))
 1732 0362 00C0      		rjmp .L97
 1733               	.L66:
 324:tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 1734               		.loc 1 324 5 is_stmt 0 view .LVU367
 1735 0364 8932      		cpi r24,lo8(41)
 1736 0366 01F0      		breq .+2
 1737 0368 00C0      		rjmp .L55
 1738               	.L54:
 383:tmk_core/common/command.c ****             print("\n\nJumping to bootloader... ");
 1739               		.loc 1 383 13 is_stmt 1 view .LVU368
 1740 036a 0E94 0000 		call clear_keyboard
 384:tmk_core/common/command.c **** #ifdef AUDIO_ENABLE
 1741               		.loc 1 384 13 view .LVU369
 1742               	.LBB243:
 384:tmk_core/common/command.c **** #ifdef AUDIO_ENABLE
 1743               		.loc 1 384 13 view .LVU370
 384:tmk_core/common/command.c **** #ifdef AUDIO_ENABLE
 1744               		.loc 1 384 13 view .LVU371
 1745               	.LBE243:
 1746 036e 80E0      		ldi r24,lo8(__c.3577)
 1747 0370 90E0      		ldi r25,hi8(__c.3577)
 1748 0372 0E94 0000 		call xputs
 389:tmk_core/common/command.c **** #endif
 1749               		.loc 1 389 13 view .LVU372
 1750               	.LBB244:
 1751               	.LBI244:
 1752               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 1753               		.loc 2 166 1 view .LVU373
 1754               	.LBB245:
 167:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	double __tmp ;
 1755               		.loc 2 168 2 view .LVU374
 169:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 1756               		.loc 2 172 2 view .LVU375
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 1757               		.loc 2 173 2 view .LVU376
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 1758               		.loc 2 174 2 view .LVU377
 175:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 1759               		.loc 2 184 3 view .LVU378
 185:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 1760               		.loc 2 187 2 view .LVU379
 1761 0376 9FEF      		ldi r25,lo8(3199999)
 1762 0378 23ED      		ldi r18,hi8(3199999)
 1763 037a 80E3      		ldi r24,hlo8(3199999)
 1764 037c 9150      	1:	subi r25,1
 1765 037e 2040      		sbci r18,0
 1766 0380 8040      		sbci r24,0
 1767 0382 01F4      		brne 1b
 1768 0384 00C0      		rjmp .
 1769 0386 0000      		nop
 1770               	.LBE245:
 1771               	.LBE244:
 391:tmk_core/common/command.c ****             break;
 1772               		.loc 1 391 13 view .LVU380
 1773 0388 0E94 0000 		call bootloader_jump
 392:tmk_core/common/command.c **** 
 1774               		.loc 1 392 13 view .LVU381
 1775 038c 00C0      		rjmp .L98
 1776               	.L64:
 324:tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 1777               		.loc 1 324 5 is_stmt 0 view .LVU382
 1778 038e 8334      		cpi r24,lo8(67)
 1779 0390 00F4      		brsh .L68
 1780 0392 8A33      		cpi r24,lo8(58)
 1781 0394 00F0      		brlo .+2
 1782 0396 00C0      		rjmp .L69
 1783 0398 8533      		cpi r24,lo8(53)
 1784 039a 01F0      		breq .L65
 1785 039c 8833      		cpi r24,lo8(56)
 1786 039e 01F0      		breq .+2
 1787 03a0 00C0      		rjmp .L55
 1788               	.L50:
 366:tmk_core/common/command.c ****             break;
 1789               		.loc 1 366 13 is_stmt 1 view .LVU383
 1790               	.LBB246:
 1791               	.LBI246:
 117:tmk_core/common/command.c ****     print("\n\t- Magic -\n" STR(MAGIC_KEY_DEBUG) ":	Debug Message Toggle\n" STR(MAGIC_KEY_DEBUG_MAT
 1792               		.loc 1 117 13 view .LVU384
 1793               	.LBB247:
 118:tmk_core/common/command.c **** 
 1794               		.loc 1 118 5 view .LVU385
 1795               	.LBE247:
 1796               	.LBE246:
 118:tmk_core/common/command.c **** 
 1797               		.loc 1 118 5 view .LVU386
 118:tmk_core/common/command.c **** 
 1798               		.loc 1 118 5 view .LVU387
 1799               	.LBB249:
 1800               	.LBB248:
 1801 03a2 80E0      		ldi r24,lo8(__c.3423)
 1802 03a4 90E0      		ldi r25,hi8(__c.3423)
 1803               	.L99:
 1804               	.LBE248:
 1805               	.LBE249:
 1806               	.LBB250:
 1807               	.LBB236:
 201:tmk_core/common/command.c **** #if defined(__AVR__)
 1808               		.loc 1 201 5 is_stmt 0 view .LVU388
 1809 03a6 0E94 0000 		call xputs
 207:tmk_core/common/command.c **** }
 1810               		.loc 1 207 5 is_stmt 1 view .LVU389
 1811 03aa 00C0      		rjmp .L98
 1812               	.L68:
 1813               	.LBE236:
 1814               	.LBE250:
 324:tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 1815               		.loc 1 324 5 is_stmt 0 view .LVU390
 1816 03ac 8334      		cpi r24,lo8(67)
 1817 03ae 01F0      		breq .+2
 1818 03b0 00C0      		rjmp .L55
 1819               	.L65:
 467:tmk_core/common/command.c ****             break;
 1820               		.loc 1 467 13 is_stmt 1 view .LVU391
 1821 03b2 80E0      		ldi r24,0
 1822               	.L97:
 526:tmk_core/common/command.c ****             break;
 1823               		.loc 1 526 13 is_stmt 0 view .LVU392
 1824 03b4 0E94 0000 		call switch_default_layer
 1825 03b8 00C0      		rjmp .L98
 1826               	.L63:
 343:tmk_core/common/command.c ****             eeconfig_init();
 1827               		.loc 1 343 13 is_stmt 1 view .LVU393
 1828               	.LBB251:
 343:tmk_core/common/command.c ****             eeconfig_init();
 1829               		.loc 1 343 13 view .LVU394
 343:tmk_core/common/command.c ****             eeconfig_init();
 1830               		.loc 1 343 13 view .LVU395
 1831               	.LBE251:
 1832 03ba 80E0      		ldi r24,lo8(__c.3568)
 1833 03bc 90E0      		ldi r25,hi8(__c.3568)
 1834 03be 0E94 0000 		call xputs
 344:tmk_core/common/command.c ****             break;
 1835               		.loc 1 344 13 view .LVU396
 1836 03c2 0E94 0000 		call eeconfig_init
 345:tmk_core/common/command.c **** 
 1837               		.loc 1 345 13 view .LVU397
 1838 03c6 00C0      		rjmp .L98
 1839               	.L52:
 371:tmk_core/common/command.c ****             debug_keyboard = false;
 1840               		.loc 1 371 13 view .LVU398
 372:tmk_core/common/command.c ****             debug_mouse    = false;
 1841               		.loc 1 372 13 view .LVU399
 373:tmk_core/common/command.c ****             debug_enable   = false;
 1842               		.loc 1 373 13 view .LVU400
 374:tmk_core/common/command.c ****             command_console_help();
 1843               		.loc 1 374 13 view .LVU401
 374:tmk_core/common/command.c ****             command_console_help();
 1844               		.loc 1 374 28 is_stmt 0 view .LVU402
 1845 03c8 8091 0000 		lds r24,debug_config
 1846 03cc 807F      		andi r24,lo8(-16)
 1847 03ce 8093 0000 		sts debug_config,r24
 375:tmk_core/common/command.c ****             print("C> ");
 1848               		.loc 1 375 13 is_stmt 1 view .LVU403
 1849               	.LBB252:
 1850               	.LBI252:
 543:tmk_core/common/command.c ****     print("\n\t- Console -\n"
 1851               		.loc 1 543 13 view .LVU404
 1852               	.LBB253:
 544:tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1853               		.loc 1 544 5 view .LVU405
 1854               	.LBE253:
 1855               	.LBE252:
 544:tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1856               		.loc 1 544 5 view .LVU406
 544:tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1857               		.loc 1 544 5 view .LVU407
 1858               	.LBB255:
 1859               	.LBB254:
 1860 03d2 80E0      		ldi r24,lo8(__c.3612)
 1861 03d4 90E0      		ldi r25,hi8(__c.3612)
 1862 03d6 0E94 0000 		call xputs
 1863               	.LBE254:
 1864               	.LBE255:
 376:tmk_core/common/command.c ****             command_state = CONSOLE;
 1865               		.loc 1 376 13 view .LVU408
 1866               	.LBB256:
 376:tmk_core/common/command.c ****             command_state = CONSOLE;
 1867               		.loc 1 376 13 view .LVU409
 376:tmk_core/common/command.c ****             command_state = CONSOLE;
 1868               		.loc 1 376 13 view .LVU410
 1869               	.LBE256:
 1870 03da 80E0      		ldi r24,lo8(__c.3573)
 1871 03dc 90E0      		ldi r25,hi8(__c.3573)
 1872 03de 0E94 0000 		call xputs
 377:tmk_core/common/command.c ****             break;
 1873               		.loc 1 377 13 view .LVU411
 377:tmk_core/common/command.c ****             break;
 1874               		.loc 1 377 27 is_stmt 0 view .LVU412
 1875 03e2 81E0      		ldi r24,lo8(1)
 1876 03e4 8093 0000 		sts command_state,r24
 378:tmk_core/common/command.c **** 
 1877               		.loc 1 378 13 is_stmt 1 view .LVU413
 1878               	.L47:
 1879               	/* epilogue start */
 538:tmk_core/common/command.c **** 
 1880               		.loc 1 538 1 is_stmt 0 view .LVU414
 1881 03e8 DF91      		pop r29
 1882 03ea CF91      		pop r28
 1883 03ec 0895      		ret
 1884               	.L56:
 396:tmk_core/common/command.c ****             if (debug_enable) {
 1885               		.loc 1 396 13 is_stmt 1 view .LVU415
 396:tmk_core/common/command.c ****             if (debug_enable) {
 1886               		.loc 1 396 29 is_stmt 0 view .LVU416
 1887 03ee 9091 0000 		lds r25,debug_config
 396:tmk_core/common/command.c ****             if (debug_enable) {
 1888               		.loc 1 396 26 view .LVU417
 1889 03f2 892F      		mov r24,r25
 1890 03f4 8E7F      		andi r24,~(1<<0)
 1891 03f6 90FF      		sbrs r25,0
 1892 03f8 8160      		ori r24,1<<0
 1893 03fa 8093 0000 		sts debug_config,r24
 397:tmk_core/common/command.c ****                 print("\ndebug: on\n");
 1894               		.loc 1 397 13 is_stmt 1 view .LVU418
 397:tmk_core/common/command.c ****                 print("\ndebug: on\n");
 1895               		.loc 1 397 16 is_stmt 0 view .LVU419
 1896 03fe 80FF      		sbrs r24,0
 1897 0400 00C0      		rjmp .L71
 398:tmk_core/common/command.c ****             } else {
 1898               		.loc 1 398 17 is_stmt 1 view .LVU420
 1899               	.LBB257:
 398:tmk_core/common/command.c ****             } else {
 1900               		.loc 1 398 17 view .LVU421
 398:tmk_core/common/command.c ****             } else {
 1901               		.loc 1 398 17 view .LVU422
 1902               	.LBE257:
 1903 0402 80E0      		ldi r24,lo8(__c.3580)
 1904 0404 90E0      		ldi r25,hi8(__c.3580)
 1905 0406 00C0      		rjmp .L99
 1906               	.L71:
 400:tmk_core/common/command.c ****                 debug_matrix   = false;
 1907               		.loc 1 400 17 view .LVU423
 1908               	.LBB258:
 400:tmk_core/common/command.c ****                 debug_matrix   = false;
 1909               		.loc 1 400 17 view .LVU424
 400:tmk_core/common/command.c ****                 debug_matrix   = false;
 1910               		.loc 1 400 17 view .LVU425
 1911               	.LBE258:
 1912 0408 80E0      		ldi r24,lo8(__c.3582)
 1913 040a 90E0      		ldi r25,hi8(__c.3582)
 1914 040c 0E94 0000 		call xputs
 401:tmk_core/common/command.c ****                 debug_keyboard = false;
 1915               		.loc 1 401 17 view .LVU426
 402:tmk_core/common/command.c ****                 debug_mouse    = false;
 1916               		.loc 1 402 17 view .LVU427
 403:tmk_core/common/command.c ****             }
 1917               		.loc 1 403 17 view .LVU428
 401:tmk_core/common/command.c ****                 debug_keyboard = false;
 1918               		.loc 1 401 32 is_stmt 0 view .LVU429
 1919 0410 8091 0000 		lds r24,debug_config
 1920 0414 817F      		andi r24,lo8(-15)
 1921               	.L101:
 434:tmk_core/common/command.c ****             } else {
 1922               		.loc 1 434 30 view .LVU430
 1923 0416 8093 0000 		sts debug_config,r24
 1924 041a 00C0      		rjmp .L98
 1925               	.L48:
 409:tmk_core/common/command.c ****             if (debug_matrix) {
 1926               		.loc 1 409 13 is_stmt 1 view .LVU431
 409:tmk_core/common/command.c ****             if (debug_matrix) {
 1927               		.loc 1 409 29 is_stmt 0 view .LVU432
 1928 041c 9091 0000 		lds r25,debug_config
 409:tmk_core/common/command.c ****             if (debug_matrix) {
 1929               		.loc 1 409 26 view .LVU433
 1930 0420 892F      		mov r24,r25
 1931 0422 8D7F      		andi r24,~(1<<1)
 1932 0424 91FF      		sbrs r25,1
 1933 0426 8260      		ori r24,1<<1
 1934 0428 8093 0000 		sts debug_config,r24
 410:tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 1935               		.loc 1 410 13 is_stmt 1 view .LVU434
 410:tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 1936               		.loc 1 410 16 is_stmt 0 view .LVU435
 1937 042c 81FF      		sbrs r24,1
 1938 042e 00C0      		rjmp .L72
 411:tmk_core/common/command.c ****                 debug_enable = true;
 1939               		.loc 1 411 17 is_stmt 1 view .LVU436
 1940               	.LBB259:
 411:tmk_core/common/command.c ****                 debug_enable = true;
 1941               		.loc 1 411 17 view .LVU437
 411:tmk_core/common/command.c ****                 debug_enable = true;
 1942               		.loc 1 411 17 view .LVU438
 1943               	.LBE259:
 1944 0430 80E0      		ldi r24,lo8(__c.3585)
 1945 0432 90E0      		ldi r25,hi8(__c.3585)
 1946               	.L100:
 433:tmk_core/common/command.c ****                 debug_enable = true;
 1947               		.loc 1 433 17 is_stmt 0 view .LVU439
 1948 0434 0E94 0000 		call xputs
 434:tmk_core/common/command.c ****             } else {
 1949               		.loc 1 434 17 is_stmt 1 view .LVU440
 434:tmk_core/common/command.c ****             } else {
 1950               		.loc 1 434 30 is_stmt 0 view .LVU441
 1951 0438 8091 0000 		lds r24,debug_config
 1952 043c 8160      		ori r24,lo8(1<<0)
 1953 043e 00C0      		rjmp .L101
 1954               	.L72:
 414:tmk_core/common/command.c ****             }
 1955               		.loc 1 414 17 is_stmt 1 view .LVU442
 1956               	.LBB260:
 414:tmk_core/common/command.c ****             }
 1957               		.loc 1 414 17 view .LVU443
 414:tmk_core/common/command.c ****             }
 1958               		.loc 1 414 17 view .LVU444
 1959               	.LBE260:
 1960 0440 80E0      		ldi r24,lo8(__c.3587)
 1961 0442 90E0      		ldi r25,hi8(__c.3587)
 1962 0444 00C0      		rjmp .L99
 1963               	.L73:
 425:tmk_core/common/command.c ****             }
 1964               		.loc 1 425 17 view .LVU445
 1965               	.LBB261:
 425:tmk_core/common/command.c ****             }
 1966               		.loc 1 425 17 view .LVU446
 425:tmk_core/common/command.c ****             }
 1967               		.loc 1 425 17 view .LVU447
 1968               	.LBE261:
 1969 0446 80E0      		ldi r24,lo8(__c.3592)
 1970 0448 90E0      		ldi r25,hi8(__c.3592)
 1971 044a 00C0      		rjmp .L99
 1972               	.L58:
 431:tmk_core/common/command.c ****             if (debug_mouse) {
 1973               		.loc 1 431 13 view .LVU448
 431:tmk_core/common/command.c ****             if (debug_mouse) {
 1974               		.loc 1 431 28 is_stmt 0 view .LVU449
 1975 044c 9091 0000 		lds r25,debug_config
 431:tmk_core/common/command.c ****             if (debug_mouse) {
 1976               		.loc 1 431 25 view .LVU450
 1977 0450 892F      		mov r24,r25
 1978 0452 877F      		andi r24,~(1<<3)
 1979 0454 93FF      		sbrs r25,3
 1980 0456 8860      		ori r24,1<<3
 1981 0458 8093 0000 		sts debug_config,r24
 432:tmk_core/common/command.c ****                 print("\nmouse: on\n");
 1982               		.loc 1 432 13 is_stmt 1 view .LVU451
 432:tmk_core/common/command.c ****                 print("\nmouse: on\n");
 1983               		.loc 1 432 16 is_stmt 0 view .LVU452
 1984 045c 83FF      		sbrs r24,3
 1985 045e 00C0      		rjmp .L74
 433:tmk_core/common/command.c ****                 debug_enable = true;
 1986               		.loc 1 433 17 is_stmt 1 view .LVU453
 1987               	.LBB262:
 433:tmk_core/common/command.c ****                 debug_enable = true;
 1988               		.loc 1 433 17 view .LVU454
 433:tmk_core/common/command.c ****                 debug_enable = true;
 1989               		.loc 1 433 17 view .LVU455
 1990               	.LBE262:
 1991 0460 80E0      		ldi r24,lo8(__c.3595)
 1992 0462 90E0      		ldi r25,hi8(__c.3595)
 1993 0464 00C0      		rjmp .L100
 1994               	.L74:
 436:tmk_core/common/command.c ****             }
 1995               		.loc 1 436 17 view .LVU456
 1996               	.LBB263:
 436:tmk_core/common/command.c ****             }
 1997               		.loc 1 436 17 view .LVU457
 436:tmk_core/common/command.c ****             }
 1998               		.loc 1 436 17 view .LVU458
 1999               	.LBE263:
 2000 0466 80E0      		ldi r24,lo8(__c.3597)
 2001 0468 90E0      		ldi r25,hi8(__c.3597)
 2002 046a 00C0      		rjmp .L99
 2003               	.L61:
 447:tmk_core/common/command.c ****             break;
 2004               		.loc 1 447 13 view .LVU459
 2005               	.LBB264:
 2006               	.LBI264:
 210:tmk_core/common/command.c ****     print("\n\t- Status -\n");
 2007               		.loc 1 210 13 view .LVU460
 2008               	.LBB265:
 211:tmk_core/common/command.c **** 
 2009               		.loc 1 211 5 view .LVU461
 2010               	.LBE265:
 2011               	.LBE264:
 211:tmk_core/common/command.c **** 
 2012               		.loc 1 211 5 view .LVU462
 211:tmk_core/common/command.c **** 
 2013               		.loc 1 211 5 view .LVU463
 2014               	.LBB271:
 2015               	.LBB266:
 2016 046c 80E0      		ldi r24,lo8(__c.3443)
 2017 046e 90E0      		ldi r25,hi8(__c.3443)
 2018 0470 0E94 0000 		call xputs
 213:tmk_core/common/command.c **** #ifndef PROTOCOL_VUSB
 2019               		.loc 1 213 5 view .LVU464
 2020 0474 0E94 0000 		call host_keyboard_leds
 2021               	.LBE266:
 2022               	.LBE271:
 213:tmk_core/common/command.c **** #ifndef PROTOCOL_VUSB
 2023               		.loc 1 213 5 view .LVU465
 213:tmk_core/common/command.c **** #ifndef PROTOCOL_VUSB
 2024               		.loc 1 213 5 view .LVU466
 2025               	.LBB272:
 2026               	.LBB267:
 2027 0478 1F92      		push __zero_reg__
 2028               	.LCFI126:
 2029               		.cfi_def_cfa_offset 5
 2030 047a 8F93      		push r24
 2031               	.LCFI127:
 2032               		.cfi_def_cfa_offset 6
 2033 047c 80E0      		ldi r24,lo8(__c.3445)
 2034 047e 90E0      		ldi r25,hi8(__c.3445)
 2035 0480 9F93      		push r25
 2036               	.LCFI128:
 2037               		.cfi_def_cfa_offset 7
 2038 0482 8F93      		push r24
 2039               	.LCFI129:
 2040               		.cfi_def_cfa_offset 8
 2041 0484 0E94 0000 		call __xprintf
 216:tmk_core/common/command.c ****     print_val_hex8(keyboard_idle);
 2042               		.loc 1 216 5 view .LVU467
 2043               	.LBE267:
 2044               	.LBE272:
 216:tmk_core/common/command.c ****     print_val_hex8(keyboard_idle);
 2045               		.loc 1 216 5 view .LVU468
 216:tmk_core/common/command.c ****     print_val_hex8(keyboard_idle);
 2046               		.loc 1 216 5 view .LVU469
 2047               	.LBB273:
 2048               	.LBB268:
 2049 0488 8091 0000 		lds r24,keyboard_protocol
 2050 048c 1F92      		push __zero_reg__
 2051               	.LCFI130:
 2052               		.cfi_def_cfa_offset 9
 2053 048e 8F93      		push r24
 2054               	.LCFI131:
 2055               		.cfi_def_cfa_offset 10
 2056 0490 80E0      		ldi r24,lo8(__c.3447)
 2057 0492 90E0      		ldi r25,hi8(__c.3447)
 2058 0494 9F93      		push r25
 2059               	.LCFI132:
 2060               		.cfi_def_cfa_offset 11
 2061 0496 8F93      		push r24
 2062               	.LCFI133:
 2063               		.cfi_def_cfa_offset 12
 2064 0498 0E94 0000 		call __xprintf
 217:tmk_core/common/command.c **** #endif
 2065               		.loc 1 217 5 view .LVU470
 2066               	.LBE268:
 2067               	.LBE273:
 217:tmk_core/common/command.c **** #endif
 2068               		.loc 1 217 5 view .LVU471
 217:tmk_core/common/command.c **** #endif
 2069               		.loc 1 217 5 view .LVU472
 2070               	.LBB274:
 2071               	.LBB269:
 2072 049c 8091 0000 		lds r24,keyboard_idle
 2073 04a0 1F92      		push __zero_reg__
 2074               	.LCFI134:
 2075               		.cfi_def_cfa_offset 13
 2076 04a2 8F93      		push r24
 2077               	.LCFI135:
 2078               		.cfi_def_cfa_offset 14
 2079 04a4 80E0      		ldi r24,lo8(__c.3449)
 2080 04a6 90E0      		ldi r25,hi8(__c.3449)
 2081 04a8 9F93      		push r25
 2082               	.LCFI136:
 2083               		.cfi_def_cfa_offset 15
 2084 04aa 8F93      		push r24
 2085               	.LCFI137:
 2086               		.cfi_def_cfa_offset 16
 2087 04ac 0E94 0000 		call __xprintf
 222:tmk_core/common/command.c **** 
 2088               		.loc 1 222 5 view .LVU473
 2089 04b0 0E94 0000 		call timer_read32
 2090               	.LBE269:
 2091               	.LBE274:
 222:tmk_core/common/command.c **** 
 2092               		.loc 1 222 5 view .LVU474
 222:tmk_core/common/command.c **** 
 2093               		.loc 1 222 5 view .LVU475
 2094               	.LBB275:
 2095               	.LBB270:
 2096 04b4 9F93      		push r25
 2097               	.LCFI138:
 2098               		.cfi_def_cfa_offset 17
 2099 04b6 8F93      		push r24
 2100               	.LCFI139:
 2101               		.cfi_def_cfa_offset 18
 2102 04b8 7F93      		push r23
 2103               	.LCFI140:
 2104               		.cfi_def_cfa_offset 19
 2105 04ba 6F93      		push r22
 2106               	.LCFI141:
 2107               		.cfi_def_cfa_offset 20
 2108 04bc 80E0      		ldi r24,lo8(__c.3451)
 2109 04be 90E0      		ldi r25,hi8(__c.3451)
 2110 04c0 9F93      		push r25
 2111               	.LCFI142:
 2112               		.cfi_def_cfa_offset 21
 2113 04c2 8F93      		push r24
 2114               	.LCFI143:
 2115               		.cfi_def_cfa_offset 22
 2116 04c4 0E94 0000 		call __xprintf
 237:tmk_core/common/command.c **** }
 2117               		.loc 1 237 5 view .LVU476
 222:tmk_core/common/command.c **** 
 2118               		.loc 1 222 5 is_stmt 0 view .LVU477
 2119 04c8 8DB7      		in r24,__SP_L__
 2120 04ca 9EB7      		in r25,__SP_H__
 2121 04cc 4296      		adiw r24,18
 2122 04ce 0FB6      		in __tmp_reg__,__SREG__
 2123 04d0 F894      		cli
 2124 04d2 9EBF      		out __SP_H__,r25
 2125 04d4 0FBE      		out __SREG__,__tmp_reg__
 2126 04d6 8DBF      		out __SP_L__,r24
 2127               	.LCFI144:
 2128               		.cfi_def_cfa_offset 4
 2129 04d8 00C0      		rjmp .L98
 2130               	.L69:
 2131               	.LBE270:
 2132               	.LBE275:
 516:tmk_core/common/command.c ****             break;
 2133               		.loc 1 516 13 is_stmt 1 view .LVU478
 2134 04da 8953      		subi r24,lo8(-(-57))
 2135 04dc 00C0      		rjmp .L97
 2136               		.cfi_endproc
 2137               	.LFE26:
 2139               		.section	.text.command_extra,"ax",@progbits
 2140               		.weak	command_extra
 2142               	command_extra:
 2143               	.LVL47:
 2144               	.LFB20:
 103:tmk_core/common/command.c ****     (void)code;
 2145               		.loc 1 103 34 view -0
 2146               		.cfi_startproc
 2147               	/* prologue: function */
 2148               	/* frame size = 0 */
 2149               	/* stack size = 0 */
 2150               	.L__stack_usage = 0
 104:tmk_core/common/command.c ****     return false;
 2151               		.loc 1 104 5 view .LVU480
 105:tmk_core/common/command.c **** }
 2152               		.loc 1 105 5 view .LVU481
 106:tmk_core/common/command.c **** 
 2153               		.loc 1 106 1 is_stmt 0 view .LVU482
 2154 0000 80E0      		ldi r24,0
 2155               	.LVL48:
 2156               	/* epilogue start */
 106:tmk_core/common/command.c **** 
 2157               		.loc 1 106 1 view .LVU483
 2158 0002 0895      		ret
 2159               		.cfi_endproc
 2160               	.LFE20:
 2162               		.set	command_extra.localalias.0,command_extra
 2163               		.section	.text.command_console_extra,"ax",@progbits
 2164               		.weak	command_console_extra
 2166               	command_console_extra:
 2167               	.LFB37:
 2168               		.cfi_startproc
 2169               	/* prologue: function */
 2170               	/* frame size = 0 */
 2171               	/* stack size = 0 */
 2172               	.L__stack_usage = 0
 2173 0000 0C94 0000 		jmp command_extra.localalias.0
 2174               		.cfi_endproc
 2175               	.LFE37:
 2177               		.section	.text.numkey2num,"ax",@progbits
 2178               	.global	numkey2num
 2180               	numkey2num:
 2181               	.LVL49:
 2182               	.LFB34:
 791:tmk_core/common/command.c ****     switch (code) {
 2183               		.loc 1 791 34 is_stmt 1 view -0
 2184               		.cfi_startproc
 2185               	/* prologue: function */
 2186               	/* frame size = 0 */
 2187               	/* stack size = 0 */
 2188               	.L__stack_usage = 0
 792:tmk_core/common/command.c ****         case KC_1:
 2189               		.loc 1 792 5 view .LVU485
 2190 0000 8E51      		subi r24,lo8(-(-30))
 2191               	.LVL50:
 792:tmk_core/common/command.c ****         case KC_1:
 2192               		.loc 1 792 5 is_stmt 0 view .LVU486
 2193 0002 8A30      		cpi r24,lo8(10)
 2194 0004 00F4      		brsh .L106
 2195 0006 E82F      		mov r30,r24
 2196 0008 F0E0      		ldi r31,0
 2197 000a E050      		subi r30,lo8(-(CSWTCH.55))
 2198 000c F040      		sbci r31,hi8(-(CSWTCH.55))
 2199 000e 8081      		ld r24,Z
 2200               	.LVL51:
 792:tmk_core/common/command.c ****         case KC_1:
 2201               		.loc 1 792 5 view .LVU487
 2202 0010 0895      		ret
 2203               	.L106:
 791:tmk_core/common/command.c ****     switch (code) {
 2204               		.loc 1 791 34 view .LVU488
 2205 0012 80E0      		ldi r24,0
 2206               	/* epilogue start */
 815:tmk_core/common/command.c **** 
 2207               		.loc 1 815 1 view .LVU489
 2208 0014 0895      		ret
 2209               		.cfi_endproc
 2210               	.LFE34:
 2212               		.section	.text.command_proc,"ax",@progbits
 2213               	.global	command_proc
 2215               	command_proc:
 2216               	.LFB19:
  76:tmk_core/common/command.c ****     switch (command_state) {
 2217               		.loc 1 76 33 is_stmt 1 view -0
 2218               		.cfi_startproc
 2219 0000 CF93      		push r28
 2220               	.LCFI145:
 2221               		.cfi_def_cfa_offset 3
 2222               		.cfi_offset 28, -2
 2223               	/* prologue: function */
 2224               	/* frame size = 0 */
 2225               	/* stack size = 1 */
 2226               	.L__stack_usage = 1
 2227 0002 C82F      		mov r28,r24
  77:tmk_core/common/command.c ****         case ONESHOT:
 2228               		.loc 1 77 5 view .LVU491
 2229 0004 8091 0000 		lds r24,command_state
 2230 0008 8130      		cpi r24,lo8(1)
 2231 000a 01F0      		breq .L108
 2232 000c 8823      		tst r24
 2233 000e 01F0      		breq .L109
 2234 0010 8230      		cpi r24,lo8(2)
 2235 0012 01F4      		brne .+2
 2236 0014 00C0      		rjmp .L110
  94:tmk_core/common/command.c ****             return false;
 2237               		.loc 1 94 13 view .LVU492
  94:tmk_core/common/command.c ****             return false;
 2238               		.loc 1 94 27 is_stmt 0 view .LVU493
 2239 0016 1092 0000 		sts command_state,__zero_reg__
  95:tmk_core/common/command.c ****     }
 2240               		.loc 1 95 13 is_stmt 1 view .LVU494
 2241               	.L138:
  79:tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
 2242               		.loc 1 79 39 is_stmt 0 view .LVU495
 2243 001a 80E0      		ldi r24,0
 2244 001c 00C0      		rjmp .L107
 2245               	.L109:
  79:tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
 2246               		.loc 1 79 13 is_stmt 1 view .LVU496
  79:tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
 2247               		.loc 1 79 18 is_stmt 0 view .LVU497
 2248 001e 0E94 0000 		call get_mods
  79:tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
 2249               		.loc 1 79 16 view .LVU498
 2250 0022 8232      		cpi r24,lo8(34)
 2251 0024 01F4      		brne .L138
 2252               	.L171:
  84:tmk_core/common/command.c ****             else
 2253               		.loc 1 84 17 is_stmt 1 view .LVU499
  84:tmk_core/common/command.c ****             else
 2254               		.loc 1 84 25 is_stmt 0 view .LVU500
 2255 0026 8C2F      		mov r24,r28
 2256 0028 0E94 0000 		call command_extra
  84:tmk_core/common/command.c ****             else
 2257               		.loc 1 84 45 view .LVU501
 2258 002c 8111      		cpse r24,__zero_reg__
 2259 002e 00C0      		rjmp .L140
  84:tmk_core/common/command.c ****             else
 2260               		.loc 1 84 48 discriminator 2 view .LVU502
 2261 0030 8C2F      		mov r24,r28
 2262 0032 0E94 0000 		call command_common
 2263               	.L116:
  86:tmk_core/common/command.c ****             break;
 2264               		.loc 1 86 53 discriminator 6 view .LVU503
 2265 0036 8170      		andi r24,lo8(1)
 2266               	.L107:
 2267               	/* epilogue start */
  98:tmk_core/common/command.c **** 
 2268               		.loc 1 98 1 view .LVU504
 2269 0038 CF91      		pop r28
 2270 003a 0895      		ret
 2271               	.L108:
  81:tmk_core/common/command.c ****         case CONSOLE:
 2272               		.loc 1 81 13 is_stmt 1 view .LVU505
  83:tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 2273               		.loc 1 83 13 view .LVU506
  83:tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 2274               		.loc 1 83 17 is_stmt 0 view .LVU507
 2275 003c 0E94 0000 		call get_mods
  83:tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 2276               		.loc 1 83 16 view .LVU508
 2277 0040 8232      		cpi r24,lo8(34)
 2278 0042 01F0      		breq .L171
  86:tmk_core/common/command.c ****             break;
 2279               		.loc 1 86 17 is_stmt 1 view .LVU509
  86:tmk_core/common/command.c ****             break;
 2280               		.loc 1 86 25 is_stmt 0 view .LVU510
 2281 0044 8C2F      		mov r24,r28
 2282 0046 0E94 0000 		call command_console_extra
  86:tmk_core/common/command.c ****             break;
 2283               		.loc 1 86 53 view .LVU511
 2284 004a 8111      		cpse r24,__zero_reg__
 2285 004c 00C0      		rjmp .L141
 2286               	.LBB312:
 2287               	.LBI312:
 552:tmk_core/common/command.c ****     switch (code) {
 2288               		.loc 1 552 13 is_stmt 1 view .LVU512
 2289               	.LBB313:
 553:tmk_core/common/command.c ****         case KC_H:
 2290               		.loc 1 553 5 view .LVU513
 2291 004e C431      		cpi r28,lo8(20)
 2292 0050 01F0      		breq .L117
 2293 0052 00F4      		brsh .L118
 2294 0054 CB30      		cpi r28,lo8(11)
 2295 0056 01F0      		breq .L119
 2296 0058 C031      		cpi r28,lo8(16)
 2297 005a 01F0      		breq .L120
 2298               	.L121:
 570:tmk_core/common/command.c ****             return false;
 2299               		.loc 1 570 13 view .LVU514
 2300               	.LBE313:
 2301               	.LBE312:
 570:tmk_core/common/command.c ****             return false;
 2302               		.loc 1 570 13 view .LVU515
 570:tmk_core/common/command.c ****             return false;
 2303               		.loc 1 570 13 view .LVU516
 2304               	.LBB325:
 2305               	.LBB318:
 2306 005c 80E0      		ldi r24,lo8(__c.3626)
 2307 005e 90E0      		ldi r25,hi8(__c.3626)
 2308 0060 0E94 0000 		call xputs
 2309 0064 00C0      		rjmp .L164
 2310               	.L140:
 2311               	.LBE318:
 2312               	.LBE325:
  84:tmk_core/common/command.c ****             else
 2313               		.loc 1 84 45 is_stmt 0 view .LVU517
 2314 0066 81E0      		ldi r24,lo8(1)
 2315 0068 90E0      		ldi r25,0
 2316 006a 00C0      		rjmp .L116
 2317               	.L118:
 2318               	.LBB326:
 2319               	.LBB319:
 553:tmk_core/common/command.c ****         case KC_H:
 2320               		.loc 1 553 5 view .LVU518
 2321 006c C932      		cpi r28,lo8(41)
 2322 006e 01F0      		breq .L117
 2323 0070 C833      		cpi r28,lo8(56)
 2324 0072 01F4      		brne .L121
 2325               	.L119:
 556:tmk_core/common/command.c ****             break;
 2326               		.loc 1 556 13 is_stmt 1 view .LVU519
 2327               	.LBB314:
 2328               	.LBI314:
 543:tmk_core/common/command.c ****     print("\n\t- Console -\n"
 2329               		.loc 1 543 13 view .LVU520
 2330               	.LBB315:
 544:tmk_core/common/command.c ****           "ESC/q:	quit\n"
 2331               		.loc 1 544 5 view .LVU521
 2332               	.LBE315:
 2333               	.LBE314:
 2334               	.LBE319:
 2335               	.LBE326:
 544:tmk_core/common/command.c ****           "ESC/q:	quit\n"
 2336               		.loc 1 544 5 view .LVU522
 544:tmk_core/common/command.c ****           "ESC/q:	quit\n"
 2337               		.loc 1 544 5 view .LVU523
 2338               	.LBB327:
 2339               	.LBB320:
 2340               	.LBB317:
 2341               	.LBB316:
 2342 0074 80E0      		ldi r24,lo8(__c.3612)
 2343 0076 90E0      		ldi r25,hi8(__c.3612)
 2344 0078 0E94 0000 		call xputs
 2345               	.LBE316:
 2346               	.LBE317:
 557:tmk_core/common/command.c ****         case KC_Q:
 2347               		.loc 1 557 13 view .LVU524
 573:tmk_core/common/command.c ****     return true;
 2348               		.loc 1 573 5 view .LVU525
 2349               	.LBE320:
 2350               	.LBE327:
 573:tmk_core/common/command.c ****     return true;
 2351               		.loc 1 573 5 view .LVU526
 573:tmk_core/common/command.c ****     return true;
 2352               		.loc 1 573 5 view .LVU527
 2353               	.LBB328:
 2354               	.LBB321:
 2355 007c 80E0      		ldi r24,lo8(__c.3628)
 2356 007e 90E0      		ldi r25,hi8(__c.3628)
 2357 0080 0E94 0000 		call xputs
 574:tmk_core/common/command.c **** }
 2358               		.loc 1 574 5 view .LVU528
 2359               	.L141:
 2360               	.LBE321:
 2361               	.LBE328:
  86:tmk_core/common/command.c ****             break;
 2362               		.loc 1 86 53 is_stmt 0 view .LVU529
 2363 0084 81E0      		ldi r24,lo8(1)
 2364 0086 00C0      		rjmp .L116
 2365               	.L117:
 2366               	.LBB329:
 2367               	.LBB322:
 560:tmk_core/common/command.c ****             return false;
 2368               		.loc 1 560 13 is_stmt 1 view .LVU530
 560:tmk_core/common/command.c ****             return false;
 2369               		.loc 1 560 27 is_stmt 0 view .LVU531
 2370 0088 1092 0000 		sts command_state,__zero_reg__
 561:tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 2371               		.loc 1 561 13 is_stmt 1 view .LVU532
 2372               	.L164:
 571:tmk_core/common/command.c ****     }
 2373               		.loc 1 571 13 view .LVU533
 2374               	.LBE322:
 2375               	.LBE329:
  86:tmk_core/common/command.c ****             break;
 2376               		.loc 1 86 53 is_stmt 0 view .LVU534
 2377 008c 80E0      		ldi r24,0
 2378 008e 00C0      		rjmp .L116
 2379               	.L120:
 2380               	.LBB330:
 2381               	.LBB323:
 564:tmk_core/common/command.c ****             print("M> ");
 2382               		.loc 1 564 13 is_stmt 1 view .LVU535
 2383 0090 0E94 0000 		call mousekey_console_help
 565:tmk_core/common/command.c ****             command_state = MOUSEKEY;
 2384               		.loc 1 565 13 view .LVU536
 2385               	.LBE323:
 2386               	.LBE330:
 565:tmk_core/common/command.c ****             command_state = MOUSEKEY;
 2387               		.loc 1 565 13 view .LVU537
 565:tmk_core/common/command.c ****             command_state = MOUSEKEY;
 2388               		.loc 1 565 13 view .LVU538
 2389               	.LBB331:
 2390               	.LBB324:
 2391 0094 80E0      		ldi r24,lo8(__c.3623)
 2392 0096 90E0      		ldi r25,hi8(__c.3623)
 2393 0098 0E94 0000 		call xputs
 566:tmk_core/common/command.c ****             return true;
 2394               		.loc 1 566 13 view .LVU539
 566:tmk_core/common/command.c ****             return true;
 2395               		.loc 1 566 27 is_stmt 0 view .LVU540
 2396 009c 82E0      		ldi r24,lo8(2)
 2397 009e 8093 0000 		sts command_state,r24
 567:tmk_core/common/command.c **** #endif
 2398               		.loc 1 567 13 is_stmt 1 view .LVU541
 2399 00a2 00C0      		rjmp .L141
 2400               	.L110:
 2401               	.LBE324:
 2402               	.LBE331:
  87:tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 2403               		.loc 1 87 13 view .LVU542
  90:tmk_core/common/command.c ****             break;
 2404               		.loc 1 90 13 view .LVU543
 2405               	.LBB332:
 2406               	.LBI332:
 727:tmk_core/common/command.c ****     switch (code) {
 2407               		.loc 1 727 13 view .LVU544
 2408               	.LBB333:
 728:tmk_core/common/command.c ****         case KC_H:
 2409               		.loc 1 728 5 view .LVU545
 2410 00a4 C432      		cpi r28,lo8(36)
 2411 00a6 00F4      		brsh .L122
 2412 00a8 CE31      		cpi r28,lo8(30)
 2413 00aa 00F0      		brlo .+2
 2414 00ac 00C0      		rjmp .L123
 2415 00ae CB30      		cpi r28,lo8(11)
 2416 00b0 01F0      		breq .L124
 2417 00b2 00F4      		brsh .L125
 2418 00b4 C730      		cpi r28,lo8(7)
 2419 00b6 01F4      		brne .+2
 2420 00b8 00C0      		rjmp .L126
 2421               	.L127:
 776:tmk_core/common/command.c ****             return false;
 2422               		.loc 1 776 13 view .LVU546
 2423               	.LBE333:
 2424               	.LBE332:
 776:tmk_core/common/command.c ****             return false;
 2425               		.loc 1 776 13 view .LVU547
 776:tmk_core/common/command.c ****             return false;
 2426               		.loc 1 776 13 view .LVU548
 2427               	.LBB399:
 2428               	.LBB374:
 2429 00ba 80E0      		ldi r24,lo8(__c.3750)
 2430 00bc 90E0      		ldi r25,hi8(__c.3750)
 2431               	.L168:
 782:tmk_core/common/command.c ****     }
 2432               		.loc 1 782 9 is_stmt 0 view .LVU549
 2433 00be 0E94 0000 		call xputs
 2434 00c2 00C0      		rjmp .L167
 2435               	.L125:
 728:tmk_core/common/command.c ****         case KC_H:
 2436               		.loc 1 728 5 view .LVU550
 2437 00c4 C331      		cpi r28,lo8(19)
 2438 00c6 01F0      		breq .L128
 2439 00c8 C431      		cpi r28,lo8(20)
 2440 00ca 01F4      		brne .L127
 2441               	.L129:
 735:tmk_core/common/command.c ****                 mousekey_param = 0;
 2442               		.loc 1 735 13 is_stmt 1 view .LVU551
 735:tmk_core/common/command.c ****                 mousekey_param = 0;
 2443               		.loc 1 735 16 is_stmt 0 view .LVU552
 2444 00cc 8091 0000 		lds r24,mousekey_param
 2445 00d0 8823      		tst r24
 2446 00d2 01F0      		breq .L136
 736:tmk_core/common/command.c ****             } else {
 2447               		.loc 1 736 17 is_stmt 1 view .LVU553
 736:tmk_core/common/command.c ****             } else {
 2448               		.loc 1 736 32 is_stmt 0 view .LVU554
 2449 00d4 1092 0000 		sts mousekey_param,__zero_reg__
 742:tmk_core/common/command.c ****         case KC_P:
 2450               		.loc 1 742 13 is_stmt 1 view .LVU555
 2451 00d8 00C0      		rjmp .L135
 2452               	.L122:
 728:tmk_core/common/command.c ****         case KC_H:
 2453               		.loc 1 728 5 is_stmt 0 view .LVU556
 2454 00da CB34      		cpi r28,lo8(75)
 2455 00dc 01F4      		brne .+2
 2456 00de 00C0      		rjmp .L130
 2457 00e0 00F4      		brsh .L131
 2458 00e2 C932      		cpi r28,lo8(41)
 2459 00e4 01F0      		breq .L129
 2460 00e6 C833      		cpi r28,lo8(56)
 2461 00e8 01F4      		brne .L127
 2462               	.L124:
 731:tmk_core/common/command.c ****             break;
 2463               		.loc 1 731 13 is_stmt 1 view .LVU557
 2464 00ea 0E94 0000 		call mousekey_console_help
 732:tmk_core/common/command.c ****         case KC_Q:
 2465               		.loc 1 732 13 view .LVU558
 2466               	.L135:
 779:tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 2467               		.loc 1 779 5 view .LVU559
 779:tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 2468               		.loc 1 779 9 is_stmt 0 view .LVU560
 2469 00ee 8091 0000 		lds r24,mousekey_param
 779:tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 2470               		.loc 1 779 8 view .LVU561
 2471 00f2 8823      		tst r24
 2472 00f4 01F4      		brne .+2
 2473 00f6 00C0      		rjmp .L137
 780:tmk_core/common/command.c ****     } else {
 2474               		.loc 1 780 9 is_stmt 1 view .LVU562
 2475               	.LBE374:
 2476               	.LBE399:
 780:tmk_core/common/command.c ****     } else {
 2477               		.loc 1 780 9 view .LVU563
 780:tmk_core/common/command.c ****     } else {
 2478               		.loc 1 780 9 view .LVU564
 2479               	.LBB400:
 2480               	.LBB375:
 2481 00f8 1F92      		push __zero_reg__
 2482               	.LCFI146:
 2483               		.cfi_def_cfa_offset 4
 2484 00fa 8F93      		push r24
 2485               	.LCFI147:
 2486               		.cfi_def_cfa_offset 5
 2487 00fc 80E0      		ldi r24,lo8(__c.3752)
 2488 00fe 90E0      		ldi r25,hi8(__c.3752)
 2489 0100 9F93      		push r25
 2490               	.LCFI148:
 2491               		.cfi_def_cfa_offset 6
 2492 0102 8F93      		push r24
 2493               	.LCFI149:
 2494               		.cfi_def_cfa_offset 7
 2495 0104 0E94 0000 		call __xprintf
 2496 0108 0F90      		pop __tmp_reg__
 2497 010a 0F90      		pop __tmp_reg__
 2498 010c 0F90      		pop __tmp_reg__
 2499 010e 0F90      		pop __tmp_reg__
 2500               	.LCFI150:
 2501               		.cfi_def_cfa_offset 3
 2502               	.L167:
 2503               	.LBE375:
 2504               	.LBE400:
  97:tmk_core/common/command.c **** }
 2505               		.loc 1 97 12 is_stmt 0 view .LVU565
 2506 0110 81E0      		ldi r24,lo8(1)
 2507 0112 00C0      		rjmp .L107
 2508               	.L131:
 2509               	.LBB401:
 2510               	.LBB376:
 728:tmk_core/common/command.c ****         case KC_H:
 2511               		.loc 1 728 5 view .LVU566
 2512 0114 C135      		cpi r28,lo8(81)
 2513 0116 01F4      		brne .+2
 2514 0118 00C0      		rjmp .L132
 2515 011a C235      		cpi r28,lo8(82)
 2516 011c 01F4      		brne .+2
 2517 011e 00C0      		rjmp .L133
 2518 0120 CE34      		cpi r28,lo8(78)
 2519 0122 01F4      		brne .L127
 764:tmk_core/common/command.c ****             break;
 2520               		.loc 1 764 13 is_stmt 1 view .LVU567
 2521 0124 6AE0      		ldi r22,lo8(10)
 2522 0126 00C0      		rjmp .L166
 2523               	.L136:
 738:tmk_core/common/command.c ****                 command_state = CONSOLE;
 2524               		.loc 1 738 17 view .LVU568
 2525               	.LBE376:
 2526               	.LBE401:
 738:tmk_core/common/command.c ****                 command_state = CONSOLE;
 2527               		.loc 1 738 17 view .LVU569
 738:tmk_core/common/command.c ****                 command_state = CONSOLE;
 2528               		.loc 1 738 17 view .LVU570
 2529               	.LBB402:
 2530               	.LBB377:
 2531 0128 80E0      		ldi r24,lo8(__c.3733)
 2532 012a 90E0      		ldi r25,hi8(__c.3733)
 2533 012c 0E94 0000 		call xputs
 739:tmk_core/common/command.c ****                 return false;
 2534               		.loc 1 739 17 view .LVU571
 739:tmk_core/common/command.c ****                 return false;
 2535               		.loc 1 739 31 is_stmt 0 view .LVU572
 2536 0130 81E0      		ldi r24,lo8(1)
 2537 0132 8093 0000 		sts command_state,r24
 740:tmk_core/common/command.c ****             }
 2538               		.loc 1 740 17 is_stmt 1 view .LVU573
 2539 0136 00C0      		rjmp .L107
 2540               	.L128:
 744:tmk_core/common/command.c ****             break;
 2541               		.loc 1 744 13 view .LVU574
 2542               	.LBB334:
 2543               	.LBI334:
 583:tmk_core/common/command.c **** // Print these variables if NO_PRINT or USER_PRINT are not defined.
 2544               		.loc 1 583 13 view .LVU575
 2545               	.LBB335:
 586:tmk_core/common/command.c ****     print("1: delay(*10ms): ");
 2546               		.loc 1 586 5 view .LVU576
 2547               	.LBE335:
 2548               	.LBE334:
 2549               	.LBE377:
 2550               	.LBE402:
 586:tmk_core/common/command.c ****     print("1: delay(*10ms): ");
 2551               		.loc 1 586 5 view .LVU577
 586:tmk_core/common/command.c ****     print("1: delay(*10ms): ");
 2552               		.loc 1 586 5 view .LVU578
 2553               	.LBB403:
 2554               	.LBB378:
 2555               	.LBB355:
 2556               	.LBB336:
 2557 0138 80E0      		ldi r24,lo8(__c.3634)
 2558 013a 90E0      		ldi r25,hi8(__c.3634)
 2559 013c 0E94 0000 		call xputs
 587:tmk_core/common/command.c ****     pdec(mk_delay);
 2560               		.loc 1 587 5 view .LVU579
 2561               	.LBE336:
 2562               	.LBE355:
 2563               	.LBE378:
 2564               	.LBE403:
 587:tmk_core/common/command.c ****     pdec(mk_delay);
 2565               		.loc 1 587 5 view .LVU580
 587:tmk_core/common/command.c ****     pdec(mk_delay);
 2566               		.loc 1 587 5 view .LVU581
 2567               	.LBB404:
 2568               	.LBB379:
 2569               	.LBB356:
 2570               	.LBB337:
 2571 0140 80E0      		ldi r24,lo8(__c.3636)
 2572 0142 90E0      		ldi r25,hi8(__c.3636)
 2573 0144 0E94 0000 		call xputs
 588:tmk_core/common/command.c ****     print("\n");
 2574               		.loc 1 588 5 view .LVU582
 2575               	.LBE337:
 2576               	.LBE356:
 2577               	.LBE379:
 2578               	.LBE404:
 588:tmk_core/common/command.c ****     print("\n");
 2579               		.loc 1 588 5 view .LVU583
 588:tmk_core/common/command.c ****     print("\n");
 2580               		.loc 1 588 5 view .LVU584
 2581               	.LBB405:
 2582               	.LBB380:
 2583               	.LBB357:
 2584               	.LBB338:
 2585 0148 8091 0000 		lds r24,mk_delay
 2586 014c 1F92      		push __zero_reg__
 2587               	.LCFI151:
 2588               		.cfi_def_cfa_offset 4
 2589 014e 8F93      		push r24
 2590               	.LCFI152:
 2591               		.cfi_def_cfa_offset 5
 2592 0150 80E0      		ldi r24,lo8(__c.3638)
 2593 0152 90E0      		ldi r25,hi8(__c.3638)
 2594 0154 9F93      		push r25
 2595               	.LCFI153:
 2596               		.cfi_def_cfa_offset 6
 2597 0156 8F93      		push r24
 2598               	.LCFI154:
 2599               		.cfi_def_cfa_offset 7
 2600 0158 0E94 0000 		call __xprintf
 589:tmk_core/common/command.c ****     print("2: interval(ms): ");
 2601               		.loc 1 589 5 view .LVU585
 2602               	.LBE338:
 2603               	.LBE357:
 2604               	.LBE380:
 2605               	.LBE405:
 589:tmk_core/common/command.c ****     print("2: interval(ms): ");
 2606               		.loc 1 589 5 view .LVU586
 589:tmk_core/common/command.c ****     print("2: interval(ms): ");
 2607               		.loc 1 589 5 view .LVU587
 2608               	.LBB406:
 2609               	.LBB381:
 2610               	.LBB358:
 2611               	.LBB339:
 2612 015c 80E0      		ldi r24,lo8(__c.3640)
 2613 015e 90E0      		ldi r25,hi8(__c.3640)
 2614 0160 0E94 0000 		call xputs
 590:tmk_core/common/command.c ****     pdec(mk_interval);
 2615               		.loc 1 590 5 view .LVU588
 2616               	.LBE339:
 2617               	.LBE358:
 2618               	.LBE381:
 2619               	.LBE406:
 590:tmk_core/common/command.c ****     pdec(mk_interval);
 2620               		.loc 1 590 5 view .LVU589
 590:tmk_core/common/command.c ****     pdec(mk_interval);
 2621               		.loc 1 590 5 view .LVU590
 2622               	.LBB407:
 2623               	.LBB382:
 2624               	.LBB359:
 2625               	.LBB340:
 2626 0164 80E0      		ldi r24,lo8(__c.3642)
 2627 0166 90E0      		ldi r25,hi8(__c.3642)
 2628 0168 0E94 0000 		call xputs
 591:tmk_core/common/command.c ****     print("\n");
 2629               		.loc 1 591 5 view .LVU591
 2630               	.LBE340:
 2631               	.LBE359:
 2632               	.LBE382:
 2633               	.LBE407:
 591:tmk_core/common/command.c ****     print("\n");
 2634               		.loc 1 591 5 view .LVU592
 591:tmk_core/common/command.c ****     print("\n");
 2635               		.loc 1 591 5 view .LVU593
 2636               	.LBB408:
 2637               	.LBB383:
 2638               	.LBB360:
 2639               	.LBB341:
 2640 016c 8091 0000 		lds r24,mk_interval
 2641 0170 1F92      		push __zero_reg__
 2642               	.LCFI155:
 2643               		.cfi_def_cfa_offset 8
 2644 0172 8F93      		push r24
 2645               	.LCFI156:
 2646               		.cfi_def_cfa_offset 9
 2647 0174 80E0      		ldi r24,lo8(__c.3644)
 2648 0176 90E0      		ldi r25,hi8(__c.3644)
 2649 0178 9F93      		push r25
 2650               	.LCFI157:
 2651               		.cfi_def_cfa_offset 10
 2652 017a 8F93      		push r24
 2653               	.LCFI158:
 2654               		.cfi_def_cfa_offset 11
 2655 017c 0E94 0000 		call __xprintf
 592:tmk_core/common/command.c ****     print("3: max_speed: ");
 2656               		.loc 1 592 5 view .LVU594
 2657               	.LBE341:
 2658               	.LBE360:
 2659               	.LBE383:
 2660               	.LBE408:
 592:tmk_core/common/command.c ****     print("3: max_speed: ");
 2661               		.loc 1 592 5 view .LVU595
 592:tmk_core/common/command.c ****     print("3: max_speed: ");
 2662               		.loc 1 592 5 view .LVU596
 2663               	.LBB409:
 2664               	.LBB384:
 2665               	.LBB361:
 2666               	.LBB342:
 2667 0180 80E0      		ldi r24,lo8(__c.3646)
 2668 0182 90E0      		ldi r25,hi8(__c.3646)
 2669 0184 0E94 0000 		call xputs
 593:tmk_core/common/command.c ****     pdec(mk_max_speed);
 2670               		.loc 1 593 5 view .LVU597
 2671               	.LBE342:
 2672               	.LBE361:
 2673               	.LBE384:
 2674               	.LBE409:
 593:tmk_core/common/command.c ****     pdec(mk_max_speed);
 2675               		.loc 1 593 5 view .LVU598
 593:tmk_core/common/command.c ****     pdec(mk_max_speed);
 2676               		.loc 1 593 5 view .LVU599
 2677               	.LBB410:
 2678               	.LBB385:
 2679               	.LBB362:
 2680               	.LBB343:
 2681 0188 80E0      		ldi r24,lo8(__c.3648)
 2682 018a 90E0      		ldi r25,hi8(__c.3648)
 2683 018c 0E94 0000 		call xputs
 594:tmk_core/common/command.c ****     print("\n");
 2684               		.loc 1 594 5 view .LVU600
 2685               	.LBE343:
 2686               	.LBE362:
 2687               	.LBE385:
 2688               	.LBE410:
 594:tmk_core/common/command.c ****     print("\n");
 2689               		.loc 1 594 5 view .LVU601
 594:tmk_core/common/command.c ****     print("\n");
 2690               		.loc 1 594 5 view .LVU602
 2691               	.LBB411:
 2692               	.LBB386:
 2693               	.LBB363:
 2694               	.LBB344:
 2695 0190 8091 0000 		lds r24,mk_max_speed
 2696 0194 1F92      		push __zero_reg__
 2697               	.LCFI159:
 2698               		.cfi_def_cfa_offset 12
 2699 0196 8F93      		push r24
 2700               	.LCFI160:
 2701               		.cfi_def_cfa_offset 13
 2702 0198 80E0      		ldi r24,lo8(__c.3650)
 2703 019a 90E0      		ldi r25,hi8(__c.3650)
 2704 019c 9F93      		push r25
 2705               	.LCFI161:
 2706               		.cfi_def_cfa_offset 14
 2707 019e 8F93      		push r24
 2708               	.LCFI162:
 2709               		.cfi_def_cfa_offset 15
 2710 01a0 0E94 0000 		call __xprintf
 595:tmk_core/common/command.c ****     print("4: time_to_max: ");
 2711               		.loc 1 595 5 view .LVU603
 2712               	.LBE344:
 2713               	.LBE363:
 2714               	.LBE386:
 2715               	.LBE411:
 595:tmk_core/common/command.c ****     print("4: time_to_max: ");
 2716               		.loc 1 595 5 view .LVU604
 595:tmk_core/common/command.c ****     print("4: time_to_max: ");
 2717               		.loc 1 595 5 view .LVU605
 2718               	.LBB412:
 2719               	.LBB387:
 2720               	.LBB364:
 2721               	.LBB345:
 2722 01a4 80E0      		ldi r24,lo8(__c.3652)
 2723 01a6 90E0      		ldi r25,hi8(__c.3652)
 2724 01a8 0E94 0000 		call xputs
 596:tmk_core/common/command.c ****     pdec(mk_time_to_max);
 2725               		.loc 1 596 5 view .LVU606
 2726               	.LBE345:
 2727               	.LBE364:
 2728               	.LBE387:
 2729               	.LBE412:
 596:tmk_core/common/command.c ****     pdec(mk_time_to_max);
 2730               		.loc 1 596 5 view .LVU607
 596:tmk_core/common/command.c ****     pdec(mk_time_to_max);
 2731               		.loc 1 596 5 view .LVU608
 2732               	.LBB413:
 2733               	.LBB388:
 2734               	.LBB365:
 2735               	.LBB346:
 2736 01ac 80E0      		ldi r24,lo8(__c.3654)
 2737 01ae 90E0      		ldi r25,hi8(__c.3654)
 2738 01b0 0E94 0000 		call xputs
 597:tmk_core/common/command.c ****     print("\n");
 2739               		.loc 1 597 5 view .LVU609
 2740               	.LBE346:
 2741               	.LBE365:
 2742               	.LBE388:
 2743               	.LBE413:
 597:tmk_core/common/command.c ****     print("\n");
 2744               		.loc 1 597 5 view .LVU610
 597:tmk_core/common/command.c ****     print("\n");
 2745               		.loc 1 597 5 view .LVU611
 2746               	.LBB414:
 2747               	.LBB389:
 2748               	.LBB366:
 2749               	.LBB347:
 2750 01b4 8091 0000 		lds r24,mk_time_to_max
 2751 01b8 1F92      		push __zero_reg__
 2752               	.LCFI163:
 2753               		.cfi_def_cfa_offset 16
 2754 01ba 8F93      		push r24
 2755               	.LCFI164:
 2756               		.cfi_def_cfa_offset 17
 2757 01bc 80E0      		ldi r24,lo8(__c.3656)
 2758 01be 90E0      		ldi r25,hi8(__c.3656)
 2759 01c0 9F93      		push r25
 2760               	.LCFI165:
 2761               		.cfi_def_cfa_offset 18
 2762 01c2 8F93      		push r24
 2763               	.LCFI166:
 2764               		.cfi_def_cfa_offset 19
 2765 01c4 0E94 0000 		call __xprintf
 598:tmk_core/common/command.c ****     print("5: wheel_max_speed: ");
 2766               		.loc 1 598 5 view .LVU612
 2767               	.LBE347:
 2768               	.LBE366:
 2769               	.LBE389:
 2770               	.LBE414:
 598:tmk_core/common/command.c ****     print("5: wheel_max_speed: ");
 2771               		.loc 1 598 5 view .LVU613
 598:tmk_core/common/command.c ****     print("5: wheel_max_speed: ");
 2772               		.loc 1 598 5 view .LVU614
 2773               	.LBB415:
 2774               	.LBB390:
 2775               	.LBB367:
 2776               	.LBB348:
 2777 01c8 80E0      		ldi r24,lo8(__c.3658)
 2778 01ca 90E0      		ldi r25,hi8(__c.3658)
 2779 01cc 0E94 0000 		call xputs
 599:tmk_core/common/command.c ****     pdec(mk_wheel_max_speed);
 2780               		.loc 1 599 5 view .LVU615
 2781               	.LBE348:
 2782               	.LBE367:
 2783               	.LBE390:
 2784               	.LBE415:
 599:tmk_core/common/command.c ****     pdec(mk_wheel_max_speed);
 2785               		.loc 1 599 5 view .LVU616
 599:tmk_core/common/command.c ****     pdec(mk_wheel_max_speed);
 2786               		.loc 1 599 5 view .LVU617
 2787               	.LBB416:
 2788               	.LBB391:
 2789               	.LBB368:
 2790               	.LBB349:
 2791 01d0 80E0      		ldi r24,lo8(__c.3660)
 2792 01d2 90E0      		ldi r25,hi8(__c.3660)
 2793 01d4 0E94 0000 		call xputs
 600:tmk_core/common/command.c ****     print("\n");
 2794               		.loc 1 600 5 view .LVU618
 2795               	.LBE349:
 2796               	.LBE368:
 2797               	.LBE391:
 2798               	.LBE416:
 600:tmk_core/common/command.c ****     print("\n");
 2799               		.loc 1 600 5 view .LVU619
 600:tmk_core/common/command.c ****     print("\n");
 2800               		.loc 1 600 5 view .LVU620
 2801               	.LBB417:
 2802               	.LBB392:
 2803               	.LBB369:
 2804               	.LBB350:
 2805 01d8 8091 0000 		lds r24,mk_wheel_max_speed
 2806 01dc 1F92      		push __zero_reg__
 2807               	.LCFI167:
 2808               		.cfi_def_cfa_offset 20
 2809 01de 8F93      		push r24
 2810               	.LCFI168:
 2811               		.cfi_def_cfa_offset 21
 2812 01e0 80E0      		ldi r24,lo8(__c.3662)
 2813 01e2 90E0      		ldi r25,hi8(__c.3662)
 2814 01e4 9F93      		push r25
 2815               	.LCFI169:
 2816               		.cfi_def_cfa_offset 22
 2817 01e6 8F93      		push r24
 2818               	.LCFI170:
 2819               		.cfi_def_cfa_offset 23
 2820 01e8 0E94 0000 		call __xprintf
 601:tmk_core/common/command.c ****     print("6: wheel_time_to_max: ");
 2821               		.loc 1 601 5 view .LVU621
 2822               	.LBE350:
 2823               	.LBE369:
 2824               	.LBE392:
 2825               	.LBE417:
 601:tmk_core/common/command.c ****     print("6: wheel_time_to_max: ");
 2826               		.loc 1 601 5 view .LVU622
 601:tmk_core/common/command.c ****     print("6: wheel_time_to_max: ");
 2827               		.loc 1 601 5 view .LVU623
 2828               	.LBB418:
 2829               	.LBB393:
 2830               	.LBB370:
 2831               	.LBB351:
 2832 01ec 80E0      		ldi r24,lo8(__c.3664)
 2833 01ee 90E0      		ldi r25,hi8(__c.3664)
 2834 01f0 0E94 0000 		call xputs
 602:tmk_core/common/command.c ****     pdec(mk_wheel_time_to_max);
 2835               		.loc 1 602 5 view .LVU624
 2836               	.LBE351:
 2837               	.LBE370:
 2838               	.LBE393:
 2839               	.LBE418:
 602:tmk_core/common/command.c ****     pdec(mk_wheel_time_to_max);
 2840               		.loc 1 602 5 view .LVU625
 602:tmk_core/common/command.c ****     pdec(mk_wheel_time_to_max);
 2841               		.loc 1 602 5 view .LVU626
 2842               	.LBB419:
 2843               	.LBB394:
 2844               	.LBB371:
 2845               	.LBB352:
 2846 01f4 80E0      		ldi r24,lo8(__c.3666)
 2847 01f6 90E0      		ldi r25,hi8(__c.3666)
 2848 01f8 0E94 0000 		call xputs
 603:tmk_core/common/command.c ****     print("\n");
 2849               		.loc 1 603 5 view .LVU627
 2850               	.LBE352:
 2851               	.LBE371:
 2852               	.LBE394:
 2853               	.LBE419:
 603:tmk_core/common/command.c ****     print("\n");
 2854               		.loc 1 603 5 view .LVU628
 603:tmk_core/common/command.c ****     print("\n");
 2855               		.loc 1 603 5 view .LVU629
 2856               	.LBB420:
 2857               	.LBB395:
 2858               	.LBB372:
 2859               	.LBB353:
 2860 01fc 8091 0000 		lds r24,mk_wheel_time_to_max
 2861 0200 1F92      		push __zero_reg__
 2862               	.LCFI171:
 2863               		.cfi_def_cfa_offset 24
 2864 0202 8F93      		push r24
 2865               	.LCFI172:
 2866               		.cfi_def_cfa_offset 25
 2867 0204 80E0      		ldi r24,lo8(__c.3668)
 2868 0206 90E0      		ldi r25,hi8(__c.3668)
 2869 0208 9F93      		push r25
 2870               	.LCFI173:
 2871               		.cfi_def_cfa_offset 26
 2872 020a 8F93      		push r24
 2873               	.LCFI174:
 2874               		.cfi_def_cfa_offset 27
 2875 020c 0E94 0000 		call __xprintf
 604:tmk_core/common/command.c **** #    endif /* !NO_PRINT */
 2876               		.loc 1 604 5 view .LVU630
 2877               	.LBE353:
 2878               	.LBE372:
 2879               	.LBE395:
 2880               	.LBE420:
 604:tmk_core/common/command.c **** #    endif /* !NO_PRINT */
 2881               		.loc 1 604 5 view .LVU631
 604:tmk_core/common/command.c **** #    endif /* !NO_PRINT */
 2882               		.loc 1 604 5 view .LVU632
 2883               	.LBB421:
 2884               	.LBB396:
 2885               	.LBB373:
 2886               	.LBB354:
 2887 0210 80E0      		ldi r24,lo8(__c.3670)
 2888 0212 90E0      		ldi r25,hi8(__c.3670)
 2889 0214 0E94 0000 		call xputs
 2890 0218 8DB7      		in r24,__SP_L__
 2891 021a 9EB7      		in r25,__SP_H__
 2892 021c 4896      		adiw r24,24
 2893 021e 0FB6      		in __tmp_reg__,__SREG__
 2894 0220 F894      		cli
 2895 0222 9EBF      		out __SP_H__,r25
 2896 0224 0FBE      		out __SREG__,__tmp_reg__
 2897 0226 8DBF      		out __SP_L__,r24
 2898               	.LCFI175:
 2899               		.cfi_def_cfa_offset 3
 2900 0228 00C0      		rjmp .L135
 2901               	.L123:
 2902               	.LBE354:
 2903               	.LBE373:
 752:tmk_core/common/command.c ****             break;
 2904               		.loc 1 752 13 view .LVU633
 752:tmk_core/common/command.c ****             break;
 2905               		.loc 1 752 30 is_stmt 0 view .LVU634
 2906 022a 8C2F      		mov r24,r28
 2907 022c 0E94 0000 		call numkey2num
 752:tmk_core/common/command.c ****             break;
 2908               		.loc 1 752 28 view .LVU635
 2909 0230 8093 0000 		sts mousekey_param,r24
 753:tmk_core/common/command.c ****         case KC_UP:
 2910               		.loc 1 753 13 is_stmt 1 view .LVU636
 2911 0234 00C0      		rjmp .L135
 2912               	.L133:
 755:tmk_core/common/command.c ****             break;
 2913               		.loc 1 755 13 view .LVU637
 2914 0236 61E0      		ldi r22,lo8(1)
 2915               	.L165:
 761:tmk_core/common/command.c ****             break;
 2916               		.loc 1 761 13 is_stmt 0 view .LVU638
 2917 0238 8091 0000 		lds r24,mousekey_param
 2918 023c 0E94 0000 		call mousekey_param_inc
 762:tmk_core/common/command.c ****         case KC_PGDN:
 2919               		.loc 1 762 13 is_stmt 1 view .LVU639
 2920 0240 00C0      		rjmp .L135
 2921               	.L132:
 758:tmk_core/common/command.c ****             break;
 2922               		.loc 1 758 13 view .LVU640
 2923 0242 61E0      		ldi r22,lo8(1)
 2924               	.L166:
 764:tmk_core/common/command.c ****             break;
 2925               		.loc 1 764 13 is_stmt 0 view .LVU641
 2926 0244 8091 0000 		lds r24,mousekey_param
 2927 0248 0E94 0000 		call mousekey_param_dec
 765:tmk_core/common/command.c ****         case KC_D:
 2928               		.loc 1 765 13 is_stmt 1 view .LVU642
 2929 024c 00C0      		rjmp .L135
 2930               	.L130:
 761:tmk_core/common/command.c ****             break;
 2931               		.loc 1 761 13 view .LVU643
 2932 024e 6AE0      		ldi r22,lo8(10)
 2933 0250 00C0      		rjmp .L165
 2934               	.L126:
 767:tmk_core/common/command.c ****             mk_interval          = MOUSEKEY_INTERVAL;
 2935               		.loc 1 767 13 view .LVU644
 767:tmk_core/common/command.c ****             mk_interval          = MOUSEKEY_INTERVAL;
 2936               		.loc 1 767 34 is_stmt 0 view .LVU645
 2937 0252 8EE1      		ldi r24,lo8(30)
 2938 0254 8093 0000 		sts mk_delay,r24
 768:tmk_core/common/command.c ****             mk_max_speed         = MOUSEKEY_MAX_SPEED;
 2939               		.loc 1 768 13 is_stmt 1 view .LVU646
 768:tmk_core/common/command.c ****             mk_max_speed         = MOUSEKEY_MAX_SPEED;
 2940               		.loc 1 768 34 is_stmt 0 view .LVU647
 2941 0258 82E3      		ldi r24,lo8(50)
 2942 025a 8093 0000 		sts mk_interval,r24
 769:tmk_core/common/command.c ****             mk_time_to_max       = MOUSEKEY_TIME_TO_MAX;
 2943               		.loc 1 769 13 is_stmt 1 view .LVU648
 769:tmk_core/common/command.c ****             mk_time_to_max       = MOUSEKEY_TIME_TO_MAX;
 2944               		.loc 1 769 34 is_stmt 0 view .LVU649
 2945 025e 8AE0      		ldi r24,lo8(10)
 2946 0260 8093 0000 		sts mk_max_speed,r24
 770:tmk_core/common/command.c ****             mk_wheel_max_speed   = MOUSEKEY_WHEEL_MAX_SPEED;
 2947               		.loc 1 770 13 is_stmt 1 view .LVU650
 770:tmk_core/common/command.c ****             mk_wheel_max_speed   = MOUSEKEY_WHEEL_MAX_SPEED;
 2948               		.loc 1 770 34 is_stmt 0 view .LVU651
 2949 0264 84E1      		ldi r24,lo8(20)
 2950 0266 8093 0000 		sts mk_time_to_max,r24
 771:tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2951               		.loc 1 771 13 is_stmt 1 view .LVU652
 771:tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2952               		.loc 1 771 34 is_stmt 0 view .LVU653
 2953 026a 88E0      		ldi r24,lo8(8)
 2954 026c 8093 0000 		sts mk_wheel_max_speed,r24
 772:tmk_core/common/command.c ****             print("set default\n");
 2955               		.loc 1 772 13 is_stmt 1 view .LVU654
 772:tmk_core/common/command.c ****             print("set default\n");
 2956               		.loc 1 772 34 is_stmt 0 view .LVU655
 2957 0270 88E2      		ldi r24,lo8(40)
 2958 0272 8093 0000 		sts mk_wheel_time_to_max,r24
 773:tmk_core/common/command.c ****             break;
 2959               		.loc 1 773 13 is_stmt 1 view .LVU656
 2960               	.LBE396:
 2961               	.LBE421:
 773:tmk_core/common/command.c ****             break;
 2962               		.loc 1 773 13 view .LVU657
 773:tmk_core/common/command.c ****             break;
 2963               		.loc 1 773 13 view .LVU658
 2964               	.LBB422:
 2965               	.LBB397:
 2966 0276 80E0      		ldi r24,lo8(__c.3747)
 2967 0278 90E0      		ldi r25,hi8(__c.3747)
 2968 027a 0E94 0000 		call xputs
 774:tmk_core/common/command.c ****         default:
 2969               		.loc 1 774 13 view .LVU659
 2970 027e 00C0      		rjmp .L135
 2971               	.L137:
 782:tmk_core/common/command.c ****     }
 2972               		.loc 1 782 9 view .LVU660
 2973               	.LBE397:
 2974               	.LBE422:
 782:tmk_core/common/command.c ****     }
 2975               		.loc 1 782 9 view .LVU661
 782:tmk_core/common/command.c ****     }
 2976               		.loc 1 782 9 view .LVU662
 2977               	.LBB423:
 2978               	.LBB398:
 2979 0280 80E0      		ldi r24,lo8(__c.3754)
 2980 0282 90E0      		ldi r25,hi8(__c.3754)
 2981 0284 00C0      		rjmp .L168
 2982               	.LBE398:
 2983               	.LBE423:
 2984               		.cfi_endproc
 2985               	.LFE19:
 2987               		.section	.rodata.CSWTCH.55,"a"
 2990               	CSWTCH.55:
 2991 0000 01        		.byte	1
 2992 0001 02        		.byte	2
 2993 0002 03        		.byte	3
 2994 0003 04        		.byte	4
 2995 0004 05        		.byte	5
 2996 0005 06        		.byte	6
 2997 0006 07        		.byte	7
 2998 0007 08        		.byte	8
 2999 0008 09        		.byte	9
 3000 0009 00        		.byte	0
 3001               		.section	.progmem.data.__c.3716,"a"
 3004               	__c.3716:
 3005 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 3005      6865 656C 
 3005      5F74 696D 
 3005      655F 746F 
 3005      5F6D 6178 
 3006               		.section	.progmem.data.__c.3713,"a"
 3009               	__c.3713:
 3010 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 3010      6865 656C 
 3010      5F6D 6178 
 3010      5F73 7065 
 3010      6564 203D 
 3011               		.section	.progmem.data.__c.3710,"a"
 3014               	__c.3710:
 3015 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 3015      696D 655F 
 3015      746F 5F6D 
 3015      6178 203D 
 3015      2025 640A 
 3016               		.section	.progmem.data.__c.3707,"a"
 3019               	__c.3707:
 3020 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 3020      6178 5F73 
 3020      7065 6564 
 3020      203D 2025 
 3020      640A 00
 3021               		.section	.progmem.data.__c.3704,"a"
 3024               	__c.3704:
 3025 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 3025      6E74 6572 
 3025      7661 6C20 
 3025      3D20 2564 
 3025      0A00 
 3026               		.section	.progmem.data.__c.3700,"a"
 3029               	__c.3700:
 3030 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 3030      656C 6179 
 3030      203D 2025 
 3030      640A 00
 3031               		.section	.progmem.data.__c.3693,"a"
 3034               	__c.3693:
 3035 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 3035      6865 656C 
 3035      5F74 696D 
 3035      655F 746F 
 3035      5F6D 6178 
 3036               		.section	.progmem.data.__c.3690,"a"
 3039               	__c.3690:
 3040 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 3040      6865 656C 
 3040      5F6D 6178 
 3040      5F73 7065 
 3040      6564 203D 
 3041               		.section	.progmem.data.__c.3687,"a"
 3044               	__c.3687:
 3045 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 3045      696D 655F 
 3045      746F 5F6D 
 3045      6178 203D 
 3045      2025 640A 
 3046               		.section	.progmem.data.__c.3684,"a"
 3049               	__c.3684:
 3050 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 3050      6178 5F73 
 3050      7065 6564 
 3050      203D 2025 
 3050      640A 00
 3051               		.section	.progmem.data.__c.3681,"a"
 3054               	__c.3681:
 3055 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 3055      6E74 6572 
 3055      7661 6C20 
 3055      3D20 2564 
 3055      0A00 
 3056               		.section	.progmem.data.__c.3677,"a"
 3059               	__c.3677:
 3060 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 3060      656C 6179 
 3060      203D 2025 
 3060      640A 00
 3061               		.section	.progmem.data.__c.3670,"a"
 3064               	__c.3670:
 3065 0000 0A00      		.string	"\n"
 3066               		.section	.progmem.data.__c.3668,"a"
 3069               	__c.3668:
 3070 0000 2575 00   		.string	"%u"
 3071               		.section	.progmem.data.__c.3666,"a"
 3074               	__c.3666:
 3075 0000 363A 2077 		.string	"6: wheel_time_to_max: "
 3075      6865 656C 
 3075      5F74 696D 
 3075      655F 746F 
 3075      5F6D 6178 
 3076               		.section	.progmem.data.__c.3664,"a"
 3079               	__c.3664:
 3080 0000 0A00      		.string	"\n"
 3081               		.section	.progmem.data.__c.3662,"a"
 3084               	__c.3662:
 3085 0000 2575 00   		.string	"%u"
 3086               		.section	.progmem.data.__c.3660,"a"
 3089               	__c.3660:
 3090 0000 353A 2077 		.string	"5: wheel_max_speed: "
 3090      6865 656C 
 3090      5F6D 6178 
 3090      5F73 7065 
 3090      6564 3A20 
 3091               		.section	.progmem.data.__c.3658,"a"
 3094               	__c.3658:
 3095 0000 0A00      		.string	"\n"
 3096               		.section	.progmem.data.__c.3656,"a"
 3099               	__c.3656:
 3100 0000 2575 00   		.string	"%u"
 3101               		.section	.progmem.data.__c.3654,"a"
 3104               	__c.3654:
 3105 0000 343A 2074 		.string	"4: time_to_max: "
 3105      696D 655F 
 3105      746F 5F6D 
 3105      6178 3A20 
 3105      00
 3106               		.section	.progmem.data.__c.3652,"a"
 3109               	__c.3652:
 3110 0000 0A00      		.string	"\n"
 3111               		.section	.progmem.data.__c.3650,"a"
 3114               	__c.3650:
 3115 0000 2575 00   		.string	"%u"
 3116               		.section	.progmem.data.__c.3648,"a"
 3119               	__c.3648:
 3120 0000 333A 206D 		.string	"3: max_speed: "
 3120      6178 5F73 
 3120      7065 6564 
 3120      3A20 00
 3121               		.section	.progmem.data.__c.3646,"a"
 3124               	__c.3646:
 3125 0000 0A00      		.string	"\n"
 3126               		.section	.progmem.data.__c.3644,"a"
 3129               	__c.3644:
 3130 0000 2575 00   		.string	"%u"
 3131               		.section	.progmem.data.__c.3642,"a"
 3134               	__c.3642:
 3135 0000 323A 2069 		.string	"2: interval(ms): "
 3135      6E74 6572 
 3135      7661 6C28 
 3135      6D73 293A 
 3135      2000 
 3136               		.section	.progmem.data.__c.3640,"a"
 3139               	__c.3640:
 3140 0000 0A00      		.string	"\n"
 3141               		.section	.progmem.data.__c.3638,"a"
 3144               	__c.3638:
 3145 0000 2575 00   		.string	"%u"
 3146               		.section	.progmem.data.__c.3636,"a"
 3149               	__c.3636:
 3150 0000 313A 2064 		.string	"1: delay(*10ms): "
 3150      656C 6179 
 3150      282A 3130 
 3150      6D73 293A 
 3150      2000 
 3151               		.section	.progmem.data.__c.3634,"a"
 3154               	__c.3634:
 3155 0000 0A09 2D20 		.string	"\n\t- Values -\n"
 3155      5661 6C75 
 3155      6573 202D 
 3155      0A00 
 3156               		.section	.progmem.data.__c.3754,"a"
 3159               	__c.3754:
 3160 0000 4D3E 00   		.string	"M>"
 3161               		.section	.progmem.data.__c.3752,"a"
 3164               	__c.3752:
 3165 0000 4D25 643E 		.string	"M%d> "
 3165      2000 
 3166               		.section	.progmem.data.__c.3750,"a"
 3169               	__c.3750:
 3170 0000 3F00      		.string	"?"
 3171               		.section	.progmem.data.__c.3747,"a"
 3174               	__c.3747:
 3175 0000 7365 7420 		.string	"set default\n"
 3175      6465 6661 
 3175      756C 740A 
 3175      00
 3176               		.section	.progmem.data.__c.3733,"a"
 3179               	__c.3733:
 3180 0000 433E 2000 		.string	"C> "
 3181               		.section	.progmem.data.__c.3723,"a"
 3184               	__c.3723:
 3185 0000 7768 6572 		.string	"where delta: cursor=%d, wheel=%d\nSee http://en.wikipedia.org/wiki/Mouse_keys\n"
 3185      6520 6465 
 3185      6C74 613A 
 3185      2063 7572 
 3185      736F 723D 
 3186               		.section	.progmem.data.__c.3721,"a"
 3189               	__c.3721:
 3190 0000 0A09 2D20 		.string	"\n\t- Mousekey -\nESC/q:\tquit\n1:\tdelay(*10ms)\n2:\tinterval(ms)\n3:\tmax_speed\n4:\tti
 3190      4D6F 7573 
 3190      656B 6579 
 3190      202D 0A45 
 3190      5343 2F71 
 3191               		.section	.progmem.data.__c.3626,"a"
 3194               	__c.3626:
 3195 0000 3F00      		.string	"?"
 3196               		.section	.progmem.data.__c.3623,"a"
 3199               	__c.3623:
 3200 0000 4D3E 2000 		.string	"M> "
 3201               		.section	.progmem.data.__c.3628,"a"
 3204               	__c.3628:
 3205 0000 433E 2000 		.string	"C> "
 3206               		.section	.progmem.data.__c.3772,"a"
 3209               	__c.3772:
 3210 0000 4C25 640A 		.string	"L%d\n"
 3210      00
 3211               		.section	.progmem.data.__c.3451,"a"
 3214               	__c.3451:
 3215 0000 7469 6D65 		.string	"timer_read32(): %04lX\n"
 3215      725F 7265 
 3215      6164 3332 
 3215      2829 3A20 
 3215      2530 346C 
 3216               		.section	.progmem.data.__c.3449,"a"
 3219               	__c.3449:
 3220 0000 6B65 7962 		.string	"keyboard_idle: %X\n"
 3220      6F61 7264 
 3220      5F69 646C 
 3220      653A 2025 
 3220      580A 00
 3221               		.section	.progmem.data.__c.3447,"a"
 3224               	__c.3447:
 3225 0000 6B65 7962 		.string	"keyboard_protocol: %X\n"
 3225      6F61 7264 
 3225      5F70 726F 
 3225      746F 636F 
 3225      6C3A 2025 
 3226               		.section	.progmem.data.__c.3445,"a"
 3229               	__c.3445:
 3230 0000 686F 7374 		.string	"host_keyboard_leds(): %X\n"
 3230      5F6B 6579 
 3230      626F 6172 
 3230      645F 6C65 
 3230      6473 2829 
 3231               		.section	.progmem.data.__c.3443,"a"
 3234               	__c.3443:
 3235 0000 0A09 2D20 		.string	"\n\t- Status -\n"
 3235      5374 6174 
 3235      7573 202D 
 3235      0A00 
 3236               		.section	.progmem.data.__c.3438,"a"
 3239               	__c.3438:
 3240 0000 4743 433A 		.string	"GCC: 8.4.0 AVR-LIBC: 2.0.0 AVR_ARCH: avr35\n"
 3240      2038 2E34 
 3240      2E30 2041 
 3240      5652 2D4C 
 3240      4942 433A 
 3241               		.section	.progmem.data.__c.3436,"a"
 3244               	__c.3436:
 3245 0000 4F50 5449 		.string	"OPTIONS: LUFA MOUSEKEY EXTRAKEY CONSOLE COMMAND 4096\n"
 3245      4F4E 533A 
 3245      204C 5546 
 3245      4120 4D4F 
 3245      5553 454B 
 3246               		.section	.progmem.data.__c.3434,"a"
 3249               	__c.3434:
 3250 0000 4255 494C 		.string	"BUILD: \"72442f\" (17:37:30 Jun  9 2020)\n"
 3250      443A 2022 
 3250      3732 3434 
 3250      3266 2220 
 3250      2831 373A 
 3251               		.section	.progmem.data.__c.3432,"a"
 3254               	__c.3432:
 3255 0000 5649 443A 		.string	"VID: 0xFEED(Robin) PID: 0x0000(minim) VER: 0x0001\n"
 3255      2030 7846 
 3255      4545 4428 
 3255      526F 6269 
 3255      6E29 2050 
 3256               		.section	.progmem.data.__c.3430,"a"
 3259               	__c.3430:
 3260 0000 4445 5343 		.string	"DESC: A custom keyboard\n"
 3260      3A20 4120 
 3260      6375 7374 
 3260      6F6D 206B 
 3260      6579 626F 
 3261               		.section	.progmem.data.__c.3428,"a"
 3264               	__c.3428:
 3265 0000 0A09 2D20 		.string	"\n\t- Version -\n"
 3265      5665 7273 
 3265      696F 6E20 
 3265      2D0A 00
 3266               		.section	.progmem.data.__c.3612,"a"
 3269               	__c.3612:
 3270 0000 0A09 2D20 		.string	"\n\t- Console -\nESC/q:\tquit\nm:\tmousekey\n"
 3270      436F 6E73 
 3270      6F6C 6520 
 3270      2D0A 4553 
 3270      432F 713A 
 3271               		.section	.progmem.data.__c.3423,"a"
 3274               	__c.3423:
 3275 0000 0A09 2D20 		.ascii	"\n\t- Magic -\nD:\tDebug Message Toggle\nX:\tMatrix Debug Mo"
 3275      4D61 6769 
 3275      6320 2D0A 
 3275      443A 0944 
 3275      6562 7567 
 3276 0036 6465 2054 		.ascii	"de Toggle - Show keypresses in matrix grid\nK:\tKeyboard Deb"
 3276      6F67 676C 
 3276      6520 2D20 
 3276      5368 6F77 
 3276      206B 6579 
 3277 0070 7567 2054 		.ascii	"ug Toggle - Show keypress report\nM:\tDebug Mouse To"
 3277      6F67 676C 
 3277      6520 2D20 
 3277      5368 6F77 
 3277      206B 6579 
 3278 00a2 6767 6C65 		.string	"ggle\nV:\tVersion\nS:\tStatus\nC:\tActivate Console Mode\nF1-F10:\tSwitch to Layer 0-9 (F
 3278      0A56 3A09 
 3278      5665 7273 
 3278      696F 6E0A 
 3278      533A 0953 
 3279               		.section	.progmem.data.__c.3558,"a"
 3282               	__c.3558:
 3283 0000 0A00      		.string	"\n"
 3284               		.section	.progmem.data.__c.3556,"a"
 3287               	__c.3556:
 3288 0000 2575 00   		.string	"%u"
 3289               		.section	.progmem.data.__c.3554,"a"
 3292               	__c.3554:
 3293 0000 2E6E 6B72 		.string	".nkro: "
 3293      6F3A 2000 
 3294               		.section	.progmem.data.__c.3552,"a"
 3297               	__c.3552:
 3298 0000 0A00      		.string	"\n"
 3299               		.section	.progmem.data.__c.3550,"a"
 3302               	__c.3550:
 3303 0000 2575 00   		.string	"%u"
 3304               		.section	.progmem.data.__c.3548,"a"
 3307               	__c.3548:
 3308 0000 2E73 7761 		.string	".swap_backslash_backspace: "
 3308      705F 6261 
 3308      636B 736C 
 3308      6173 685F 
 3308      6261 636B 
 3309               		.section	.progmem.data.__c.3546,"a"
 3312               	__c.3546:
 3313 0000 0A00      		.string	"\n"
 3314               		.section	.progmem.data.__c.3544,"a"
 3317               	__c.3544:
 3318 0000 2575 00   		.string	"%u"
 3319               		.section	.progmem.data.__c.3542,"a"
 3322               	__c.3542:
 3323 0000 2E73 7761 		.string	".swap_grave_esc: "
 3323      705F 6772 
 3323      6176 655F 
 3323      6573 633A 
 3323      2000 
 3324               		.section	.progmem.data.__c.3540,"a"
 3327               	__c.3540:
 3328 0000 0A00      		.string	"\n"
 3329               		.section	.progmem.data.__c.3538,"a"
 3332               	__c.3538:
 3333 0000 2575 00   		.string	"%u"
 3334               		.section	.progmem.data.__c.3536,"a"
 3337               	__c.3536:
 3338 0000 2E6E 6F5F 		.string	".no_gui: "
 3338      6775 693A 
 3338      2000 
 3339               		.section	.progmem.data.__c.3534,"a"
 3342               	__c.3534:
 3343 0000 0A00      		.string	"\n"
 3344               		.section	.progmem.data.__c.3532,"a"
 3347               	__c.3532:
 3348 0000 2575 00   		.string	"%u"
 3349               		.section	.progmem.data.__c.3530,"a"
 3352               	__c.3530:
 3353 0000 2E73 7761 		.string	".swap_ralt_rgui: "
 3353      705F 7261 
 3353      6C74 5F72 
 3353      6775 693A 
 3353      2000 
 3354               		.section	.progmem.data.__c.3528,"a"
 3357               	__c.3528:
 3358 0000 0A00      		.string	"\n"
 3359               		.section	.progmem.data.__c.3526,"a"
 3362               	__c.3526:
 3363 0000 2575 00   		.string	"%u"
 3364               		.section	.progmem.data.__c.3524,"a"
 3367               	__c.3524:
 3368 0000 2E73 7761 		.string	".swap_lalt_lgui: "
 3368      705F 6C61 
 3368      6C74 5F6C 
 3368      6775 693A 
 3368      2000 
 3369               		.section	.progmem.data.__c.3522,"a"
 3372               	__c.3522:
 3373 0000 0A00      		.string	"\n"
 3374               		.section	.progmem.data.__c.3520,"a"
 3377               	__c.3520:
 3378 0000 2575 00   		.string	"%u"
 3379               		.section	.progmem.data.__c.3518,"a"
 3382               	__c.3518:
 3383 0000 2E73 7761 		.string	".swap_rctl_rgui: "
 3383      705F 7263 
 3383      746C 5F72 
 3383      6775 693A 
 3383      2000 
 3384               		.section	.progmem.data.__c.3516,"a"
 3387               	__c.3516:
 3388 0000 0A00      		.string	"\n"
 3389               		.section	.progmem.data.__c.3514,"a"
 3392               	__c.3514:
 3393 0000 2575 00   		.string	"%u"
 3394               		.section	.progmem.data.__c.3512,"a"
 3397               	__c.3512:
 3398 0000 2E73 7761 		.string	".swap_lctl_lgui: "
 3398      705F 6C63 
 3398      746C 5F6C 
 3398      6775 693A 
 3398      2000 
 3399               		.section	.progmem.data.__c.3510,"a"
 3402               	__c.3510:
 3403 0000 0A00      		.string	"\n"
 3404               		.section	.progmem.data.__c.3508,"a"
 3407               	__c.3508:
 3408 0000 2575 00   		.string	"%u"
 3409               		.section	.progmem.data.__c.3506,"a"
 3412               	__c.3506:
 3413 0000 2E63 6170 		.string	".capslock_to_control: "
 3413      736C 6F63 
 3413      6B5F 746F 
 3413      5F63 6F6E 
 3413      7472 6F6C 
 3414               		.section	.progmem.data.__c.3504,"a"
 3417               	__c.3504:
 3418 0000 0A00      		.string	"\n"
 3419               		.section	.progmem.data.__c.3502,"a"
 3422               	__c.3502:
 3423 0000 2575 00   		.string	"%u"
 3424               		.section	.progmem.data.__c.3500,"a"
 3427               	__c.3500:
 3428 0000 2E73 7761 		.string	".swap_control_capslock: "
 3428      705F 636F 
 3428      6E74 726F 
 3428      6C5F 6361 
 3428      7073 6C6F 
 3429               		.section	.progmem.data.__c.3498,"a"
 3432               	__c.3498:
 3433 0000 0A00      		.string	"\n"
 3434               		.section	.progmem.data.__c.3496,"a"
 3437               	__c.3496:
 3438 0000 2530 3258 		.string	"%02X"
 3438      00
 3439               		.section	.progmem.data.__c.3494,"a"
 3442               	__c.3494:
 3443 0000 6B65 796D 		.string	"keymap_config.raw: "
 3443      6170 5F63 
 3443      6F6E 6669 
 3443      672E 7261 
 3443      773A 2000 
 3444               		.section	.progmem.data.__c.3491,"a"
 3447               	__c.3491:
 3448 0000 0A00      		.string	"\n"
 3449               		.section	.progmem.data.__c.3489,"a"
 3452               	__c.3489:
 3453 0000 2575 00   		.string	"%u"
 3454               		.section	.progmem.data.__c.3487,"a"
 3457               	__c.3487:
 3458 0000 2E6D 6F75 		.string	".mouse: "
 3458      7365 3A20 
 3458      00
 3459               		.section	.progmem.data.__c.3485,"a"
 3462               	__c.3485:
 3463 0000 0A00      		.string	"\n"
 3464               		.section	.progmem.data.__c.3483,"a"
 3467               	__c.3483:
 3468 0000 2575 00   		.string	"%u"
 3469               		.section	.progmem.data.__c.3481,"a"
 3472               	__c.3481:
 3473 0000 2E6B 6579 		.string	".keyboard: "
 3473      626F 6172 
 3473      643A 2000 
 3474               		.section	.progmem.data.__c.3479,"a"
 3477               	__c.3479:
 3478 0000 0A00      		.string	"\n"
 3479               		.section	.progmem.data.__c.3477,"a"
 3482               	__c.3477:
 3483 0000 2575 00   		.string	"%u"
 3484               		.section	.progmem.data.__c.3475,"a"
 3487               	__c.3475:
 3488 0000 2E6D 6174 		.string	".matrix: "
 3488      7269 783A 
 3488      2000 
 3489               		.section	.progmem.data.__c.3473,"a"
 3492               	__c.3473:
 3493 0000 0A00      		.string	"\n"
 3494               		.section	.progmem.data.__c.3471,"a"
 3497               	__c.3471:
 3498 0000 2575 00   		.string	"%u"
 3499               		.section	.progmem.data.__c.3469,"a"
 3502               	__c.3469:
 3503 0000 2E65 6E61 		.string	".enable: "
 3503      626C 653A 
 3503      2000 
 3504               		.section	.progmem.data.__c.3467,"a"
 3507               	__c.3467:
 3508 0000 0A00      		.string	"\n"
 3509               		.section	.progmem.data.__c.3465,"a"
 3512               	__c.3465:
 3513 0000 2530 3258 		.string	"%02X"
 3513      00
 3514               		.section	.progmem.data.__c.3463,"a"
 3517               	__c.3463:
 3518 0000 6465 6275 		.string	"debug_config.raw: "
 3518      675F 636F 
 3518      6E66 6967 
 3518      2E72 6177 
 3518      3A20 00
 3519               		.section	.progmem.data.__c.3460,"a"
 3522               	__c.3460:
 3523 0000 0A00      		.string	"\n"
 3524               		.section	.progmem.data.__c.3458,"a"
 3527               	__c.3458:
 3528 0000 2575 00   		.string	"%u"
 3529               		.section	.progmem.data.__c.3456,"a"
 3532               	__c.3456:
 3533 0000 6465 6661 		.string	"default_layer: "
 3533      756C 745F 
 3533      6C61 7965 
 3533      723A 2000 
 3534               		.section	.progmem.data.__c.3607,"a"
 3537               	__c.3607:
 3538 0000 3F00      		.string	"?"
 3539               		.section	.progmem.data.__c.3597,"a"
 3542               	__c.3597:
 3543 0000 0A6D 6F75 		.string	"\nmouse: off\n"
 3543      7365 3A20 
 3543      6F66 660A 
 3543      00
 3544               		.section	.progmem.data.__c.3595,"a"
 3547               	__c.3595:
 3548 0000 0A6D 6F75 		.string	"\nmouse: on\n"
 3548      7365 3A20 
 3548      6F6E 0A00 
 3549               		.section	.progmem.data.__c.3592,"a"
 3552               	__c.3592:
 3553 0000 0A6B 6579 		.string	"\nkeyboard: off\n"
 3553      626F 6172 
 3553      643A 206F 
 3553      6666 0A00 
 3554               		.section	.progmem.data.__c.3590,"a"
 3557               	__c.3590:
 3558 0000 0A6B 6579 		.string	"\nkeyboard: on\n"
 3558      626F 6172 
 3558      643A 206F 
 3558      6E0A 00
 3559               		.section	.progmem.data.__c.3587,"a"
 3562               	__c.3587:
 3563 0000 0A6D 6174 		.string	"\nmatrix: off\n"
 3563      7269 783A 
 3563      206F 6666 
 3563      0A00 
 3564               		.section	.progmem.data.__c.3585,"a"
 3567               	__c.3585:
 3568 0000 0A6D 6174 		.string	"\nmatrix: on\n"
 3568      7269 783A 
 3568      206F 6E0A 
 3568      00
 3569               		.section	.progmem.data.__c.3582,"a"
 3572               	__c.3582:
 3573 0000 0A64 6562 		.string	"\ndebug: off\n"
 3573      7567 3A20 
 3573      6F66 660A 
 3573      00
 3574               		.section	.progmem.data.__c.3580,"a"
 3577               	__c.3580:
 3578 0000 0A64 6562 		.string	"\ndebug: on\n"
 3578      7567 3A20 
 3578      6F6E 0A00 
 3579               		.section	.progmem.data.__c.3577,"a"
 3582               	__c.3577:
 3583 0000 0A0A 4A75 		.string	"\n\nJumping to bootloader... "
 3583      6D70 696E 
 3583      6720 746F 
 3583      2062 6F6F 
 3583      746C 6F61 
 3584               		.section	.progmem.data.__c.3573,"a"
 3587               	__c.3573:
 3588 0000 433E 2000 		.string	"C> "
 3589               		.section	.progmem.data.__c.3568,"a"
 3592               	__c.3568:
 3593 0000 436C 6561 		.string	"Clearing EEPROM\n"
 3593      7269 6E67 
 3593      2045 4550 
 3593      524F 4D0A 
 3593      00
 3594               		.section	.progmem.data.__c.3564,"a"
 3597               	__c.3564:
 3598 0000 6565 636F 		.string	"eeconfig:\n"
 3598      6E66 6967 
 3598      3A0A 00
 3599               		.section	.bss.mousekey_param,"aw",@nobits
 3602               	mousekey_param:
 3603 0000 00        		.zero	1
 3604               	.global	command_state
 3605               		.section	.bss.command_state,"aw",@nobits
 3608               	command_state:
 3609 0000 00        		.zero	1
 3610               		.text
 3611               	.Letext0:
 3612               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdint.h"
 3613               		.file 4 "tmk_core/common/report.h"
 3614               		.file 5 "tmk_core/common/host.h"
 3615               		.file 6 "/usr/local/Cellar/avr-gcc@8/8.4.0/lib/avr-gcc/8/gcc/avr/8.4.0/include/stddef.h"
 3616               		.file 7 "tmk_core/common/action.h"
 3617               		.file 8 "tmk_core/common/avr/xprintf.h"
 3618               		.file 9 "tmk_core/common/debug.h"
 3619               		.file 10 "quantum/keycode_config.h"
 3620               		.file 11 "quantum/keymap.h"
 3621               		.file 12 "tmk_core/common/timer.h"
 3622               		.file 13 "tmk_core/common/action_layer.h"
 3623               		.file 14 "tmk_core/common/action_util.h"
 3624               		.file 15 "tmk_core/common/command.h"
 3625               		.file 16 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdlib.h"
 3626               		.file 17 "quantum/quantum.h"
 3627               		.file 18 "tmk_core/common/mousekey.h"
 3628               		.file 19 "tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 command.c
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:4      *ABS*:000000000000003f __SREG__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:12     .text.mousekey_console_help:0000000000000000 mousekey_console_help
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3189   .progmem.data.__c.3721:0000000000000000 __c.3721
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3184   .progmem.data.__c.3723:0000000000000000 __c.3723
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:75     .text.mousekey_param_inc:0000000000000000 mousekey_param_inc
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3059   .progmem.data.__c.3677:0000000000000000 __c.3677
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3054   .progmem.data.__c.3681:0000000000000000 __c.3681
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3049   .progmem.data.__c.3684:0000000000000000 __c.3684
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3044   .progmem.data.__c.3687:0000000000000000 __c.3687
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3039   .progmem.data.__c.3690:0000000000000000 __c.3690
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3034   .progmem.data.__c.3693:0000000000000000 __c.3693
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:406    .text.mousekey_param_dec:0000000000000000 mousekey_param_dec
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3029   .progmem.data.__c.3700:0000000000000000 __c.3700
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3024   .progmem.data.__c.3704:0000000000000000 __c.3704
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3019   .progmem.data.__c.3707:0000000000000000 __c.3707
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3014   .progmem.data.__c.3710:0000000000000000 __c.3710
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3009   .progmem.data.__c.3713:0000000000000000 __c.3713
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3004   .progmem.data.__c.3716:0000000000000000 __c.3716
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:677    .text.switch_default_layer:0000000000000000 switch_default_layer
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3209   .progmem.data.__c.3772:0000000000000000 __c.3772
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:750    .text.command_common:0000000000000000 command_common
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3537   .progmem.data.__c.3607:0000000000000000 __c.3607
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3597   .progmem.data.__c.3564:0000000000000000 __c.3564
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3532   .progmem.data.__c.3456:0000000000000000 __c.3456
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3527   .progmem.data.__c.3458:0000000000000000 __c.3458
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3522   .progmem.data.__c.3460:0000000000000000 __c.3460
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3517   .progmem.data.__c.3463:0000000000000000 __c.3463
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3512   .progmem.data.__c.3465:0000000000000000 __c.3465
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3507   .progmem.data.__c.3467:0000000000000000 __c.3467
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3502   .progmem.data.__c.3469:0000000000000000 __c.3469
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3497   .progmem.data.__c.3471:0000000000000000 __c.3471
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3492   .progmem.data.__c.3473:0000000000000000 __c.3473
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3487   .progmem.data.__c.3475:0000000000000000 __c.3475
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3482   .progmem.data.__c.3477:0000000000000000 __c.3477
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3477   .progmem.data.__c.3479:0000000000000000 __c.3479
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3472   .progmem.data.__c.3481:0000000000000000 __c.3481
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3467   .progmem.data.__c.3483:0000000000000000 __c.3483
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3462   .progmem.data.__c.3485:0000000000000000 __c.3485
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3457   .progmem.data.__c.3487:0000000000000000 __c.3487
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3452   .progmem.data.__c.3489:0000000000000000 __c.3489
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3447   .progmem.data.__c.3491:0000000000000000 __c.3491
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3442   .progmem.data.__c.3494:0000000000000000 __c.3494
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3437   .progmem.data.__c.3496:0000000000000000 __c.3496
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3432   .progmem.data.__c.3498:0000000000000000 __c.3498
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3427   .progmem.data.__c.3500:0000000000000000 __c.3500
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3422   .progmem.data.__c.3502:0000000000000000 __c.3502
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3417   .progmem.data.__c.3504:0000000000000000 __c.3504
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3412   .progmem.data.__c.3506:0000000000000000 __c.3506
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3407   .progmem.data.__c.3508:0000000000000000 __c.3508
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3402   .progmem.data.__c.3510:0000000000000000 __c.3510
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3397   .progmem.data.__c.3512:0000000000000000 __c.3512
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3392   .progmem.data.__c.3514:0000000000000000 __c.3514
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3387   .progmem.data.__c.3516:0000000000000000 __c.3516
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3382   .progmem.data.__c.3518:0000000000000000 __c.3518
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3377   .progmem.data.__c.3520:0000000000000000 __c.3520
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3372   .progmem.data.__c.3522:0000000000000000 __c.3522
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3367   .progmem.data.__c.3524:0000000000000000 __c.3524
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3362   .progmem.data.__c.3526:0000000000000000 __c.3526
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3357   .progmem.data.__c.3528:0000000000000000 __c.3528
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3352   .progmem.data.__c.3530:0000000000000000 __c.3530
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3347   .progmem.data.__c.3532:0000000000000000 __c.3532
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3342   .progmem.data.__c.3534:0000000000000000 __c.3534
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3337   .progmem.data.__c.3536:0000000000000000 __c.3536
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3332   .progmem.data.__c.3538:0000000000000000 __c.3538
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3327   .progmem.data.__c.3540:0000000000000000 __c.3540
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3322   .progmem.data.__c.3542:0000000000000000 __c.3542
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3317   .progmem.data.__c.3544:0000000000000000 __c.3544
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3312   .progmem.data.__c.3546:0000000000000000 __c.3546
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3307   .progmem.data.__c.3548:0000000000000000 __c.3548
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3302   .progmem.data.__c.3550:0000000000000000 __c.3550
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3297   .progmem.data.__c.3552:0000000000000000 __c.3552
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3292   .progmem.data.__c.3554:0000000000000000 __c.3554
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3287   .progmem.data.__c.3556:0000000000000000 __c.3556
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3282   .progmem.data.__c.3558:0000000000000000 __c.3558
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3557   .progmem.data.__c.3590:0000000000000000 __c.3590
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3264   .progmem.data.__c.3428:0000000000000000 __c.3428
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3259   .progmem.data.__c.3430:0000000000000000 __c.3430
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3254   .progmem.data.__c.3432:0000000000000000 __c.3432
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3249   .progmem.data.__c.3434:0000000000000000 __c.3434
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3244   .progmem.data.__c.3436:0000000000000000 __c.3436
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3239   .progmem.data.__c.3438:0000000000000000 __c.3438
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3582   .progmem.data.__c.3577:0000000000000000 __c.3577
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3274   .progmem.data.__c.3423:0000000000000000 __c.3423
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3592   .progmem.data.__c.3568:0000000000000000 __c.3568
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3269   .progmem.data.__c.3612:0000000000000000 __c.3612
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3587   .progmem.data.__c.3573:0000000000000000 __c.3573
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3608   .bss.command_state:0000000000000000 command_state
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3577   .progmem.data.__c.3580:0000000000000000 __c.3580
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3572   .progmem.data.__c.3582:0000000000000000 __c.3582
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3567   .progmem.data.__c.3585:0000000000000000 __c.3585
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3562   .progmem.data.__c.3587:0000000000000000 __c.3587
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3552   .progmem.data.__c.3592:0000000000000000 __c.3592
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3547   .progmem.data.__c.3595:0000000000000000 __c.3595
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3542   .progmem.data.__c.3597:0000000000000000 __c.3597
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3234   .progmem.data.__c.3443:0000000000000000 __c.3443
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3229   .progmem.data.__c.3445:0000000000000000 __c.3445
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3224   .progmem.data.__c.3447:0000000000000000 __c.3447
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3219   .progmem.data.__c.3449:0000000000000000 __c.3449
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3214   .progmem.data.__c.3451:0000000000000000 __c.3451
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:2142   .text.command_extra:0000000000000000 command_extra
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:2142   .text.command_extra:0000000000000000 command_extra.localalias.0
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:2166   .text.command_console_extra:0000000000000000 command_console_extra
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:2180   .text.numkey2num:0000000000000000 numkey2num
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:2990   .rodata.CSWTCH.55:0000000000000000 CSWTCH.55
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:2215   .text.command_proc:0000000000000000 command_proc
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3194   .progmem.data.__c.3626:0000000000000000 __c.3626
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3204   .progmem.data.__c.3628:0000000000000000 __c.3628
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3199   .progmem.data.__c.3623:0000000000000000 __c.3623
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3169   .progmem.data.__c.3750:0000000000000000 __c.3750
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3602   .bss.mousekey_param:0000000000000000 mousekey_param
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3164   .progmem.data.__c.3752:0000000000000000 __c.3752
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3179   .progmem.data.__c.3733:0000000000000000 __c.3733
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3154   .progmem.data.__c.3634:0000000000000000 __c.3634
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3149   .progmem.data.__c.3636:0000000000000000 __c.3636
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3144   .progmem.data.__c.3638:0000000000000000 __c.3638
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3139   .progmem.data.__c.3640:0000000000000000 __c.3640
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3134   .progmem.data.__c.3642:0000000000000000 __c.3642
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3129   .progmem.data.__c.3644:0000000000000000 __c.3644
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3124   .progmem.data.__c.3646:0000000000000000 __c.3646
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3119   .progmem.data.__c.3648:0000000000000000 __c.3648
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3114   .progmem.data.__c.3650:0000000000000000 __c.3650
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3109   .progmem.data.__c.3652:0000000000000000 __c.3652
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3104   .progmem.data.__c.3654:0000000000000000 __c.3654
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3099   .progmem.data.__c.3656:0000000000000000 __c.3656
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3094   .progmem.data.__c.3658:0000000000000000 __c.3658
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3089   .progmem.data.__c.3660:0000000000000000 __c.3660
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3084   .progmem.data.__c.3662:0000000000000000 __c.3662
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3079   .progmem.data.__c.3664:0000000000000000 __c.3664
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3074   .progmem.data.__c.3666:0000000000000000 __c.3666
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3069   .progmem.data.__c.3668:0000000000000000 __c.3668
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3064   .progmem.data.__c.3670:0000000000000000 __c.3670
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3174   .progmem.data.__c.3747:0000000000000000 __c.3747
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//ccgcRnqV.s:3159   .progmem.data.__c.3754:0000000000000000 __c.3754

UNDEFINED SYMBOLS
xputs
__xprintf
mk_delay
mk_interval
mk_max_speed
mk_time_to_max
mk_wheel_max_speed
mk_wheel_time_to_max
default_layer_set
clear_keyboard
eeconfig_read_default_layer
eeconfig_read_debug
eeconfig_read_keymap
debug_config
bootloader_jump
eeconfig_init
host_keyboard_leds
keyboard_protocol
keyboard_idle
timer_read32
get_mods
__do_copy_data
__do_clear_bss
