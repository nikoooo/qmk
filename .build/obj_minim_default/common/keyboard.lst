   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.disable_jtag,"ax",@progbits
  11               	.global	disable_jtag
  13               	disable_jtag:
  14               	.LFB6:
  15               		.file 1 "tmk_core/common/keyboard.c"
   1:tmk_core/common/keyboard.c **** /*
   2:tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/keyboard.c **** 
   4:tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/keyboard.c **** (at your option) any later version.
   8:tmk_core/common/keyboard.c **** 
   9:tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:tmk_core/common/keyboard.c **** 
  14:tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/keyboard.c **** */
  17:tmk_core/common/keyboard.c **** 
  18:tmk_core/common/keyboard.c **** #include <stdint.h>
  19:tmk_core/common/keyboard.c **** #include "keyboard.h"
  20:tmk_core/common/keyboard.c **** #include "matrix.h"
  21:tmk_core/common/keyboard.c **** #include "keymap.h"
  22:tmk_core/common/keyboard.c **** #include "host.h"
  23:tmk_core/common/keyboard.c **** #include "led.h"
  24:tmk_core/common/keyboard.c **** #include "keycode.h"
  25:tmk_core/common/keyboard.c **** #include "timer.h"
  26:tmk_core/common/keyboard.c **** #include "print.h"
  27:tmk_core/common/keyboard.c **** #include "debug.h"
  28:tmk_core/common/keyboard.c **** #include "command.h"
  29:tmk_core/common/keyboard.c **** #include "util.h"
  30:tmk_core/common/keyboard.c **** #include "sendchar.h"
  31:tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  34:tmk_core/common/keyboard.c **** #    include "backlight.h"
  35:tmk_core/common/keyboard.c **** #endif
  36:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  37:tmk_core/common/keyboard.c **** #    include "bootmagic.h"
  38:tmk_core/common/keyboard.c **** #else
  39:tmk_core/common/keyboard.c **** #    include "magic.h"
  40:tmk_core/common/keyboard.c **** #endif
  41:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  42:tmk_core/common/keyboard.c **** #    include "mousekey.h"
  43:tmk_core/common/keyboard.c **** #endif
  44:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  45:tmk_core/common/keyboard.c **** #    include "ps2_mouse.h"
  46:tmk_core/common/keyboard.c **** #endif
  47:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  48:tmk_core/common/keyboard.c **** #    include "serial_mouse.h"
  49:tmk_core/common/keyboard.c **** #endif
  50:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  51:tmk_core/common/keyboard.c **** #    include "adb.h"
  52:tmk_core/common/keyboard.c **** #endif
  53:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  54:tmk_core/common/keyboard.c **** #    include "rgblight.h"
  55:tmk_core/common/keyboard.c **** #endif
  56:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
  57:tmk_core/common/keyboard.c **** #    include "process_steno.h"
  58:tmk_core/common/keyboard.c **** #endif
  59:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
  60:tmk_core/common/keyboard.c **** #    include "fauxclicky.h"
  61:tmk_core/common/keyboard.c **** #endif
  62:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  63:tmk_core/common/keyboard.c **** #    include "serial_link/system/serial_link.h"
  64:tmk_core/common/keyboard.c **** #endif
  65:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  66:tmk_core/common/keyboard.c **** #    include "visualizer/visualizer.h"
  67:tmk_core/common/keyboard.c **** #endif
  68:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
  69:tmk_core/common/keyboard.c **** #    include "pointing_device.h"
  70:tmk_core/common/keyboard.c **** #endif
  71:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
  72:tmk_core/common/keyboard.c **** #    include "process_midi.h"
  73:tmk_core/common/keyboard.c **** #endif
  74:tmk_core/common/keyboard.c **** #ifdef HD44780_ENABLE
  75:tmk_core/common/keyboard.c **** #    include "hd44780.h"
  76:tmk_core/common/keyboard.c **** #endif
  77:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
  78:tmk_core/common/keyboard.c **** #    include "qwiic.h"
  79:tmk_core/common/keyboard.c **** #endif
  80:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
  81:tmk_core/common/keyboard.c **** #    include "oled_driver.h"
  82:tmk_core/common/keyboard.c **** #endif
  83:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
  84:tmk_core/common/keyboard.c **** #    include "velocikey.h"
  85:tmk_core/common/keyboard.c **** #endif
  86:tmk_core/common/keyboard.c **** 
  87:tmk_core/common/keyboard.c **** // Only enable this if console is enabled to print to
  88:tmk_core/common/keyboard.c **** #if defined(DEBUG_MATRIX_SCAN_RATE) && defined(CONSOLE_ENABLE)
  89:tmk_core/common/keyboard.c **** static uint32_t matrix_timer      = 0;
  90:tmk_core/common/keyboard.c **** static uint32_t matrix_scan_count = 0;
  91:tmk_core/common/keyboard.c **** 
  92:tmk_core/common/keyboard.c **** void matrix_scan_perf_task(void) {
  93:tmk_core/common/keyboard.c ****     matrix_scan_count++;
  94:tmk_core/common/keyboard.c **** 
  95:tmk_core/common/keyboard.c ****     uint32_t timer_now = timer_read32();
  96:tmk_core/common/keyboard.c ****     if (TIMER_DIFF_32(timer_now, matrix_timer) > 1000) {
  97:tmk_core/common/keyboard.c ****         dprintf("matrix scan frequency: %d\n", matrix_scan_count);
  98:tmk_core/common/keyboard.c **** 
  99:tmk_core/common/keyboard.c ****         matrix_timer      = timer_now;
 100:tmk_core/common/keyboard.c ****         matrix_scan_count = 0;
 101:tmk_core/common/keyboard.c ****     }
 102:tmk_core/common/keyboard.c **** }
 103:tmk_core/common/keyboard.c **** #else
 104:tmk_core/common/keyboard.c **** #    define matrix_scan_perf_task()
 105:tmk_core/common/keyboard.c **** #endif
 106:tmk_core/common/keyboard.c **** 
 107:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 108:tmk_core/common/keyboard.c **** extern const uint16_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
 109:tmk_core/common/keyboard.c **** static matrix_row_t   get_real_keys(uint8_t row, matrix_row_t rowdata) {
 110:tmk_core/common/keyboard.c ****     matrix_row_t out = 0;
 111:tmk_core/common/keyboard.c ****     for (uint8_t col = 0; col < MATRIX_COLS; col++) {
 112:tmk_core/common/keyboard.c ****         // read each key in the row data and check if the keymap defines it as a real key
 113:tmk_core/common/keyboard.c ****         if (pgm_read_byte(&keymaps[0][row][col]) && (rowdata & (1 << col))) {
 114:tmk_core/common/keyboard.c ****             // this creates new row data, if a key is defined in the keymap, it will be set here
 115:tmk_core/common/keyboard.c ****             out |= 1 << col;
 116:tmk_core/common/keyboard.c ****         }
 117:tmk_core/common/keyboard.c ****     }
 118:tmk_core/common/keyboard.c ****     return out;
 119:tmk_core/common/keyboard.c **** }
 120:tmk_core/common/keyboard.c **** 
 121:tmk_core/common/keyboard.c **** static inline bool popcount_more_than_one(matrix_row_t rowdata) {
 122:tmk_core/common/keyboard.c ****     rowdata &= rowdata - 1;  // if there are less than two bits (keys) set, rowdata will become zer
 123:tmk_core/common/keyboard.c ****     return rowdata;
 124:tmk_core/common/keyboard.c **** }
 125:tmk_core/common/keyboard.c **** 
 126:tmk_core/common/keyboard.c **** static inline bool has_ghost_in_row(uint8_t row, matrix_row_t rowdata) {
 127:tmk_core/common/keyboard.c ****     /* No ghost exists when less than 2 keys are down on the row.
 128:tmk_core/common/keyboard.c ****     If there are "active" blanks in the matrix, the key can't be pressed by the user,
 129:tmk_core/common/keyboard.c ****     there is no doubt as to which keys are really being pressed.
 130:tmk_core/common/keyboard.c ****     The ghosts will be ignored, they are KC_NO.   */
 131:tmk_core/common/keyboard.c ****     rowdata = get_real_keys(row, rowdata);
 132:tmk_core/common/keyboard.c ****     if ((popcount_more_than_one(rowdata)) == 0) {
 133:tmk_core/common/keyboard.c ****         return false;
 134:tmk_core/common/keyboard.c ****     }
 135:tmk_core/common/keyboard.c ****     /* Ghost occurs when the row shares a column line with other row,
 136:tmk_core/common/keyboard.c ****     and two columns are read on each row. Blanks in the matrix don't matter,
 137:tmk_core/common/keyboard.c ****     so they are filtered out.
 138:tmk_core/common/keyboard.c ****     If there are two or more real keys pressed and they match columns with
 139:tmk_core/common/keyboard.c ****     at least two of another row's real keys, the row will be ignored. Keep in mind,
 140:tmk_core/common/keyboard.c ****     we are checking one row at a time, not all of them at once.
 141:tmk_core/common/keyboard.c ****     */
 142:tmk_core/common/keyboard.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 143:tmk_core/common/keyboard.c ****         if (i != row && popcount_more_than_one(get_real_keys(i, matrix_get_row(i)) & rowdata)) {
 144:tmk_core/common/keyboard.c ****             return true;
 145:tmk_core/common/keyboard.c ****         }
 146:tmk_core/common/keyboard.c ****     }
 147:tmk_core/common/keyboard.c ****     return false;
 148:tmk_core/common/keyboard.c **** }
 149:tmk_core/common/keyboard.c **** 
 150:tmk_core/common/keyboard.c **** #endif
 151:tmk_core/common/keyboard.c **** 
 152:tmk_core/common/keyboard.c **** void disable_jtag(void) {
  16               		.loc 1 152 25 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 153:tmk_core/common/keyboard.c **** // To use PF4-7 (PC2-5 on ATmega32A), disable JTAG by writing JTD bit twice within four cycles.
 154:tmk_core/common/keyboard.c **** #if (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__) || defined(__AVR_AT90USB1286__) || 
 155:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
 156:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
 157:tmk_core/common/keyboard.c **** #elif defined(__AVR_ATmega32A__)
 158:tmk_core/common/keyboard.c ****     MCUCSR |= _BV(JTD);
 159:tmk_core/common/keyboard.c ****     MCUCSR |= _BV(JTD);
 160:tmk_core/common/keyboard.c **** #endif
 161:tmk_core/common/keyboard.c **** }
  22               		.loc 1 161 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE6:
  28               		.section	.text.keyboard_pre_init_user,"ax",@progbits
  29               		.weak	keyboard_pre_init_user
  31               	keyboard_pre_init_user:
  32               	.LFB8:
 162:tmk_core/common/keyboard.c **** 
 163:tmk_core/common/keyboard.c **** /** \brief matrix_setup
 164:tmk_core/common/keyboard.c ****  *
 165:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 166:tmk_core/common/keyboard.c ****  */
 167:tmk_core/common/keyboard.c **** __attribute__((weak)) void matrix_setup(void) {}
 168:tmk_core/common/keyboard.c **** 
 169:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_user
 170:tmk_core/common/keyboard.c ****  *
 171:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 172:tmk_core/common/keyboard.c ****  */
 173:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_user(void) {}
  33               		.loc 1 173 57 view -0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  39               		.loc 1 173 58 view .LVU3
  40               	/* epilogue start */
  41               		.loc 1 173 1 is_stmt 0 view .LVU4
  42 0000 0895      		ret
  43               		.cfi_endproc
  44               	.LFE8:
  46               		.set	keyboard_pre_init_user.localalias.0,keyboard_pre_init_user
  47               		.section	.text.matrix_setup,"ax",@progbits
  48               		.weak	matrix_setup
  50               	matrix_setup:
  51               	.LFB20:
  52               		.cfi_startproc
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 0 */
  56               	.L__stack_usage = 0
  57               	/* epilogue start */
  58 0000 0895      		ret
  59               		.cfi_endproc
  60               	.LFE20:
  62               		.section	.text.keyboard_pre_init_kb,"ax",@progbits
  63               		.weak	keyboard_pre_init_kb
  65               	keyboard_pre_init_kb:
  66               	.LFB9:
 174:tmk_core/common/keyboard.c **** 
 175:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_kb
 176:tmk_core/common/keyboard.c ****  *
 177:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 178:tmk_core/common/keyboard.c ****  */
 179:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_kb(void) { keyboard_pre_init_user(); }
  67               		.loc 1 179 55 is_stmt 1 view -0
  68               		.cfi_startproc
  69               	/* prologue: function */
  70               	/* frame size = 0 */
  71               	/* stack size = 0 */
  72               	.L__stack_usage = 0
  73               		.loc 1 179 57 view .LVU6
  74 0000 0C94 0000 		jmp keyboard_pre_init_user
  75               	.LVL0:
  76               		.cfi_endproc
  77               	.LFE9:
  79               		.section	.text.keyboard_post_init_user,"ax",@progbits
  80               		.weak	keyboard_post_init_user
  82               	keyboard_post_init_user:
  83               	.LFB18:
  84               		.cfi_startproc
  85               	/* prologue: function */
  86               	/* frame size = 0 */
  87               	/* stack size = 0 */
  88               	.L__stack_usage = 0
  89               	/* epilogue start */
  90 0000 0895      		ret
  91               		.cfi_endproc
  92               	.LFE18:
  94               		.section	.text.keyboard_post_init_kb,"ax",@progbits
  95               		.weak	keyboard_post_init_kb
  97               	keyboard_post_init_kb:
  98               	.LFB11:
 180:tmk_core/common/keyboard.c **** 
 181:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_user
 182:tmk_core/common/keyboard.c ****  *
 183:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 184:tmk_core/common/keyboard.c ****  */
 185:tmk_core/common/keyboard.c **** 
 186:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_post_init_user() {}
 187:tmk_core/common/keyboard.c **** 
 188:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_kb
 189:tmk_core/common/keyboard.c ****  *
 190:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 191:tmk_core/common/keyboard.c ****  */
 192:tmk_core/common/keyboard.c **** 
 193:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_post_init_kb(void) { keyboard_post_init_user(); }
  99               		.loc 1 193 56 view -0
 100               		.cfi_startproc
 101               	/* prologue: function */
 102               	/* frame size = 0 */
 103               	/* stack size = 0 */
 104               	.L__stack_usage = 0
 105               		.loc 1 193 58 view .LVU8
 106 0000 0C94 0000 		jmp keyboard_post_init_user
 107               	.LVL1:
 108               		.cfi_endproc
 109               	.LFE11:
 111               		.section	.text.keyboard_setup,"ax",@progbits
 112               	.global	keyboard_setup
 114               	keyboard_setup:
 115               	.LFB12:
 194:tmk_core/common/keyboard.c **** 
 195:tmk_core/common/keyboard.c **** /** \brief keyboard_setup
 196:tmk_core/common/keyboard.c ****  *
 197:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 198:tmk_core/common/keyboard.c ****  */
 199:tmk_core/common/keyboard.c **** void keyboard_setup(void) {
 116               		.loc 1 199 27 view -0
 117               		.cfi_startproc
 118               	/* prologue: function */
 119               	/* frame size = 0 */
 120               	/* stack size = 0 */
 121               	.L__stack_usage = 0
 200:tmk_core/common/keyboard.c **** #ifndef NO_JTAG_DISABLE
 201:tmk_core/common/keyboard.c ****     disable_jtag();
 122               		.loc 1 201 5 view .LVU10
 202:tmk_core/common/keyboard.c **** #endif
 203:tmk_core/common/keyboard.c ****     matrix_setup();
 123               		.loc 1 203 5 view .LVU11
 124 0000 0E94 0000 		call matrix_setup
 125               	.LVL2:
 204:tmk_core/common/keyboard.c ****     keyboard_pre_init_kb();
 126               		.loc 1 204 5 view .LVU12
 127 0004 0C94 0000 		jmp keyboard_pre_init_kb
 128               	.LVL3:
 129               		.cfi_endproc
 130               	.LFE12:
 132               		.section	.text.is_keyboard_master,"ax",@progbits
 133               		.weak	is_keyboard_master
 135               	is_keyboard_master:
 136               	.LFB13:
 205:tmk_core/common/keyboard.c **** }
 206:tmk_core/common/keyboard.c **** 
 207:tmk_core/common/keyboard.c **** /** \brief is_keyboard_master
 208:tmk_core/common/keyboard.c ****  *
 209:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 210:tmk_core/common/keyboard.c ****  */
 211:tmk_core/common/keyboard.c **** __attribute__((weak)) bool is_keyboard_master(void) { return true; }
 137               		.loc 1 211 53 view -0
 138               		.cfi_startproc
 139               	/* prologue: function */
 140               	/* frame size = 0 */
 141               	/* stack size = 0 */
 142               	.L__stack_usage = 0
 143               		.loc 1 211 55 view .LVU14
 144               		.loc 1 211 1 is_stmt 0 view .LVU15
 145 0000 81E0      		ldi r24,lo8(1)
 146               	/* epilogue start */
 147 0002 0895      		ret
 148               		.cfi_endproc
 149               	.LFE13:
 151               		.section	.text.keyboard_init,"ax",@progbits
 152               	.global	keyboard_init
 154               	keyboard_init:
 155               	.LFB14:
 212:tmk_core/common/keyboard.c **** 
 213:tmk_core/common/keyboard.c **** /** \brief keyboard_init
 214:tmk_core/common/keyboard.c ****  *
 215:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 216:tmk_core/common/keyboard.c ****  */
 217:tmk_core/common/keyboard.c **** void keyboard_init(void) {
 156               		.loc 1 217 26 is_stmt 1 view -0
 157               		.cfi_startproc
 158               	/* prologue: function */
 159               	/* frame size = 0 */
 160               	/* stack size = 0 */
 161               	.L__stack_usage = 0
 218:tmk_core/common/keyboard.c ****     timer_init();
 162               		.loc 1 218 5 view .LVU17
 163 0000 0E94 0000 		call timer_init
 164               	.LVL4:
 219:tmk_core/common/keyboard.c ****     matrix_init();
 165               		.loc 1 219 5 view .LVU18
 166 0004 0E94 0000 		call matrix_init
 167               	.LVL5:
 220:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 221:tmk_core/common/keyboard.c ****     qwiic_init();
 222:tmk_core/common/keyboard.c **** #endif
 223:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 224:tmk_core/common/keyboard.c ****     oled_init(OLED_ROTATION_0);
 225:tmk_core/common/keyboard.c **** #endif
 226:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 227:tmk_core/common/keyboard.c ****     ps2_mouse_init();
 228:tmk_core/common/keyboard.c **** #endif
 229:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 230:tmk_core/common/keyboard.c ****     serial_mouse_init();
 231:tmk_core/common/keyboard.c **** #endif
 232:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 233:tmk_core/common/keyboard.c ****     adb_mouse_init();
 234:tmk_core/common/keyboard.c **** #endif
 235:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 236:tmk_core/common/keyboard.c ****     bootmagic();
 237:tmk_core/common/keyboard.c **** #else
 238:tmk_core/common/keyboard.c ****     magic();
 168               		.loc 1 238 5 view .LVU19
 169 0008 0E94 0000 		call magic
 170               	.LVL6:
 239:tmk_core/common/keyboard.c **** #endif
 240:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 241:tmk_core/common/keyboard.c ****     backlight_init();
 242:tmk_core/common/keyboard.c **** #endif
 243:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 244:tmk_core/common/keyboard.c ****     rgblight_init();
 245:tmk_core/common/keyboard.c **** #endif
 246:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
 247:tmk_core/common/keyboard.c ****     steno_init();
 248:tmk_core/common/keyboard.c **** #endif
 249:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
 250:tmk_core/common/keyboard.c ****     fauxclicky_init();
 251:tmk_core/common/keyboard.c **** #endif
 252:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 253:tmk_core/common/keyboard.c ****     pointing_device_init();
 254:tmk_core/common/keyboard.c **** #endif
 255:tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 256:tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 257:tmk_core/common/keyboard.c **** #endif
 258:tmk_core/common/keyboard.c ****     keyboard_post_init_kb(); /* Always keep this last */
 171               		.loc 1 258 5 view .LVU20
 172 000c 0C94 0000 		jmp keyboard_post_init_kb
 173               	.LVL7:
 174               		.cfi_endproc
 175               	.LFE14:
 177               		.section	.text.keyboard_set_leds,"ax",@progbits
 178               	.global	keyboard_set_leds
 180               	keyboard_set_leds:
 181               	.LVL8:
 182               	.LFB16:
 259:tmk_core/common/keyboard.c **** }
 260:tmk_core/common/keyboard.c **** 
 261:tmk_core/common/keyboard.c **** /** \brief Keyboard task: Do keyboard routine jobs
 262:tmk_core/common/keyboard.c ****  *
 263:tmk_core/common/keyboard.c ****  * Do routine keyboard jobs:
 264:tmk_core/common/keyboard.c ****  *
 265:tmk_core/common/keyboard.c ****  * * scan matrix
 266:tmk_core/common/keyboard.c ****  * * handle mouse movements
 267:tmk_core/common/keyboard.c ****  * * run visualizer code
 268:tmk_core/common/keyboard.c ****  * * handle midi commands
 269:tmk_core/common/keyboard.c ****  * * light LEDs
 270:tmk_core/common/keyboard.c ****  *
 271:tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 272:tmk_core/common/keyboard.c ****  */
 273:tmk_core/common/keyboard.c **** void keyboard_task(void) {
 274:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 275:tmk_core/common/keyboard.c ****     static uint8_t      led_status    = 0;
 276:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_row    = 0;
 277:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_change = 0;
 278:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 279:tmk_core/common/keyboard.c ****     uint8_t keys_processed = 0;
 280:tmk_core/common/keyboard.c **** #endif
 281:tmk_core/common/keyboard.c **** 
 282:tmk_core/common/keyboard.c **** #if defined(OLED_DRIVER_ENABLE) && !defined(OLED_DISABLE_TIMEOUT)
 283:tmk_core/common/keyboard.c ****     uint8_t ret = matrix_scan();
 284:tmk_core/common/keyboard.c **** #else
 285:tmk_core/common/keyboard.c ****     matrix_scan();
 286:tmk_core/common/keyboard.c **** #endif
 287:tmk_core/common/keyboard.c **** 
 288:tmk_core/common/keyboard.c ****     if (is_keyboard_master()) {
 289:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 290:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 291:tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 292:tmk_core/common/keyboard.c ****             if (matrix_change) {
 293:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 294:tmk_core/common/keyboard.c ****                 if (has_ghost_in_row(r, matrix_row)) {
 295:tmk_core/common/keyboard.c ****                     continue;
 296:tmk_core/common/keyboard.c ****                 }
 297:tmk_core/common/keyboard.c **** #endif
 298:tmk_core/common/keyboard.c ****                 if (debug_matrix) matrix_print();
 299:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 300:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1 << c)) {
 301:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 302:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & ((matri
 303:tmk_core/common/keyboard.c ****                         });
 304:tmk_core/common/keyboard.c ****                         // record a processed key
 305:tmk_core/common/keyboard.c ****                         matrix_prev[r] ^= ((matrix_row_t)1 << c);
 306:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 307:tmk_core/common/keyboard.c ****                         // only jump out if we have processed "enough" keys.
 308:tmk_core/common/keyboard.c ****                         if (++keys_processed >= QMK_KEYS_PER_SCAN)
 309:tmk_core/common/keyboard.c **** #endif
 310:tmk_core/common/keyboard.c ****                             // process a key per task call
 311:tmk_core/common/keyboard.c ****                             goto MATRIX_LOOP_END;
 312:tmk_core/common/keyboard.c ****                     }
 313:tmk_core/common/keyboard.c ****                 }
 314:tmk_core/common/keyboard.c ****             }
 315:tmk_core/common/keyboard.c ****         }
 316:tmk_core/common/keyboard.c ****     }
 317:tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 318:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 319:tmk_core/common/keyboard.c ****     // we can get here with some keys processed now.
 320:tmk_core/common/keyboard.c ****     if (!keys_processed)
 321:tmk_core/common/keyboard.c **** #endif
 322:tmk_core/common/keyboard.c ****         action_exec(TICK);
 323:tmk_core/common/keyboard.c **** 
 324:tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 325:tmk_core/common/keyboard.c **** 
 326:tmk_core/common/keyboard.c **** #ifdef DEBUG_MATRIX_SCAN_RATE
 327:tmk_core/common/keyboard.c ****     matrix_scan_perf_task();
 328:tmk_core/common/keyboard.c **** #endif
 329:tmk_core/common/keyboard.c **** 
 330:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 331:tmk_core/common/keyboard.c ****     qwiic_task();
 332:tmk_core/common/keyboard.c **** #endif
 333:tmk_core/common/keyboard.c **** 
 334:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 335:tmk_core/common/keyboard.c ****     oled_task();
 336:tmk_core/common/keyboard.c **** #    ifndef OLED_DISABLE_TIMEOUT
 337:tmk_core/common/keyboard.c ****     // Wake up oled if user is using those fabulous keys!
 338:tmk_core/common/keyboard.c ****     if (ret) oled_on();
 339:tmk_core/common/keyboard.c **** #    endif
 340:tmk_core/common/keyboard.c **** #endif
 341:tmk_core/common/keyboard.c **** 
 342:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 343:tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 344:tmk_core/common/keyboard.c ****     mousekey_task();
 345:tmk_core/common/keyboard.c **** #endif
 346:tmk_core/common/keyboard.c **** 
 347:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 348:tmk_core/common/keyboard.c ****     ps2_mouse_task();
 349:tmk_core/common/keyboard.c **** #endif
 350:tmk_core/common/keyboard.c **** 
 351:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 352:tmk_core/common/keyboard.c ****     serial_mouse_task();
 353:tmk_core/common/keyboard.c **** #endif
 354:tmk_core/common/keyboard.c **** 
 355:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 356:tmk_core/common/keyboard.c ****     adb_mouse_task();
 357:tmk_core/common/keyboard.c **** #endif
 358:tmk_core/common/keyboard.c **** 
 359:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 360:tmk_core/common/keyboard.c ****     serial_link_update();
 361:tmk_core/common/keyboard.c **** #endif
 362:tmk_core/common/keyboard.c **** 
 363:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 364:tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, visualizer_get_mods(), host_keyboard_leds()
 365:tmk_core/common/keyboard.c **** #endif
 366:tmk_core/common/keyboard.c **** 
 367:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 368:tmk_core/common/keyboard.c ****     pointing_device_task();
 369:tmk_core/common/keyboard.c **** #endif
 370:tmk_core/common/keyboard.c **** 
 371:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
 372:tmk_core/common/keyboard.c ****     midi_task();
 373:tmk_core/common/keyboard.c **** #endif
 374:tmk_core/common/keyboard.c **** 
 375:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
 376:tmk_core/common/keyboard.c ****     if (velocikey_enabled()) {
 377:tmk_core/common/keyboard.c ****         velocikey_decelerate();
 378:tmk_core/common/keyboard.c ****     }
 379:tmk_core/common/keyboard.c **** #endif
 380:tmk_core/common/keyboard.c **** 
 381:tmk_core/common/keyboard.c ****     // update LED
 382:tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 383:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 384:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 385:tmk_core/common/keyboard.c ****     }
 386:tmk_core/common/keyboard.c **** }
 387:tmk_core/common/keyboard.c **** 
 388:tmk_core/common/keyboard.c **** /** \brief keyboard set leds
 389:tmk_core/common/keyboard.c ****  *
 390:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 391:tmk_core/common/keyboard.c ****  */
 392:tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds) {
 183               		.loc 1 392 38 view -0
 184               		.cfi_startproc
 185               		.loc 1 392 38 is_stmt 0 view .LVU22
 186 0000 CF93      		push r28
 187               	.LCFI0:
 188               		.cfi_def_cfa_offset 3
 189               		.cfi_offset 28, -2
 190               	/* prologue: function */
 191               	/* frame size = 0 */
 192               	/* stack size = 1 */
 193               	.L__stack_usage = 1
 194 0002 C82F      		mov r28,r24
 393:tmk_core/common/keyboard.c ****     if (debug_keyboard) {
 195               		.loc 1 393 5 is_stmt 1 view .LVU23
 196               		.loc 1 393 9 is_stmt 0 view .LVU24
 197 0004 8091 0000 		lds r24,debug_config
 198               	.LVL9:
 199               		.loc 1 393 8 view .LVU25
 200 0008 82FF      		sbrs r24,2
 201 000a 00C0      		rjmp .L13
 394:tmk_core/common/keyboard.c ****         debug("keyboard_set_led: ");
 202               		.loc 1 394 9 is_stmt 1 view .LVU26
 203               		.loc 1 394 9 view .LVU27
 204 000c 80FF      		sbrs r24,0
 205 000e 00C0      		rjmp .L13
 206               		.loc 1 394 9 discriminator 1 view .LVU28
 207               	.LBB2:
 208               		.loc 1 394 9 discriminator 1 view .LVU29
 209               		.loc 1 394 9 discriminator 1 view .LVU30
 210               	.LBE2:
 211 0010 80E0      		ldi r24,lo8(__c.2939)
 212 0012 90E0      		ldi r25,hi8(__c.2939)
 213 0014 0E94 0000 		call xputs
 214               	.LVL10:
 215               		.loc 1 394 9 discriminator 1 view .LVU31
 395:tmk_core/common/keyboard.c ****         debug_hex8(leds);
 216               		.loc 1 395 9 discriminator 1 view .LVU32
 217               		.loc 1 395 9 discriminator 1 view .LVU33
 218 0018 8091 0000 		lds r24,debug_config
 219 001c 80FF      		sbrs r24,0
 220 001e 00C0      		rjmp .L13
 221               		.loc 1 395 9 discriminator 1 view .LVU34
 222               	.LBB3:
 223               		.loc 1 395 9 discriminator 1 view .LVU35
 224               		.loc 1 395 9 discriminator 1 view .LVU36
 225               	.LBE3:
 226 0020 1F92      		push __zero_reg__
 227               	.LCFI1:
 228               		.cfi_def_cfa_offset 4
 229 0022 CF93      		push r28
 230               	.LCFI2:
 231               		.cfi_def_cfa_offset 5
 232 0024 80E0      		ldi r24,lo8(__c.2941)
 233 0026 90E0      		ldi r25,hi8(__c.2941)
 234 0028 9F93      		push r25
 235               	.LCFI3:
 236               		.cfi_def_cfa_offset 6
 237 002a 8F93      		push r24
 238               	.LCFI4:
 239               		.cfi_def_cfa_offset 7
 240 002c 0E94 0000 		call __xprintf
 241               	.LVL11:
 242               		.loc 1 395 9 discriminator 1 view .LVU37
 396:tmk_core/common/keyboard.c ****         debug("\n");
 243               		.loc 1 396 9 discriminator 1 view .LVU38
 244               		.loc 1 396 9 discriminator 1 view .LVU39
 245 0030 8091 0000 		lds r24,debug_config
 246 0034 0F90      		pop __tmp_reg__
 247 0036 0F90      		pop __tmp_reg__
 248 0038 0F90      		pop __tmp_reg__
 249 003a 0F90      		pop __tmp_reg__
 250               	.LCFI5:
 251               		.cfi_def_cfa_offset 3
 252 003c 80FF      		sbrs r24,0
 253 003e 00C0      		rjmp .L13
 254               		.loc 1 396 9 discriminator 1 view .LVU40
 255               	.LBB4:
 256               		.loc 1 396 9 discriminator 1 view .LVU41
 257               		.loc 1 396 9 discriminator 1 view .LVU42
 258               	.LBE4:
 259 0040 80E0      		ldi r24,lo8(__c.2943)
 260 0042 90E0      		ldi r25,hi8(__c.2943)
 261 0044 0E94 0000 		call xputs
 262               	.LVL12:
 263               	.L13:
 264               		.loc 1 396 9 discriminator 3 view .LVU43
 397:tmk_core/common/keyboard.c ****     }
 398:tmk_core/common/keyboard.c ****     led_set(leds);
 265               		.loc 1 398 5 discriminator 3 view .LVU44
 266 0048 8C2F      		mov r24,r28
 267               	/* epilogue start */
 399:tmk_core/common/keyboard.c **** }
 268               		.loc 1 399 1 is_stmt 0 discriminator 3 view .LVU45
 269 004a CF91      		pop r28
 270               	.LVL13:
 398:tmk_core/common/keyboard.c **** }
 271               		.loc 1 398 5 discriminator 3 view .LVU46
 272 004c 0C94 0000 		jmp led_set
 273               	.LVL14:
 398:tmk_core/common/keyboard.c **** }
 274               		.loc 1 398 5 discriminator 3 view .LVU47
 275               		.cfi_endproc
 276               	.LFE16:
 278               		.section	.text.keyboard_task,"ax",@progbits
 279               	.global	keyboard_task
 281               	keyboard_task:
 282               	.LFB15:
 273:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 283               		.loc 1 273 26 is_stmt 1 view -0
 284               		.cfi_startproc
 285 0000 7F92      		push r7
 286               	.LCFI6:
 287               		.cfi_def_cfa_offset 3
 288               		.cfi_offset 7, -2
 289 0002 8F92      		push r8
 290               	.LCFI7:
 291               		.cfi_def_cfa_offset 4
 292               		.cfi_offset 8, -3
 293 0004 9F92      		push r9
 294               	.LCFI8:
 295               		.cfi_def_cfa_offset 5
 296               		.cfi_offset 9, -4
 297 0006 AF92      		push r10
 298               	.LCFI9:
 299               		.cfi_def_cfa_offset 6
 300               		.cfi_offset 10, -5
 301 0008 BF92      		push r11
 302               	.LCFI10:
 303               		.cfi_def_cfa_offset 7
 304               		.cfi_offset 11, -6
 305 000a CF92      		push r12
 306               	.LCFI11:
 307               		.cfi_def_cfa_offset 8
 308               		.cfi_offset 12, -7
 309 000c DF92      		push r13
 310               	.LCFI12:
 311               		.cfi_def_cfa_offset 9
 312               		.cfi_offset 13, -8
 313 000e EF92      		push r14
 314               	.LCFI13:
 315               		.cfi_def_cfa_offset 10
 316               		.cfi_offset 14, -9
 317 0010 FF92      		push r15
 318               	.LCFI14:
 319               		.cfi_def_cfa_offset 11
 320               		.cfi_offset 15, -10
 321 0012 0F93      		push r16
 322               	.LCFI15:
 323               		.cfi_def_cfa_offset 12
 324               		.cfi_offset 16, -11
 325 0014 1F93      		push r17
 326               	.LCFI16:
 327               		.cfi_def_cfa_offset 13
 328               		.cfi_offset 17, -12
 329 0016 CF93      		push r28
 330               	.LCFI17:
 331               		.cfi_def_cfa_offset 14
 332               		.cfi_offset 28, -13
 333 0018 DF93      		push r29
 334               	.LCFI18:
 335               		.cfi_def_cfa_offset 15
 336               		.cfi_offset 29, -14
 337 001a CDB7      		in r28,__SP_L__
 338 001c DEB7      		in r29,__SP_H__
 339               	.LCFI19:
 340               		.cfi_def_cfa_register 28
 341 001e 2A97      		sbiw r28,10
 342               	.LCFI20:
 343               		.cfi_def_cfa_offset 25
 344 0020 0FB6      		in __tmp_reg__,__SREG__
 345 0022 F894      		cli
 346 0024 DEBF      		out __SP_H__,r29
 347 0026 0FBE      		out __SREG__,__tmp_reg__
 348 0028 CDBF      		out __SP_L__,r28
 349               	/* prologue: function */
 350               	/* frame size = 10 */
 351               	/* stack size = 23 */
 352               	.L__stack_usage = 23
 274:tmk_core/common/keyboard.c ****     static uint8_t      led_status    = 0;
 353               		.loc 1 274 5 view .LVU49
 275:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_row    = 0;
 354               		.loc 1 275 5 view .LVU50
 276:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_change = 0;
 355               		.loc 1 276 5 view .LVU51
 356               	.LVL15:
 277:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 357               		.loc 1 277 5 view .LVU52
 285:tmk_core/common/keyboard.c **** #endif
 358               		.loc 1 285 5 view .LVU53
 359 002a 0E94 0000 		call matrix_scan
 360               	.LVL16:
 288:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 361               		.loc 1 288 5 view .LVU54
 288:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 362               		.loc 1 288 9 is_stmt 0 view .LVU55
 363 002e 0E94 0000 		call is_keyboard_master
 364               	.LVL17:
 288:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 365               		.loc 1 288 8 view .LVU56
 366 0032 8823      		tst r24
 367 0034 01F4      		brne .+2
 368 0036 00C0      		rjmp .L27
 369 0038 90E0      		ldi r25,lo8(matrix_prev.2919)
 370 003a A92E      		mov r10,r25
 371 003c 90E0      		ldi r25,hi8(matrix_prev.2919)
 372 003e B92E      		mov r11,r25
 373 0040 10E0      		ldi r17,0
 374 0042 00E0      		ldi r16,0
 375               	.LBB5:
 376               	.LBB6:
 300:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 377               		.loc 1 300 58 view .LVU57
 378 0044 8824      		clr r8
 379 0046 8394      		inc r8
 380 0048 912C      		mov r9,__zero_reg__
 381               	.LVL18:
 382               	.L34:
 300:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 383               		.loc 1 300 58 view .LVU58
 384 004a 702E      		mov r7,r16
 385               	.LVL19:
 300:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 386               		.loc 1 300 58 view .LVU59
 387               	.LBE6:
 290:tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 388               		.loc 1 290 13 is_stmt 1 view .LVU60
 290:tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 389               		.loc 1 290 29 is_stmt 0 view .LVU61
 390 004c 802F      		mov r24,r16
 391 004e 0E94 0000 		call matrix_get_row
 392               	.LVL20:
 393 0052 7C01      		movw r14,r24
 394               	.LVL21:
 291:tmk_core/common/keyboard.c ****             if (matrix_change) {
 395               		.loc 1 291 13 is_stmt 1 view .LVU62
 291:tmk_core/common/keyboard.c ****             if (matrix_change) {
 396               		.loc 1 291 53 is_stmt 0 view .LVU63
 397 0054 F501      		movw r30,r10
 398 0056 C190      		ld r12,Z+
 399 0058 D190      		ld r13,Z+
 400 005a 5F01      		movw r10,r30
 401               	.LVL22:
 292:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 402               		.loc 1 292 13 is_stmt 1 view .LVU64
 292:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 403               		.loc 1 292 16 is_stmt 0 view .LVU65
 404 005c C816      		cp r12,r24
 405 005e D906      		cpc r13,r25
 406 0060 01F4      		brne .+2
 407 0062 00C0      		rjmp .L28
 298:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 408               		.loc 1 298 17 is_stmt 1 view .LVU66
 298:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 409               		.loc 1 298 21 is_stmt 0 view .LVU67
 410 0064 8091 0000 		lds r24,debug_config
 298:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 411               		.loc 1 298 20 view .LVU68
 412 0068 81FD      		sbrc r24,1
 298:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 413               		.loc 1 298 35 is_stmt 1 discriminator 1 view .LVU69
 414 006a 0E94 0000 		call matrix_print
 415               	.LVL23:
 416               	.L29:
 291:tmk_core/common/keyboard.c ****             if (matrix_change) {
 417               		.loc 1 291 27 is_stmt 0 view .LVU70
 418 006e 9601      		movw r18,r12
 419 0070 2E25      		eor r18,r14
 420 0072 3F25      		eor r19,r15
 299:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1 << c)) {
 421               		.loc 1 299 17 is_stmt 1 view .LVU71
 422               	.LBB7:
 299:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1 << c)) {
 423               		.loc 1 299 22 view .LVU72
 424               	.LVL24:
 299:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1 << c)) {
 425               		.loc 1 299 37 view .LVU73
 426               	.LBE7:
 291:tmk_core/common/keyboard.c ****             if (matrix_change) {
 427               		.loc 1 291 27 is_stmt 0 view .LVU74
 428 0074 90E0      		ldi r25,0
 429 0076 80E0      		ldi r24,0
 430               	.LVL25:
 431               	.L33:
 432               	.LBB8:
 300:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 433               		.loc 1 300 21 is_stmt 1 view .LVU75
 300:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 434               		.loc 1 300 58 is_stmt 0 view .LVU76
 435 0078 6401      		movw r12,r8
 436 007a 082E      		mov r0,r24
 437 007c 00C0      		rjmp 2f
 438               		1:
 439 007e CC0C      		lsl r12
 440 0080 DD1C      		rol r13
 441               		2:
 442 0082 0A94      		dec r0
 443 0084 02F4      		brpl 1b
 300:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 444               		.loc 1 300 39 view .LVU77
 445 0086 A601      		movw r20,r12
 446 0088 4223      		and r20,r18
 447 008a 5323      		and r21,r19
 300:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 448               		.loc 1 300 24 view .LVU78
 449 008c 452B      		or r20,r21
 450 008e 01F4      		brne .+2
 451 0090 00C0      		rjmp .L30
 301:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & ((matri
 452               		.loc 1 301 25 is_stmt 1 view .LVU79
 301:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & ((matri
 453               		.loc 1 301 49 is_stmt 0 view .LVU80
 454 0092 8E83      		std Y+6,r24
 455 0094 7F82      		std Y+7,r7
 302:tmk_core/common/keyboard.c ****                         });
 456               		.loc 1 302 91 view .LVU81
 457 0096 EC20      		and r14,r12
 458               	.LVL26:
 302:tmk_core/common/keyboard.c ****                         });
 459               		.loc 1 302 91 view .LVU82
 460 0098 FD20      		and r15,r13
 461 009a 81E0      		ldi r24,lo8(1)
 462               	.LVL27:
 302:tmk_core/common/keyboard.c ****                         });
 463               		.loc 1 302 91 view .LVU83
 464 009c EF28      		or r14,r15
 465 009e 01F4      		brne .L31
 466 00a0 80E0      		ldi r24,0
 467               	.L31:
 301:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & ((matri
 468               		.loc 1 301 49 view .LVU84
 469 00a2 8887      		std Y+8,r24
 302:tmk_core/common/keyboard.c ****                         });
 470               		.loc 1 302 127 view .LVU85
 471 00a4 0E94 0000 		call timer_read
 472               	.LVL28:
 302:tmk_core/common/keyboard.c ****                         });
 473               		.loc 1 302 140 view .LVU86
 474 00a8 8160      		ori r24,1
 301:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & ((matri
 475               		.loc 1 301 49 view .LVU87
 476 00aa 782F      		mov r23,r24
 477 00ac 9A87      		std Y+10,r25
 478 00ae 8987      		std Y+9,r24
 301:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & ((matri
 479               		.loc 1 301 25 view .LVU88
 480 00b0 4E81      		ldd r20,Y+6
 481 00b2 5F81      		ldd r21,Y+7
 482 00b4 6885      		ldd r22,Y+8
 483 00b6 8A85      		ldd r24,Y+10
 484 00b8 0E94 0000 		call action_exec
 485               	.LVL29:
 305:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 486               		.loc 1 305 25 is_stmt 1 view .LVU89
 305:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 487               		.loc 1 305 40 is_stmt 0 view .LVU90
 488 00bc 000F      		lsl r16
 489 00be 111F      		rol r17
 490               	.LVL30:
 305:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 491               		.loc 1 305 40 view .LVU91
 492 00c0 F801      		movw r30,r16
 493 00c2 E050      		subi r30,lo8(-(matrix_prev.2919))
 494 00c4 F040      		sbci r31,hi8(-(matrix_prev.2919))
 495 00c6 8081      		ld r24,Z
 496 00c8 9181      		ldd r25,Z+1
 497 00ca C826      		eor r12,r24
 498 00cc D926      		eor r13,r25
 499 00ce D182      		std Z+1,r13
 500 00d0 C082      		st Z,r12
 311:tmk_core/common/keyboard.c ****                     }
 501               		.loc 1 311 29 is_stmt 1 view .LVU92
 502               	.L32:
 311:tmk_core/common/keyboard.c ****                     }
 503               		.loc 1 311 29 is_stmt 0 view .LVU93
 504               	.LBE8:
 505               	.LBE5:
 344:tmk_core/common/keyboard.c **** #endif
 506               		.loc 1 344 5 is_stmt 1 view .LVU94
 507 00d2 0E94 0000 		call mousekey_task
 508               	.LVL31:
 382:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 509               		.loc 1 382 5 view .LVU95
 382:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 510               		.loc 1 382 23 is_stmt 0 view .LVU96
 511 00d6 0E94 0000 		call host_keyboard_leds
 512               	.LVL32:
 382:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 513               		.loc 1 382 8 view .LVU97
 514 00da 9091 0000 		lds r25,led_status.2920
 515 00de 8917      		cp r24,r25
 516 00e0 01F0      		breq .L26
 383:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 517               		.loc 1 383 9 is_stmt 1 view .LVU98
 383:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 518               		.loc 1 383 22 is_stmt 0 view .LVU99
 519 00e2 0E94 0000 		call host_keyboard_leds
 520               	.LVL33:
 383:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 521               		.loc 1 383 20 view .LVU100
 522 00e6 8093 0000 		sts led_status.2920,r24
 384:tmk_core/common/keyboard.c ****     }
 523               		.loc 1 384 9 is_stmt 1 view .LVU101
 524               	/* epilogue start */
 386:tmk_core/common/keyboard.c **** 
 525               		.loc 1 386 1 is_stmt 0 view .LVU102
 526 00ea 2A96      		adiw r28,10
 527 00ec 0FB6      		in __tmp_reg__,__SREG__
 528 00ee F894      		cli
 529 00f0 DEBF      		out __SP_H__,r29
 530 00f2 0FBE      		out __SREG__,__tmp_reg__
 531 00f4 CDBF      		out __SP_L__,r28
 532 00f6 DF91      		pop r29
 533 00f8 CF91      		pop r28
 534 00fa 1F91      		pop r17
 535 00fc 0F91      		pop r16
 536 00fe FF90      		pop r15
 537 0100 EF90      		pop r14
 538 0102 DF90      		pop r13
 539 0104 CF90      		pop r12
 540 0106 BF90      		pop r11
 541 0108 AF90      		pop r10
 542 010a 9F90      		pop r9
 543 010c 8F90      		pop r8
 544 010e 7F90      		pop r7
 384:tmk_core/common/keyboard.c ****     }
 545               		.loc 1 384 9 view .LVU103
 546 0110 0C94 0000 		jmp keyboard_set_leds
 547               	.LVL34:
 548               	.L30:
 549               	.LBB10:
 550               	.LBB9:
 299:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1 << c)) {
 551               		.loc 1 299 54 is_stmt 1 discriminator 2 view .LVU104
 299:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1 << c)) {
 552               		.loc 1 299 37 discriminator 2 view .LVU105
 553 0114 0196      		adiw r24,1
 554               	.LVL35:
 299:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1 << c)) {
 555               		.loc 1 299 17 is_stmt 0 discriminator 2 view .LVU106
 556 0116 8D30      		cpi r24,13
 557 0118 9105      		cpc r25,__zero_reg__
 558 011a 01F0      		breq .+2
 559 011c 00C0      		rjmp .L33
 560               	.LVL36:
 561               	.L28:
 299:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1 << c)) {
 562               		.loc 1 299 17 discriminator 2 view .LVU107
 563               	.LBE9:
 289:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 564               		.loc 1 289 46 is_stmt 1 view .LVU108
 289:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 565               		.loc 1 289 29 view .LVU109
 566 011e 0F5F      		subi r16,-1
 567 0120 1F4F      		sbci r17,-1
 568               	.LVL37:
 289:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 569               		.loc 1 289 9 is_stmt 0 view .LVU110
 570 0122 0430      		cpi r16,4
 571 0124 1105      		cpc r17,__zero_reg__
 572 0126 01F0      		breq .+2
 573 0128 00C0      		rjmp .L34
 574               	.LVL38:
 575               	.L27:
 289:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 576               		.loc 1 289 9 view .LVU111
 577               	.LBE10:
 322:tmk_core/common/keyboard.c **** 
 578               		.loc 1 322 9 is_stmt 1 view .LVU112
 322:tmk_core/common/keyboard.c **** 
 579               		.loc 1 322 21 is_stmt 0 view .LVU113
 580 012a 8FEF      		ldi r24,lo8(-1)
 581 012c 8983      		std Y+1,r24
 582 012e 8A83      		std Y+2,r24
 583 0130 1B82      		std Y+3,__zero_reg__
 584 0132 0E94 0000 		call timer_read
 585               	.LVL39:
 586 0136 8160      		ori r24,1
 587 0138 782F      		mov r23,r24
 588 013a 9D83      		std Y+5,r25
 589 013c 8C83      		std Y+4,r24
 322:tmk_core/common/keyboard.c **** 
 590               		.loc 1 322 9 view .LVU114
 591 013e 4981      		ldd r20,Y+1
 592 0140 5A81      		ldd r21,Y+2
 593 0142 6B81      		ldd r22,Y+3
 594 0144 8D81      		ldd r24,Y+5
 595 0146 0E94 0000 		call action_exec
 596               	.LVL40:
 597 014a 00C0      		rjmp .L32
 598               	.L26:
 599               	/* epilogue start */
 386:tmk_core/common/keyboard.c **** 
 600               		.loc 1 386 1 view .LVU115
 601 014c 2A96      		adiw r28,10
 602 014e 0FB6      		in __tmp_reg__,__SREG__
 603 0150 F894      		cli
 604 0152 DEBF      		out __SP_H__,r29
 605 0154 0FBE      		out __SREG__,__tmp_reg__
 606 0156 CDBF      		out __SP_L__,r28
 607 0158 DF91      		pop r29
 608 015a CF91      		pop r28
 609 015c 1F91      		pop r17
 610 015e 0F91      		pop r16
 611 0160 FF90      		pop r15
 612 0162 EF90      		pop r14
 613 0164 DF90      		pop r13
 614 0166 CF90      		pop r12
 615 0168 BF90      		pop r11
 616 016a AF90      		pop r10
 617 016c 9F90      		pop r9
 618 016e 8F90      		pop r8
 619 0170 7F90      		pop r7
 620 0172 0895      		ret
 621               		.cfi_endproc
 622               	.LFE15:
 624               		.section	.progmem.data.__c.2943,"a"
 627               	__c.2943:
 628 0000 0A00      		.string	"\n"
 629               		.section	.progmem.data.__c.2941,"a"
 632               	__c.2941:
 633 0000 2530 3258 		.string	"%02X"
 633      00
 634               		.section	.progmem.data.__c.2939,"a"
 637               	__c.2939:
 638 0000 6B65 7962 		.string	"keyboard_set_led: "
 638      6F61 7264 
 638      5F73 6574 
 638      5F6C 6564 
 638      3A20 00
 639               		.section	.bss.led_status.2920,"aw",@nobits
 642               	led_status.2920:
 643 0000 00        		.zero	1
 644               		.section	.bss.matrix_prev.2919,"aw",@nobits
 647               	matrix_prev.2919:
 648 0000 0000 0000 		.zero	8
 648      0000 0000 
 649               		.text
 650               	.Letext0:
 651               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdint.h"
 652               		.file 3 "tmk_core/common/keyboard.h"
 653               		.file 4 "tmk_core/common/matrix.h"
 654               		.file 5 "tmk_core/common/action.h"
 655               		.file 6 "tmk_core/common/host.h"
 656               		.file 7 "tmk_core/common/avr/xprintf.h"
 657               		.file 8 "tmk_core/common/debug.h"
 658               		.file 9 "quantum/keycode_config.h"
 659               		.file 10 "quantum/keymap.h"
 660               		.file 11 "tmk_core/common/timer.h"
 661               		.file 12 "tmk_core/common/command.h"
 662               		.file 13 "tmk_core/common/action_layer.h"
 663               		.file 14 "tmk_core/common/mousekey.h"
 664               		.file 15 "tmk_core/common/led.h"
 665               		.file 16 "tmk_core/common/magic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:4      *ABS*:000000000000003f __SREG__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:13     .text.disable_jtag:0000000000000000 disable_jtag
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:31     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:31     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user.localalias.0
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:50     .text.matrix_setup:0000000000000000 matrix_setup
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:65     .text.keyboard_pre_init_kb:0000000000000000 keyboard_pre_init_kb
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:82     .text.keyboard_post_init_user:0000000000000000 keyboard_post_init_user
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:97     .text.keyboard_post_init_kb:0000000000000000 keyboard_post_init_kb
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:114    .text.keyboard_setup:0000000000000000 keyboard_setup
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:135    .text.is_keyboard_master:0000000000000000 is_keyboard_master
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:154    .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:180    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:637    .progmem.data.__c.2939:0000000000000000 __c.2939
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:632    .progmem.data.__c.2941:0000000000000000 __c.2941
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:627    .progmem.data.__c.2943:0000000000000000 __c.2943
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:281    .text.keyboard_task:0000000000000000 keyboard_task
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:647    .bss.matrix_prev.2919:0000000000000000 matrix_prev.2919
/var/folders/hg/m293bnw975q820z9tg0f9gdw0000gn/T//cc193IOc.s:642    .bss.led_status.2920:0000000000000000 led_status.2920

UNDEFINED SYMBOLS
timer_init
matrix_init
magic
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
__do_clear_bss
