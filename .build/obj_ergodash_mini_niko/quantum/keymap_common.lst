   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               		.weak	action_get_macro
  13               	action_get_macro:
  14               	.LFB21:
  15               		.file 1 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #    include <util/delay.h>
  24:quantum/keymap_common.c **** #    include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "quantum.h"
  30:quantum/keymap_common.c **** 
  31:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
  32:quantum/keymap_common.c **** #    include "backlight.h"
  33:quantum/keymap_common.c **** #endif
  34:quantum/keymap_common.c **** 
  35:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  36:quantum/keymap_common.c **** #    include "process_midi.h"
  37:quantum/keymap_common.c **** #endif
  38:quantum/keymap_common.c **** 
  39:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  40:quantum/keymap_common.c **** 
  41:quantum/keymap_common.c **** #include <inttypes.h>
  42:quantum/keymap_common.c **** 
  43:quantum/keymap_common.c **** /* converts key to action */
  44:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key) {
  45:quantum/keymap_common.c ****     // 16bit keycodes - important
  46:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  47:quantum/keymap_common.c **** 
  48:quantum/keymap_common.c ****     // keycode remapping
  49:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  50:quantum/keymap_common.c **** 
  51:quantum/keymap_common.c ****     action_t action;
  52:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
  53:quantum/keymap_common.c **** 
  54:quantum/keymap_common.c ****     switch (keycode) {
  55:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  56:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  57:quantum/keymap_common.c ****             break;
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  59:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  60:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  61:quantum/keymap_common.c ****             break;
  62:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  63:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  64:quantum/keymap_common.c ****             break;
  65:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
  66:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  67:quantum/keymap_common.c ****             break;
  68:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  69:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  70:quantum/keymap_common.c ****             break;
  71:quantum/keymap_common.c ****         case KC_TRNS:
  72:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  73:quantum/keymap_common.c ****             break;
  74:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX:;
  75:quantum/keymap_common.c ****             // Has a modifier
  76:quantum/keymap_common.c ****             // Split it up
  77:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF);  // adds modifier to key
  78:quantum/keymap_common.c ****             break;
  79:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX:;
  80:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  81:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  82:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action((int)keycode & 0xFFF);
  83:quantum/keymap_common.c ****             break;
  84:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  85:quantum/keymap_common.c ****             if (keycode & 0x800)  // tap macros have upper bit set
  86:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  87:quantum/keymap_common.c ****             else
  88:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
  89:quantum/keymap_common.c ****             break;
  90:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
  91:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
  92:quantum/keymap_common.c ****             break;
  93:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
  94:quantum/keymap_common.c ****             // Layer set "GOTO"
  95:quantum/keymap_common.c ****             when         = (keycode >> 0x4) & 0x3;
  96:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
  97:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
  98:quantum/keymap_common.c ****             break;
  99:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX:;
 100:quantum/keymap_common.c ****             // Momentary action_layer
 101:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 102:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 103:quantum/keymap_common.c ****             break;
 104:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 105:quantum/keymap_common.c ****             // Set default action_layer
 106:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 107:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 108:quantum/keymap_common.c ****             break;
 109:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 110:quantum/keymap_common.c ****             // Set toggle
 111:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 112:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 113:quantum/keymap_common.c ****             break;
 114:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 115:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 116:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 117:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 118:quantum/keymap_common.c ****             break;
 119:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 120:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 121:quantum/keymap_common.c ****             mod         = mod_config(keycode & 0xFF);
 122:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 123:quantum/keymap_common.c ****             break;
 124:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 125:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 126:quantum/keymap_common.c ****             break;
 127:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 128:quantum/keymap_common.c ****             mod          = mod_config(keycode & 0xF);
 129:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 130:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 131:quantum/keymap_common.c ****             break;
 132:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 133:quantum/keymap_common.c ****             mod         = mod_config((keycode >> 0x8) & 0x1F);
 134:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 135:quantum/keymap_common.c ****             break;
 136:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
 137:quantum/keymap_common.c ****         case BL_ON:
 138:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_ON();
 139:quantum/keymap_common.c ****             break;
 140:quantum/keymap_common.c ****         case BL_OFF:
 141:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_OFF();
 142:quantum/keymap_common.c ****             break;
 143:quantum/keymap_common.c ****         case BL_DEC:
 144:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_DECREASE();
 145:quantum/keymap_common.c ****             break;
 146:quantum/keymap_common.c ****         case BL_INC:
 147:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_INCREASE();
 148:quantum/keymap_common.c ****             break;
 149:quantum/keymap_common.c ****         case BL_TOGG:
 150:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_TOGGLE();
 151:quantum/keymap_common.c ****             break;
 152:quantum/keymap_common.c ****         case BL_STEP:
 153:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_STEP();
 154:quantum/keymap_common.c ****             break;
 155:quantum/keymap_common.c **** #endif
 156:quantum/keymap_common.c **** #ifdef SWAP_HANDS_ENABLE
 157:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 158:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 159:quantum/keymap_common.c ****             break;
 160:quantum/keymap_common.c **** #endif
 161:quantum/keymap_common.c **** 
 162:quantum/keymap_common.c ****         default:
 163:quantum/keymap_common.c ****             action.code = ACTION_NO;
 164:quantum/keymap_common.c ****             break;
 165:quantum/keymap_common.c ****     }
 166:quantum/keymap_common.c ****     return action;
 167:quantum/keymap_common.c **** }
 168:quantum/keymap_common.c **** 
 169:quantum/keymap_common.c **** __attribute__((weak)) const uint16_t PROGMEM fn_actions[] = {
 170:quantum/keymap_common.c **** 
 171:quantum/keymap_common.c **** };
 172:quantum/keymap_common.c **** 
 173:quantum/keymap_common.c **** /* Macro */
 174:quantum/keymap_common.c **** __attribute__((weak)) const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
  16               		.loc 1 174 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 174 0
  24 0000 80E0      		ldi r24,0
  25 0002 90E0      		ldi r25,0
  26               	.LVL1:
  27 0004 0895      		ret
  28               		.cfi_endproc
  29               	.LFE21:
  31               		.section	.text.action_function,"ax",@progbits
  32               		.weak	action_function
  34               	action_function:
  35               	.LFB22:
 175:quantum/keymap_common.c **** 
 176:quantum/keymap_common.c **** /* Function */
 177:quantum/keymap_common.c **** __attribute__((weak)) void action_function(keyrecord_t *record, uint8_t id, uint8_t opt) {}
  36               		.loc 1 177 0
  37               		.cfi_startproc
  38               	.LVL2:
  39               	/* prologue: function */
  40               	/* frame size = 0 */
  41               	/* stack size = 0 */
  42               	.L__stack_usage = 0
  43 0000 0895      		ret
  44               		.cfi_endproc
  45               	.LFE22:
  47               		.section	.text.keymap_key_to_keycode,"ax",@progbits
  48               		.weak	keymap_key_to_keycode
  50               	keymap_key_to_keycode:
  51               	.LFB23:
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** // translates key to keycode
 180:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key) {
  52               		.loc 1 180 0
  53               		.cfi_startproc
  54               	.LVL3:
  55               	/* prologue: function */
  56               	/* frame size = 0 */
  57               	/* stack size = 0 */
  58               	.L__stack_usage = 0
  59               	.LBB2:
 181:quantum/keymap_common.c ****     // Read entire word (16bits)
 182:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
  60               		.loc 1 182 0
  61 0000 28E3      		ldi r18,lo8(56)
  62 0002 829F      		mul r24,r18
  63 0004 C001      		movw r24,r0
  64 0006 1124      		clr __zero_reg__
  65               	.LVL4:
  66 0008 FC01      		movw r30,r24
  67 000a 27E0      		ldi r18,lo8(7)
  68 000c 729F      		mul r23,r18
  69 000e E00D      		add r30,r0
  70 0010 F11D      		adc r31,r1
  71 0012 1124      		clr __zero_reg__
  72 0014 E60F      		add r30,r22
  73 0016 F11D      		adc r31,__zero_reg__
  74 0018 EE0F      		lsl r30
  75 001a FF1F      		rol r31
  76 001c E050      		subi r30,lo8(-(keymaps))
  77 001e F040      		sbci r31,hi8(-(keymaps))
  78               	.LVL5:
  79               	/* #APP */
  80               	 ;  182 "quantum/keymap_common.c" 1
  81 0020 8591      		lpm r24, Z+
  82 0022 9491      		lpm r25, Z
  83               		
  84               	 ;  0 "" 2
  85               	.LVL6:
  86               	/* #NOAPP */
  87               	.LBE2:
 183:quantum/keymap_common.c **** }
  88               		.loc 1 183 0
  89 0024 0895      		ret
  90               		.cfi_endproc
  91               	.LFE23:
  93               		.section	.text.keymap_function_id_to_action,"ax",@progbits
  94               		.weak	keymap_function_id_to_action
  96               	keymap_function_id_to_action:
  97               	.LFB24:
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates function id to action
 186:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_function_id_to_action(uint16_t function_id) {
  98               		.loc 1 186 0
  99               		.cfi_startproc
 100               	.LVL7:
 101               	/* prologue: function */
 102               	/* frame size = 0 */
 103               	/* stack size = 0 */
 104               	.L__stack_usage = 0
 105               	.LBB3:
 187:quantum/keymap_common.c **** // The compiler sees the empty (weak) fn_actions and generates a warning
 188:quantum/keymap_common.c **** // This function should not be called in that case, so the warning is too strict
 189:quantum/keymap_common.c **** // If this function is called however, the keymap should have overridden fn_actions, and then the c
 190:quantum/keymap_common.c **** // is comparing against the wrong array
 191:quantum/keymap_common.c **** #pragma GCC diagnostic push
 192:quantum/keymap_common.c **** #pragma GCC diagnostic ignored "-Warray-bounds"
 193:quantum/keymap_common.c ****     return pgm_read_word(&fn_actions[function_id]);
 106               		.loc 1 193 0
 107 0000 880F      		lsl r24
 108 0002 991F      		rol r25
 109               	.LVL8:
 110 0004 FC01      		movw r30,r24
 111 0006 E050      		subi r30,lo8(-(fn_actions))
 112 0008 F040      		sbci r31,hi8(-(fn_actions))
 113               	.LVL9:
 114               	/* #APP */
 115               	 ;  193 "quantum/keymap_common.c" 1
 116 000a 8591      		lpm r24, Z+
 117 000c 9491      		lpm r25, Z
 118               		
 119               	 ;  0 "" 2
 120               	.LVL10:
 121               	/* #NOAPP */
 122               	.LBE3:
 194:quantum/keymap_common.c **** #pragma GCC diagnostic pop
 195:quantum/keymap_common.c **** }
 123               		.loc 1 195 0
 124 000e 0895      		ret
 125               		.cfi_endproc
 126               	.LFE24:
 128               		.section	.text.action_for_key,"ax",@progbits
 129               	.global	action_for_key
 131               	action_for_key:
 132               	.LFB20:
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 133               		.loc 1 44 0
 134               		.cfi_startproc
 135               	.LVL11:
 136 0000 CF93      		push r28
 137               	.LCFI0:
 138               		.cfi_def_cfa_offset 3
 139               		.cfi_offset 28, -2
 140 0002 DF93      		push r29
 141               	.LCFI1:
 142               		.cfi_def_cfa_offset 4
 143               		.cfi_offset 29, -3
 144               	/* prologue: function */
 145               	/* frame size = 0 */
 146               	/* stack size = 2 */
 147               	.L__stack_usage = 2
  46:quantum/keymap_common.c **** 
 148               		.loc 1 46 0
 149 0004 0E94 0000 		call keymap_key_to_keycode
 150               	.LVL12:
  49:quantum/keymap_common.c **** 
 151               		.loc 1 49 0
 152 0008 0E94 0000 		call keycode_config
 153               	.LVL13:
 154 000c EC01      		movw r28,r24
 155               	.LVL14:
  54:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 156               		.loc 1 54 0
 157 000e 8115      		cp r24,__zero_reg__
 158 0010 9045      		sbci r25,80
 159 0012 00F0      		brlo .+2
 160 0014 00C0      		rjmp .L7
 161 0016 C115      		cp r28,__zero_reg__
 162 0018 80E4      		ldi r24,64
 163 001a D807      		cpc r29,r24
 164               	.LVL15:
 165 001c 00F0      		brlo .+2
 166 001e 00C0      		rjmp .L8
 167 0020 C83E      		cpi r28,-24
 168 0022 D105      		cpc r29,__zero_reg__
 169 0024 00F4      		brsh .L9
 170 0026 C03E      		cpi r28,-32
 171 0028 D105      		cpc r29,__zero_reg__
 172 002a 00F0      		brlo .+2
 173 002c 00C0      		rjmp .L10
 174 002e C83A      		cpi r28,-88
 175 0030 D105      		cpc r29,__zero_reg__
 176 0032 00F4      		brsh .L11
 177 0034 C53A      		cpi r28,-91
 178 0036 D105      		cpc r29,__zero_reg__
 179 0038 00F0      		brlo .+2
 180 003a 00C0      		rjmp .L12
 181 003c C130      		cpi r28,1
 182 003e D105      		cpc r29,__zero_reg__
 183 0040 01F4      		brne .+2
 184 0042 00C0      		rjmp .L10
 185 0044 00F4      		brsh .+2
 186 0046 00C0      		rjmp .L6
 187 0048 C430      		cpi r28,4
 188 004a D105      		cpc r29,__zero_reg__
 189 004c 00F0      		brlo .+2
 190 004e 00C0      		rjmp .L10
 191 0050 00C0      		rjmp .L6
 192               	.L11:
 193 0052 CF3B      		cpi r28,-65
 194 0054 D105      		cpc r29,__zero_reg__
 195 0056 00F4      		brsh .+2
 196 0058 00C0      		rjmp .L13
 197 005a C03C      		cpi r28,-64
 198 005c D105      		cpc r29,__zero_reg__
 199 005e 00F4      		brsh .+2
 200 0060 00C0      		rjmp .L6
  56:quantum/keymap_common.c ****             break;
 201               		.loc 1 56 0
 202 0062 CE01      		movw r24,r28
 203 0064 805C      		subi r24,-64
 204 0066 9109      		sbc r25,__zero_reg__
 205 0068 00C0      		rjmp .L67
 206               	.L9:
  54:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 207               		.loc 1 54 0
 208 006a C115      		cp r28,__zero_reg__
 209 006c 90E2      		ldi r25,32
 210 006e D907      		cpc r29,r25
 211 0070 00F4      		brsh .L15
 212 0072 C115      		cp r28,__zero_reg__
 213 0074 21E0      		ldi r18,1
 214 0076 D207      		cpc r29,r18
 215 0078 00F0      		brlo .+2
 216 007a 00C0      		rjmp .L10
 217 007c C03F      		cpi r28,-16
 218 007e D105      		cpc r29,__zero_reg__
 219 0080 00F4      		brsh .+2
 220 0082 00C0      		rjmp .L6
 221               	.LVL16:
  69:quantum/keymap_common.c ****             break;
 222               		.loc 1 69 0
 223 0084 D065      		ori r29,80
 224               	.LVL17:
  70:quantum/keymap_common.c ****         case KC_TRNS:
 225               		.loc 1 70 0
 226 0086 00C0      		rjmp .L10
 227               	.LVL18:
 228               	.L15:
  54:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 229               		.loc 1 54 0
 230 0088 C115      		cp r28,__zero_reg__
 231 008a 80E3      		ldi r24,48
 232 008c D807      		cpc r29,r24
 233 008e 00F0      		brlo .+2
 234 0090 00C0      		rjmp .L62
  82:quantum/keymap_common.c ****             break;
 235               		.loc 1 82 0
 236 0092 CE01      		movw r24,r28
 237 0094 9F70      		andi r25,15
 238 0096 00C0      		rjmp .L67
 239               	.LVL19:
 240               	.L7:
  54:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 241               		.loc 1 54 0
 242 0098 C115      		cp r28,__zero_reg__
 243 009a 95E5      		ldi r25,85
 244 009c D907      		cpc r29,r25
 245 009e 00F0      		brlo .+2
 246 00a0 00C0      		rjmp .L19
 247 00a2 C115      		cp r28,__zero_reg__
 248 00a4 24E5      		ldi r18,84
 249 00a6 D207      		cpc r29,r18
 250 00a8 00F0      		brlo .+2
 251 00aa 00C0      		rjmp .L20
 252 00ac C115      		cp r28,__zero_reg__
 253 00ae 82E5      		ldi r24,82
 254 00b0 D807      		cpc r29,r24
 255               	.LVL20:
 256 00b2 00F4      		brsh .L21
 257 00b4 C115      		cp r28,__zero_reg__
 258 00b6 91E5      		ldi r25,81
 259 00b8 D907      		cpc r29,r25
 260 00ba 00F0      		brlo .+2
 261 00bc 00C0      		rjmp .L69
 262               	.LVL21:
  97:quantum/keymap_common.c ****             break;
 263               		.loc 1 97 0
 264 00be CE01      		movw r24,r28
 265 00c0 74E0      		ldi r23,4
 266               		1:
 267 00c2 9695      		lsr r25
 268 00c4 8795      		ror r24
 269 00c6 7A95      		dec r23
 270 00c8 01F4      		brne 1b
 271 00ca 8370      		andi r24,lo8(3)
 272 00cc 9C2F      		mov r25,r28
 273 00ce 9370      		andi r25,lo8(3)
 274 00d0 21E0      		ldi r18,lo8(1)
 275 00d2 30E0      		ldi r19,0
 276 00d4 00C0      		rjmp 2f
 277               		1:
 278 00d6 220F      		lsl r18
 279 00d8 331F      		rol r19
 280               		2:
 281 00da 9A95      		dec r25
 282 00dc 02F4      		brpl 1b
 283 00de 3C68      		ori r19,140
 284 00e0 382B      		or r19,r24
 285 00e2 CF70      		andi r28,lo8(15)
 286               	.LVL22:
 287 00e4 C695      		lsr r28
 288 00e6 C695      		lsr r28
 289 00e8 80E2      		ldi r24,lo8(32)
 290 00ea C89F      		mul r28,r24
 291 00ec E001      		movw r28,r0
 292 00ee 1124      		clr __zero_reg__
 293               	.LVL23:
 294 00f0 C22B      		or r28,r18
 295 00f2 D32B      		or r29,r19
 296               	.LVL24:
  98:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX:;
 297               		.loc 1 98 0
 298 00f4 00C0      		rjmp .L10
 299               	.LVL25:
 300               	.L21:
 301 00f6 9E01      		movw r18,r28
 302 00f8 2370      		andi r18,3
 303 00fa 3327      		clr r19
 304 00fc 8C2F      		mov r24,r28
 305 00fe 8695      		lsr r24
 306 0100 8695      		lsr r24
  54:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 307               		.loc 1 54 0
 308 0102 C115      		cp r28,__zero_reg__
 309 0104 D345      		sbci r29,83
 310 0106 00F0      		brlo .+2
 311 0108 00C0      		rjmp .L64
 312               	.LVL26:
 107:quantum/keymap_common.c ****             break;
 313               		.loc 1 107 0
 314 010a C1E0      		ldi r28,lo8(1)
 315 010c D0E0      		ldi r29,0
 316               	.LVL27:
 317 010e 00C0      		rjmp 2f
 318               		1:
 319 0110 CC0F      		lsl r28
 320 0112 DD1F      		rol r29
 321               		2:
 322 0114 2A95      		dec r18
 323 0116 02F4      		brpl 1b
 324 0118 20E2      		ldi r18,lo8(32)
 325 011a 829F      		mul r24,r18
 326 011c C001      		movw r24,r0
 327 011e 1124      		clr __zero_reg__
 328 0120 C82B      		or r28,r24
 329 0122 D92B      		or r29,r25
 330               	.LVL28:
 331 0124 DC68      		ori r29,140
 332               	.LVL29:
 108:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 333               		.loc 1 108 0
 334 0126 00C0      		rjmp .L10
 335               	.LVL30:
 336               	.L19:
  54:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 337               		.loc 1 54 0
 338 0128 C115      		cp r28,__zero_reg__
 339 012a 29E5      		ldi r18,89
 340 012c D207      		cpc r29,r18
 341 012e 00F4      		brsh .L26
 342 0130 C115      		cp r28,__zero_reg__
 343 0132 88E5      		ldi r24,88
 344 0134 D807      		cpc r29,r24
 345               	.LVL31:
 346 0136 00F0      		brlo .+2
 347 0138 00C0      		rjmp .L27
 348 013a C115      		cp r28,__zero_reg__
 349 013c 96E5      		ldi r25,86
 350 013e D907      		cpc r29,r25
 351 0140 00F0      		brlo .+2
 352 0142 00C0      		rjmp .L6
 121:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 353               		.loc 1 121 0
 354 0144 8C2F      		mov r24,r28
 355 0146 0E94 0000 		call mod_config
 356               	.LVL32:
 122:quantum/keymap_common.c ****             break;
 357               		.loc 1 122 0
 358 014a 8F71      		andi r24,lo8(31)
 359               	.LVL33:
 360 014c C82F      		mov r28,r24
 361               	.LVL34:
 362 014e D0E0      		ldi r29,0
 363 0150 DC2F      		mov r29,r28
 364 0152 CC27      		clr r28
 365               	.LVL35:
 366 0154 D062      		ori r29,32
 367               	.LVL36:
 123:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 368               		.loc 1 123 0
 369 0156 00C0      		rjmp .L10
 370               	.LVL37:
 371               	.L26:
  54:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 372               		.loc 1 54 0
 373 0158 C115      		cp r28,__zero_reg__
 374 015a 2AE5      		ldi r18,90
 375 015c D207      		cpc r29,r18
 376 015e 00F4      		brsh .+2
 377 0160 00C0      		rjmp .L29
 378 0162 CE01      		movw r24,r28
 379               	.LVL38:
 380 0164 9056      		subi r25,96
 381 0166 8115      		cp r24,__zero_reg__
 382 0168 9042      		sbci r25,32
 383 016a 00F0      		brlo .+2
 384 016c 00C0      		rjmp .L6
 133:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 385               		.loc 1 133 0
 386 016e 8D2F      		mov r24,r29
 387 0170 8F71      		andi r24,lo8(31)
 388 0172 0E94 0000 		call mod_config
 389               	.LVL39:
 390 0176 DD27      		clr r29
 391               	.LVL40:
 392 0178 D062      		ori r29,32
 134:quantum/keymap_common.c ****             break;
 393               		.loc 1 134 0
 394 017a 8F71      		andi r24,lo8(31)
 395               	.LVL41:
 396 017c D82B      		or r29,r24
 397               	.LVL42:
 135:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
 398               		.loc 1 135 0
 399 017e 00C0      		rjmp .L10
 400               	.LVL43:
 401               	.L12:
  63:quantum/keymap_common.c ****             break;
 402               		.loc 1 63 0
 403 0180 C53A      		cpi r28,-91
 404 0182 D105      		cpc r29,__zero_reg__
 405 0184 01F4      		brne .+2
 406 0186 00C0      		rjmp .L32
  63:quantum/keymap_common.c ****             break;
 407               		.loc 1 63 0 is_stmt 0 discriminator 1
 408 0188 C63A      		cpi r28,-90
 409 018a D105      		cpc r29,__zero_reg__
 410 018c 01F0      		breq .+2
 411 018e 00C0      		rjmp .L33
 412               	.LVL44:
  63:quantum/keymap_common.c ****             break;
 413               		.loc 1 63 0
 414 0190 C2E8      		ldi r28,lo8(-126)
 415 0192 D0E4      		ldi r29,lo8(64)
 416 0194 00C0      		rjmp .L10
 417               	.LVL45:
 418               	.L13:
  66:quantum/keymap_common.c ****             break;
 419               		.loc 1 66 0 is_stmt 1
 420 0196 C83A      		cpi r28,-88
 421 0198 D105      		cpc r29,__zero_reg__
 422 019a 01F4      		brne .+2
 423 019c 00C0      		rjmp .L34
  66:quantum/keymap_common.c ****             break;
 424               		.loc 1 66 0 is_stmt 0 discriminator 1
 425 019e C93A      		cpi r28,-87
 426 01a0 D105      		cpc r29,__zero_reg__
 427 01a2 01F4      		brne .+2
 428 01a4 00C0      		rjmp .L35
  66:quantum/keymap_common.c ****             break;
 429               		.loc 1 66 0 discriminator 3
 430 01a6 CA3A      		cpi r28,-86
 431 01a8 D105      		cpc r29,__zero_reg__
 432 01aa 01F4      		brne .+2
 433 01ac 00C0      		rjmp .L36
  66:quantum/keymap_common.c ****             break;
 434               		.loc 1 66 0 discriminator 5
 435 01ae CB3A      		cpi r28,-85
 436 01b0 D105      		cpc r29,__zero_reg__
 437 01b2 01F4      		brne .+2
 438 01b4 00C0      		rjmp .L37
  66:quantum/keymap_common.c ****             break;
 439               		.loc 1 66 0 discriminator 7
 440 01b6 CC3A      		cpi r28,-84
 441 01b8 D105      		cpc r29,__zero_reg__
 442 01ba 01F4      		brne .+2
 443 01bc 00C0      		rjmp .L38
  66:quantum/keymap_common.c ****             break;
 444               		.loc 1 66 0 discriminator 9
 445 01be CB3B      		cpi r28,-69
 446 01c0 D105      		cpc r29,__zero_reg__
 447 01c2 01F4      		brne .+2
 448 01c4 00C0      		rjmp .L39
  66:quantum/keymap_common.c ****             break;
 449               		.loc 1 66 0 discriminator 11
 450 01c6 CC3B      		cpi r28,-68
 451 01c8 D105      		cpc r29,__zero_reg__
 452 01ca 01F4      		brne .+2
 453 01cc 00C0      		rjmp .L40
  66:quantum/keymap_common.c ****             break;
 454               		.loc 1 66 0 discriminator 13
 455 01ce CD3A      		cpi r28,-83
 456 01d0 D105      		cpc r29,__zero_reg__
 457 01d2 01F4      		brne .+2
 458 01d4 00C0      		rjmp .L41
  66:quantum/keymap_common.c ****             break;
 459               		.loc 1 66 0 discriminator 15
 460 01d6 C03B      		cpi r28,-80
 461 01d8 D105      		cpc r29,__zero_reg__
 462 01da 01F4      		brne .+2
 463 01dc 00C0      		rjmp .L42
  66:quantum/keymap_common.c ****             break;
 464               		.loc 1 66 0 discriminator 17
 465 01de CE3A      		cpi r28,-82
 466 01e0 D105      		cpc r29,__zero_reg__
 467 01e2 01F4      		brne .+2
 468 01e4 00C0      		rjmp .L43
  66:quantum/keymap_common.c ****             break;
 469               		.loc 1 66 0 discriminator 19
 470 01e6 CF3A      		cpi r28,-81
 471 01e8 D105      		cpc r29,__zero_reg__
 472 01ea 01F4      		brne .+2
 473 01ec 00C0      		rjmp .L44
  66:quantum/keymap_common.c ****             break;
 474               		.loc 1 66 0 discriminator 21
 475 01ee C13B      		cpi r28,-79
 476 01f0 D105      		cpc r29,__zero_reg__
 477 01f2 01F4      		brne .+2
 478 01f4 00C0      		rjmp .L45
  66:quantum/keymap_common.c ****             break;
 479               		.loc 1 66 0 discriminator 23
 480 01f6 C23B      		cpi r28,-78
 481 01f8 D105      		cpc r29,__zero_reg__
 482 01fa 01F4      		brne .+2
 483 01fc 00C0      		rjmp .L46
  66:quantum/keymap_common.c ****             break;
 484               		.loc 1 66 0 discriminator 25
 485 01fe C33B      		cpi r28,-77
 486 0200 D105      		cpc r29,__zero_reg__
 487 0202 01F4      		brne .+2
 488 0204 00C0      		rjmp .L47
  66:quantum/keymap_common.c ****             break;
 489               		.loc 1 66 0 discriminator 27
 490 0206 C43B      		cpi r28,-76
 491 0208 D105      		cpc r29,__zero_reg__
 492 020a 01F4      		brne .+2
 493 020c 00C0      		rjmp .L48
  66:quantum/keymap_common.c ****             break;
 494               		.loc 1 66 0 discriminator 29
 495 020e C53B      		cpi r28,-75
 496 0210 D105      		cpc r29,__zero_reg__
 497 0212 01F4      		brne .+2
 498 0214 00C0      		rjmp .L49
  66:quantum/keymap_common.c ****             break;
 499               		.loc 1 66 0 discriminator 31
 500 0216 C63B      		cpi r28,-74
 501 0218 D105      		cpc r29,__zero_reg__
 502 021a 01F4      		brne .+2
 503 021c 00C0      		rjmp .L50
  66:quantum/keymap_common.c ****             break;
 504               		.loc 1 66 0 discriminator 33
 505 021e C73B      		cpi r28,-73
 506 0220 D105      		cpc r29,__zero_reg__
 507 0222 01F4      		brne .+2
 508 0224 00C0      		rjmp .L51
  66:quantum/keymap_common.c ****             break;
 509               		.loc 1 66 0 discriminator 35
 510 0226 C83B      		cpi r28,-72
 511 0228 D105      		cpc r29,__zero_reg__
 512 022a 01F4      		brne .+2
 513 022c 00C0      		rjmp .L52
  66:quantum/keymap_common.c ****             break;
 514               		.loc 1 66 0 discriminator 37
 515 022e C93B      		cpi r28,-71
 516 0230 D105      		cpc r29,__zero_reg__
 517 0232 01F4      		brne .+2
 518 0234 00C0      		rjmp .L53
  66:quantum/keymap_common.c ****             break;
 519               		.loc 1 66 0 discriminator 39
 520 0236 CD3B      		cpi r28,-67
 521 0238 D105      		cpc r29,__zero_reg__
 522 023a 01F4      		brne .+2
 523 023c 00C0      		rjmp .L54
  66:quantum/keymap_common.c ****             break;
 524               		.loc 1 66 0 discriminator 41
 525 023e CE3B      		cpi r28,-66
 526 0240 D105      		cpc r29,__zero_reg__
 527 0242 01F4      		brne .+2
 528 0244 00C0      		rjmp .L55
  66:quantum/keymap_common.c ****             break;
 529               		.loc 1 66 0 discriminator 43
 530 0246 CA3B      		cpi r28,-70
 531 0248 D105      		cpc r29,__zero_reg__
 532 024a 01F4      		brne .+2
 533 024c 00C0      		rjmp .L56
 534               	.LVL46:
  66:quantum/keymap_common.c ****             break;
 535               		.loc 1 66 0
 536 024e C0E0      		ldi r28,0
 537 0250 D4E4      		ldi r29,lo8(68)
 538 0252 00C0      		rjmp .L10
 539               	.LVL47:
 540               	.L67:
  82:quantum/keymap_common.c ****             break;
 541               		.loc 1 82 0 is_stmt 1
 542 0254 0E94 0000 		call keymap_function_id_to_action
 543               	.LVL48:
 544 0258 EC01      		movw r28,r24
 545               	.LVL49:
  83:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
 546               		.loc 1 83 0
 547 025a 00C0      		rjmp .L10
 548               	.LVL50:
 549               	.L62:
 550 025c CE01      		movw r24,r28
 551 025e 9927      		clr r25
  85:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 552               		.loc 1 85 0
 553 0260 D3FF      		sbrs r29,3
 554 0262 00C0      		rjmp .L31
 555               	.LVL51:
  86:quantum/keymap_common.c ****             else
 556               		.loc 1 86 0
 557 0264 EC01      		movw r28,r24
 558 0266 D86C      		ori r29,200
 559               	.LVL52:
 560 0268 00C0      		rjmp .L10
 561               	.LVL53:
 562               	.L31:
  88:quantum/keymap_common.c ****             break;
 563               		.loc 1 88 0
 564 026a EC01      		movw r28,r24
 565 026c D06C      		ori r29,192
 566               	.LVL54:
 567 026e 00C0      		rjmp .L10
 568               	.LVL55:
 569               	.L8:
  91:quantum/keymap_common.c ****             break;
 570               		.loc 1 91 0
 571 0270 DF70      		andi r29,15
 572               	.LVL56:
 573 0272 D06A      		ori r29,160
 574               	.LVL57:
  92:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 575               		.loc 1 92 0
 576 0274 00C0      		rjmp .L10
 577               	.LVL58:
 578               	.L69:
 102:quantum/keymap_common.c ****             break;
 579               		.loc 1 102 0
 580 0276 DC2F      		mov r29,r28
 581 0278 CC27      		clr r28
 582               	.LVL59:
 583 027a C16F      		ori r28,241
 584 027c D06A      		ori r29,160
 585               	.LVL60:
 103:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 586               		.loc 1 103 0
 587 027e 00C0      		rjmp .L10
 588               	.LVL61:
 589               	.L64:
 112:quantum/keymap_common.c ****             break;
 590               		.loc 1 112 0
 591 0280 C1E0      		ldi r28,lo8(1)
 592 0282 D0E0      		ldi r29,0
 593               	.LVL62:
 594 0284 00C0      		rjmp 2f
 595               		1:
 596 0286 CC0F      		lsl r28
 597 0288 DD1F      		rol r29
 598               		2:
 599 028a 2A95      		dec r18
 600 028c 02F4      		brpl 1b
 601 028e 20E2      		ldi r18,lo8(32)
 602 0290 829F      		mul r24,r18
 603 0292 C001      		movw r24,r0
 604 0294 1124      		clr __zero_reg__
 605 0296 C82B      		or r28,r24
 606 0298 D92B      		or r29,r25
 607               	.LVL63:
 608 029a DA68      		ori r29,138
 609               	.LVL64:
 113:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 610               		.loc 1 113 0
 611 029c 00C0      		rjmp .L10
 612               	.LVL65:
 613               	.L20:
 117:quantum/keymap_common.c ****             break;
 614               		.loc 1 117 0
 615 029e DC2F      		mov r29,r28
 616 02a0 CC27      		clr r28
 617               	.LVL66:
 618 02a2 C46F      		ori r28,244
 619 02a4 D06A      		ori r29,160
 620               	.LVL67:
 118:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 621               		.loc 1 118 0
 622 02a6 00C0      		rjmp .L10
 623               	.LVL68:
 624               	.L27:
 125:quantum/keymap_common.c ****             break;
 625               		.loc 1 125 0
 626 02a8 DC2F      		mov r29,r28
 627 02aa CC27      		clr r28
 628               	.LVL69:
 629 02ac C06F      		ori r28,240
 630 02ae D06A      		ori r29,160
 631               	.LVL70:
 126:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 632               		.loc 1 126 0
 633 02b0 00C0      		rjmp .L10
 634               	.LVL71:
 635               	.L29:
 128:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 636               		.loc 1 128 0
 637 02b2 8C2F      		mov r24,r28
 638               	.LVL72:
 639 02b4 8F70      		andi r24,lo8(15)
 640 02b6 0E94 0000 		call mod_config
 641               	.LVL73:
 130:quantum/keymap_common.c ****             break;
 642               		.loc 1 130 0
 643 02ba 94E0      		ldi r25,4
 644               		1:
 645 02bc D695      		lsr r29
 646 02be C795      		ror r28
 647 02c0 9A95      		dec r25
 648 02c2 01F4      		brne 1b
 649               	.LVL74:
 650 02c4 CF70      		andi r28,lo8(15)
 651 02c6 D0E0      		ldi r29,0
 652 02c8 DC2F      		mov r29,r28
 653 02ca CC27      		clr r28
 654 02cc D069      		ori r29,144
 655               	.LVL75:
 656 02ce C82B      		or r28,r24
 657               	.LVL76:
 131:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 658               		.loc 1 131 0
 659 02d0 00C0      		rjmp .L10
 660               	.LVL77:
 661               	.L6:
 163:quantum/keymap_common.c ****             break;
 662               		.loc 1 163 0
 663 02d2 C0E0      		ldi r28,0
 664 02d4 D0E0      		ldi r29,0
 164:quantum/keymap_common.c ****     }
 665               		.loc 1 164 0
 666 02d6 00C0      		rjmp .L10
 667               	.LVL78:
 668               	.L32:
  63:quantum/keymap_common.c ****             break;
 669               		.loc 1 63 0
 670 02d8 C1E8      		ldi r28,lo8(-127)
 671 02da D0E4      		ldi r29,lo8(64)
 672 02dc 00C0      		rjmp .L10
 673               	.LVL79:
 674               	.L33:
 675 02de C3E8      		ldi r28,lo8(-125)
 676 02e0 D0E4      		ldi r29,lo8(64)
 677 02e2 00C0      		rjmp .L10
 678               	.LVL80:
 679               	.L34:
  66:quantum/keymap_common.c ****             break;
 680               		.loc 1 66 0
 681 02e4 C2EE      		ldi r28,lo8(-30)
 682 02e6 D4E4      		ldi r29,lo8(68)
 683 02e8 00C0      		rjmp .L10
 684               	.LVL81:
 685               	.L35:
 686 02ea C9EE      		ldi r28,lo8(-23)
 687 02ec D4E4      		ldi r29,lo8(68)
 688 02ee 00C0      		rjmp .L10
 689               	.LVL82:
 690               	.L36:
 691 02f0 CAEE      		ldi r28,lo8(-22)
 692 02f2 D4E4      		ldi r29,lo8(68)
 693 02f4 00C0      		rjmp .L10
 694               	.LVL83:
 695               	.L37:
 696 02f6 C5EB      		ldi r28,lo8(-75)
 697 02f8 D4E4      		ldi r29,lo8(68)
 698 02fa 00C0      		rjmp .L10
 699               	.LVL84:
 700               	.L38:
 701 02fc C6EB      		ldi r28,lo8(-74)
 702 02fe D4E4      		ldi r29,lo8(68)
 703 0300 00C0      		rjmp .L10
 704               	.LVL85:
 705               	.L39:
 706 0302 C3EB      		ldi r28,lo8(-77)
 707 0304 D4E4      		ldi r29,lo8(68)
 708 0306 00C0      		rjmp .L10
 709               	.LVL86:
 710               	.L40:
 711 0308 C4EB      		ldi r28,lo8(-76)
 712 030a D4E4      		ldi r29,lo8(68)
 713 030c 00C0      		rjmp .L10
 714               	.LVL87:
 715               	.L41:
 716 030e C7EB      		ldi r28,lo8(-73)
 717 0310 D4E4      		ldi r29,lo8(68)
 718 0312 00C0      		rjmp .L10
 719               	.LVL88:
 720               	.L42:
 721 0314 CCEC      		ldi r28,lo8(-52)
 722 0316 D4E4      		ldi r29,lo8(68)
 723 0318 00C0      		rjmp .L10
 724               	.LVL89:
 725               	.L43:
 726 031a CDEC      		ldi r28,lo8(-51)
 727 031c D4E4      		ldi r29,lo8(68)
 728 031e 00C0      		rjmp .L10
 729               	.LVL90:
 730               	.L44:
 731 0320 C3E8      		ldi r28,lo8(-125)
 732 0322 D5E4      		ldi r29,lo8(69)
 733 0324 00C0      		rjmp .L10
 734               	.LVL91:
 735               	.L45:
 736 0326 CAE8      		ldi r28,lo8(-118)
 737 0328 D5E4      		ldi r29,lo8(69)
 738 032a 00C0      		rjmp .L10
 739               	.LVL92:
 740               	.L46:
 741 032c C2E9      		ldi r28,lo8(-110)
 742 032e D5E4      		ldi r29,lo8(69)
 743 0330 00C0      		rjmp .L10
 744               	.LVL93:
 745               	.L47:
 746 0332 C4E9      		ldi r28,lo8(-108)
 747 0334 D5E4      		ldi r29,lo8(69)
 748 0336 00C0      		rjmp .L10
 749               	.LVL94:
 750               	.L48:
 751 0338 C1E2      		ldi r28,lo8(33)
 752 033a D6E4      		ldi r29,lo8(70)
 753 033c 00C0      		rjmp .L10
 754               	.LVL95:
 755               	.L49:
 756 033e C3E2      		ldi r28,lo8(35)
 757 0340 D6E4      		ldi r29,lo8(70)
 758 0342 00C0      		rjmp .L10
 759               	.LVL96:
 760               	.L50:
 761 0344 C4E2      		ldi r28,lo8(36)
 762 0346 D6E4      		ldi r29,lo8(70)
 763 0348 00C0      		rjmp .L10
 764               	.LVL97:
 765               	.L51:
 766 034a C5E2      		ldi r28,lo8(37)
 767 034c D6E4      		ldi r29,lo8(70)
 768 034e 00C0      		rjmp .L10
 769               	.LVL98:
 770               	.L52:
 771 0350 C6E2      		ldi r28,lo8(38)
 772 0352 D6E4      		ldi r29,lo8(70)
 773 0354 00C0      		rjmp .L10
 774               	.LVL99:
 775               	.L53:
 776 0356 C7E2      		ldi r28,lo8(39)
 777 0358 D6E4      		ldi r29,lo8(70)
 778 035a 00C0      		rjmp .L10
 779               	.LVL100:
 780               	.L54:
 781 035c CFE6      		ldi r28,lo8(111)
 782 035e D4E4      		ldi r29,lo8(68)
 783 0360 00C0      		rjmp .L10
 784               	.LVL101:
 785               	.L55:
 786 0362 C0E7      		ldi r28,lo8(112)
 787 0364 D4E4      		ldi r29,lo8(68)
 788 0366 00C0      		rjmp .L10
 789               	.LVL102:
 790               	.L56:
 791 0368 CAE2      		ldi r28,lo8(42)
 792 036a D6E4      		ldi r29,lo8(70)
 793               	.LVL103:
 794               	.L10:
 167:quantum/keymap_common.c **** 
 795               		.loc 1 167 0
 796 036c CE01      		movw r24,r28
 797               	/* epilogue start */
 798 036e DF91      		pop r29
 799 0370 CF91      		pop r28
 800 0372 0895      		ret
 801               		.cfi_endproc
 802               	.LFE20:
 804               		.weak	fn_actions
 805               		.section	.progmem.data.fn_actions,"a",@progbits
 808               	fn_actions:
 809               		.text
 810               	.Letext0:
 811               		.file 2 "/usr/lib/avr/include/stdint.h"
 812               		.file 3 "tmk_core/common/keyboard.h"
 813               		.file 4 "tmk_core/common/keycode.h"
 814               		.file 5 "tmk_core/common/action_code.h"
 815               		.file 6 "tmk_core/common/action_macro.h"
 816               		.file 7 "tmk_core/common/action.h"
 817               		.file 8 "tmk_core/common/report.h"
 818               		.file 9 "quantum/quantum_keycodes.h"
 819               		.file 10 "quantum/keymap.h"
 820               		.file 11 "tmk_core/common/action_util.h"
 821               		.file 12 "quantum/keycode_config.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_common.c
     /tmp/ccYnsgQr.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccYnsgQr.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccYnsgQr.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccYnsgQr.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccYnsgQr.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccYnsgQr.s:13     .text.action_get_macro:0000000000000000 action_get_macro
     /tmp/ccYnsgQr.s:34     .text.action_function:0000000000000000 action_function
     /tmp/ccYnsgQr.s:50     .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
     /tmp/ccYnsgQr.s:96     .text.keymap_function_id_to_action:0000000000000000 keymap_function_id_to_action
     /tmp/ccYnsgQr.s:808    .progmem.data.fn_actions:0000000000000000 fn_actions
     /tmp/ccYnsgQr.s:131    .text.action_for_key:0000000000000000 action_for_key

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
